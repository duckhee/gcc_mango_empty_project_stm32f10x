ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ParTest.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.vParTestInitialise,"ax",%progbits
  20              		.align	2
  21              		.global	vParTestInitialise
  22              		.thumb
  23              		.thumb_func
  25              	vParTestInitialise:
  26              	.LFB27:
  27              		.file 1 "FreeRTOS/parTest/ParTest.c"
   1:FreeRTOS/parTest/ParTest.c **** /*
   2:FreeRTOS/parTest/ParTest.c **** 	FreeRTOS V5.4.2 - Copyright (C) 2009 Real Time Engineers Ltd.
   3:FreeRTOS/parTest/ParTest.c **** 
   4:FreeRTOS/parTest/ParTest.c **** 	This file is part of the FreeRTOS distribution.
   5:FreeRTOS/parTest/ParTest.c **** 
   6:FreeRTOS/parTest/ParTest.c **** 	FreeRTOS is free software; you can redistribute it and/or modify it	under 
   7:FreeRTOS/parTest/ParTest.c **** 	the terms of the GNU General Public License (version 2) as published by the 
   8:FreeRTOS/parTest/ParTest.c **** 	Free Software Foundation and modified by the FreeRTOS exception.
   9:FreeRTOS/parTest/ParTest.c **** 	**NOTE** The exception to the GPL is included to allow you to distribute a
  10:FreeRTOS/parTest/ParTest.c **** 	combined work that includes FreeRTOS without being obliged to provide the 
  11:FreeRTOS/parTest/ParTest.c **** 	source code for proprietary components outside of the FreeRTOS kernel.  
  12:FreeRTOS/parTest/ParTest.c **** 	Alternative commercial license and support terms are also available upon 
  13:FreeRTOS/parTest/ParTest.c **** 	request.  See the licensing section of http://www.FreeRTOS.org for full 
  14:FreeRTOS/parTest/ParTest.c **** 	license details.
  15:FreeRTOS/parTest/ParTest.c **** 
  16:FreeRTOS/parTest/ParTest.c **** 	FreeRTOS is distributed in the hope that it will be useful,	but WITHOUT
  17:FreeRTOS/parTest/ParTest.c **** 	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  18:FreeRTOS/parTest/ParTest.c **** 	FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  19:FreeRTOS/parTest/ParTest.c **** 	more details.
  20:FreeRTOS/parTest/ParTest.c **** 
  21:FreeRTOS/parTest/ParTest.c **** 	You should have received a copy of the GNU General Public License along
  22:FreeRTOS/parTest/ParTest.c **** 	with FreeRTOS; if not, write to the Free Software Foundation, Inc., 59
  23:FreeRTOS/parTest/ParTest.c **** 	Temple Place, Suite 330, Boston, MA  02111-1307  USA.
  24:FreeRTOS/parTest/ParTest.c **** 
  25:FreeRTOS/parTest/ParTest.c **** 
  26:FreeRTOS/parTest/ParTest.c **** 	***************************************************************************
  27:FreeRTOS/parTest/ParTest.c **** 	*                                                                         *
  28:FreeRTOS/parTest/ParTest.c **** 	* Looking for a quick start?  Then check out the FreeRTOS eBook!          *
  29:FreeRTOS/parTest/ParTest.c **** 	* See http://www.FreeRTOS.org/Documentation for details                   *
  30:FreeRTOS/parTest/ParTest.c **** 	*                                                                         *
  31:FreeRTOS/parTest/ParTest.c **** 	***************************************************************************
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s 			page 2


  32:FreeRTOS/parTest/ParTest.c **** 
  33:FreeRTOS/parTest/ParTest.c **** 	1 tab == 4 spaces!
  34:FreeRTOS/parTest/ParTest.c **** 
  35:FreeRTOS/parTest/ParTest.c **** 	Please ensure to read the configuration and relevant port sections of the
  36:FreeRTOS/parTest/ParTest.c **** 	online documentation.
  37:FreeRTOS/parTest/ParTest.c **** 
  38:FreeRTOS/parTest/ParTest.c **** 	http://www.FreeRTOS.org - Documentation, latest information, license and
  39:FreeRTOS/parTest/ParTest.c **** 	contact details.
  40:FreeRTOS/parTest/ParTest.c **** 
  41:FreeRTOS/parTest/ParTest.c **** 	http://www.SafeRTOS.com - A version that is certified for use in safety
  42:FreeRTOS/parTest/ParTest.c **** 	critical systems.
  43:FreeRTOS/parTest/ParTest.c **** 
  44:FreeRTOS/parTest/ParTest.c **** 	http://www.OpenRTOS.com - Commercial support, development, porting,
  45:FreeRTOS/parTest/ParTest.c **** 	licensing and training services.
  46:FreeRTOS/parTest/ParTest.c **** */
  47:FreeRTOS/parTest/ParTest.c **** 
  48:FreeRTOS/parTest/ParTest.c **** /*-----------------------------------------------------------
  49:FreeRTOS/parTest/ParTest.c ****  * Simple parallel port IO routines.
  50:FreeRTOS/parTest/ParTest.c ****  *-----------------------------------------------------------*/
  51:FreeRTOS/parTest/ParTest.c **** 
  52:FreeRTOS/parTest/ParTest.c **** /* FreeRTOS.org includes. */
  53:FreeRTOS/parTest/ParTest.c **** #include "FreeRTOS.h"
  54:FreeRTOS/parTest/ParTest.c **** #include "task.h"
  55:FreeRTOS/parTest/ParTest.c **** #include "partest.h"
  56:FreeRTOS/parTest/ParTest.c **** 
  57:FreeRTOS/parTest/ParTest.c **** /* Library includes. */
  58:FreeRTOS/parTest/ParTest.c **** #include "stm32f10x_conf.h"
  59:FreeRTOS/parTest/ParTest.c **** 
  60:FreeRTOS/parTest/ParTest.c **** #define partstMAX_OUTPUT_LED	( 4 )
  61:FreeRTOS/parTest/ParTest.c **** #define partstFIRST_LED			GPIO_Pin_6
  62:FreeRTOS/parTest/ParTest.c **** 
  63:FreeRTOS/parTest/ParTest.c **** static unsigned portSHORT usOutputValue = 0;
  64:FreeRTOS/parTest/ParTest.c **** 
  65:FreeRTOS/parTest/ParTest.c **** /*-----------------------------------------------------------*/
  66:FreeRTOS/parTest/ParTest.c **** 
  67:FreeRTOS/parTest/ParTest.c **** void vParTestInitialise( void )
  68:FreeRTOS/parTest/ParTest.c **** {
  28              		.loc 1 68 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  69:FreeRTOS/parTest/ParTest.c **** GPIO_InitTypeDef GPIO_InitStructure;
  70:FreeRTOS/parTest/ParTest.c **** 
  71:FreeRTOS/parTest/ParTest.c **** 	/* Configure PC.06, PC.07, PC.08 and PC.09 as output push-pull */
  72:FreeRTOS/parTest/ParTest.c **** 	GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9;
  39              		.loc 1 72 0
  40 0004 4FF47073 		mov	r3, #960
  41 0008 ADF80430 		strh	r3, [sp, #4]	@ movhi
  73:FreeRTOS/parTest/ParTest.c **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
  42              		.loc 1 73 0
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s 			page 3


  43 000c 1023     		movs	r3, #16
  44 000e 8DF80730 		strb	r3, [sp, #7]
  74:FreeRTOS/parTest/ParTest.c **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  45              		.loc 1 74 0
  46 0012 0323     		movs	r3, #3
  47 0014 8DF80630 		strb	r3, [sp, #6]
  75:FreeRTOS/parTest/ParTest.c **** 	GPIO_Init( GPIOC, &GPIO_InitStructure );
  48              		.loc 1 75 0
  49 0018 01A9     		add	r1, sp, #4
  50 001a 0348     		ldr	r0, .L3
  51 001c FFF7FEFF 		bl	GPIO_Init
  52              	.LVL0:
  76:FreeRTOS/parTest/ParTest.c **** }
  53              		.loc 1 76 0
  54 0020 03B0     		add	sp, sp, #12
  55              	.LCFI2:
  56              		.cfi_def_cfa_offset 4
  57              		@ sp needed
  58 0022 5DF804FB 		ldr	pc, [sp], #4
  59              	.L4:
  60 0026 00BF     		.align	2
  61              	.L3:
  62 0028 00100140 		.word	1073811456
  63              		.cfi_endproc
  64              	.LFE27:
  66              		.section	.text.vParTestSetLED,"ax",%progbits
  67              		.align	2
  68              		.global	vParTestSetLED
  69              		.thumb
  70              		.thumb_func
  72              	vParTestSetLED:
  73              	.LFB28:
  77:FreeRTOS/parTest/ParTest.c **** /*-----------------------------------------------------------*/
  78:FreeRTOS/parTest/ParTest.c **** 
  79:FreeRTOS/parTest/ParTest.c **** void vParTestSetLED( unsigned portBASE_TYPE uxLED, signed portBASE_TYPE xValue )
  80:FreeRTOS/parTest/ParTest.c **** {
  74              		.loc 1 80 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL1:
  79 0000 38B5     		push	{r3, r4, r5, lr}
  80              	.LCFI3:
  81              		.cfi_def_cfa_offset 16
  82              		.cfi_offset 3, -16
  83              		.cfi_offset 4, -12
  84              		.cfi_offset 5, -8
  85              		.cfi_offset 14, -4
  86 0002 0446     		mov	r4, r0
  87 0004 0D46     		mov	r5, r1
  81:FreeRTOS/parTest/ParTest.c **** unsigned portSHORT usBit;
  82:FreeRTOS/parTest/ParTest.c **** 
  83:FreeRTOS/parTest/ParTest.c **** 	vTaskSuspendAll();
  88              		.loc 1 83 0
  89 0006 FFF7FEFF 		bl	vTaskSuspendAll
  90              	.LVL2:
  84:FreeRTOS/parTest/ParTest.c **** 	{
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s 			page 4


  85:FreeRTOS/parTest/ParTest.c **** 		if( uxLED < partstMAX_OUTPUT_LED )
  91              		.loc 1 85 0
  92 000a 032C     		cmp	r4, #3
  93 000c 13D8     		bhi	.L6
  86:FreeRTOS/parTest/ParTest.c **** 		{
  87:FreeRTOS/parTest/ParTest.c **** 			usBit = partstFIRST_LED << uxLED;
  94              		.loc 1 87 0
  95 000e 4020     		movs	r0, #64
  96 0010 A040     		lsls	r0, r0, r4
  97 0012 80B2     		uxth	r0, r0
  98              	.LVL3:
  88:FreeRTOS/parTest/ParTest.c **** 
  89:FreeRTOS/parTest/ParTest.c **** 			if( xValue == pdFALSE )
  99              		.loc 1 89 0
 100 0014 35B9     		cbnz	r5, .L7
  90:FreeRTOS/parTest/ParTest.c **** 			{
  91:FreeRTOS/parTest/ParTest.c **** 				usBit ^= ( unsigned portSHORT ) 0xffff;
 101              		.loc 1 91 0
 102 0016 C043     		mvns	r0, r0
 103              	.LVL4:
 104 0018 80B2     		uxth	r0, r0
 105              	.LVL5:
  92:FreeRTOS/parTest/ParTest.c **** 				usOutputValue &= usBit;
 106              		.loc 1 92 0
 107 001a 084A     		ldr	r2, .L10
 108 001c 1388     		ldrh	r3, [r2]
 109 001e 1840     		ands	r0, r0, r3
 110              	.LVL6:
 111 0020 1080     		strh	r0, [r2]	@ movhi
 112 0022 03E0     		b	.L8
 113              	.LVL7:
 114              	.L7:
  93:FreeRTOS/parTest/ParTest.c **** 			}
  94:FreeRTOS/parTest/ParTest.c **** 			else
  95:FreeRTOS/parTest/ParTest.c **** 			{
  96:FreeRTOS/parTest/ParTest.c **** 				usOutputValue |= usBit;
 115              		.loc 1 96 0
 116 0024 054A     		ldr	r2, .L10
 117 0026 1388     		ldrh	r3, [r2]
 118 0028 1843     		orrs	r0, r0, r3
 119              	.LVL8:
 120 002a 1080     		strh	r0, [r2]	@ movhi
 121              	.LVL9:
 122              	.L8:
  97:FreeRTOS/parTest/ParTest.c **** 			}
  98:FreeRTOS/parTest/ParTest.c **** 
  99:FreeRTOS/parTest/ParTest.c **** 			GPIO_Write( GPIOC, usOutputValue );
 123              		.loc 1 99 0
 124 002c 034B     		ldr	r3, .L10
 125 002e 1988     		ldrh	r1, [r3]
 126 0030 0348     		ldr	r0, .L10+4
 127 0032 FFF7FEFF 		bl	GPIO_Write
 128              	.LVL10:
 129              	.L6:
 100:FreeRTOS/parTest/ParTest.c **** 		}	
 101:FreeRTOS/parTest/ParTest.c **** 	}
 102:FreeRTOS/parTest/ParTest.c **** 	xTaskResumeAll();
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s 			page 5


 130              		.loc 1 102 0
 131 0036 FFF7FEFF 		bl	xTaskResumeAll
 132              	.LVL11:
 133 003a 38BD     		pop	{r3, r4, r5, pc}
 134              	.LVL12:
 135              	.L11:
 136              		.align	2
 137              	.L10:
 138 003c 00000000 		.word	.LANCHOR0
 139 0040 00100140 		.word	1073811456
 140              		.cfi_endproc
 141              	.LFE28:
 143              		.section	.text.vParTestToggleLED,"ax",%progbits
 144              		.align	2
 145              		.global	vParTestToggleLED
 146              		.thumb
 147              		.thumb_func
 149              	vParTestToggleLED:
 150              	.LFB29:
 103:FreeRTOS/parTest/ParTest.c **** }
 104:FreeRTOS/parTest/ParTest.c **** /*-----------------------------------------------------------*/
 105:FreeRTOS/parTest/ParTest.c **** 
 106:FreeRTOS/parTest/ParTest.c **** void vParTestToggleLED( unsigned portBASE_TYPE uxLED )
 107:FreeRTOS/parTest/ParTest.c **** {
 151              		.loc 1 107 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              	.LVL13:
 156 0000 10B5     		push	{r4, lr}
 157              	.LCFI4:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 4, -8
 160              		.cfi_offset 14, -4
 161 0002 0446     		mov	r4, r0
 108:FreeRTOS/parTest/ParTest.c **** unsigned portSHORT usBit;
 109:FreeRTOS/parTest/ParTest.c **** 
 110:FreeRTOS/parTest/ParTest.c **** 	vTaskSuspendAll();
 162              		.loc 1 110 0
 163 0004 FFF7FEFF 		bl	vTaskSuspendAll
 164              	.LVL14:
 111:FreeRTOS/parTest/ParTest.c **** 	{
 112:FreeRTOS/parTest/ParTest.c **** 		if( uxLED < partstMAX_OUTPUT_LED )
 165              		.loc 1 112 0
 166 0008 032C     		cmp	r4, #3
 167 000a 14D8     		bhi	.L13
 113:FreeRTOS/parTest/ParTest.c **** 		{
 114:FreeRTOS/parTest/ParTest.c **** 			usBit = partstFIRST_LED << uxLED;
 168              		.loc 1 114 0
 169 000c 4023     		movs	r3, #64
 170 000e 03FA04F0 		lsl	r0, r3, r4
 171 0012 82B2     		uxth	r2, r0
 172              	.LVL15:
 115:FreeRTOS/parTest/ParTest.c **** 
 116:FreeRTOS/parTest/ParTest.c **** 			if( usOutputValue & usBit )
 173              		.loc 1 116 0
 174 0014 094B     		ldr	r3, .L17
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s 			page 6


 175 0016 1B88     		ldrh	r3, [r3]
 176 0018 1A42     		tst	r2, r3
 177 001a 04D0     		beq	.L14
 117:FreeRTOS/parTest/ParTest.c **** 			{
 118:FreeRTOS/parTest/ParTest.c **** 				usOutputValue &= ~usBit;
 178              		.loc 1 118 0
 179 001c 23EA0003 		bic	r3, r3, r0
 180 0020 064A     		ldr	r2, .L17
 181              	.LVL16:
 182 0022 1380     		strh	r3, [r2]	@ movhi
 183 0024 02E0     		b	.L15
 184              	.LVL17:
 185              	.L14:
 119:FreeRTOS/parTest/ParTest.c **** 			}
 120:FreeRTOS/parTest/ParTest.c **** 			else
 121:FreeRTOS/parTest/ParTest.c **** 			{
 122:FreeRTOS/parTest/ParTest.c **** 				usOutputValue |= usBit;
 186              		.loc 1 122 0
 187 0026 1343     		orrs	r3, r3, r2
 188 0028 044A     		ldr	r2, .L17
 189              	.LVL18:
 190 002a 1380     		strh	r3, [r2]	@ movhi
 191              	.L15:
 123:FreeRTOS/parTest/ParTest.c **** 			}
 124:FreeRTOS/parTest/ParTest.c **** 
 125:FreeRTOS/parTest/ParTest.c **** 			GPIO_Write( GPIOC, usOutputValue );
 192              		.loc 1 125 0
 193 002c 034B     		ldr	r3, .L17
 194 002e 1988     		ldrh	r1, [r3]
 195 0030 0348     		ldr	r0, .L17+4
 196              	.LVL19:
 197 0032 FFF7FEFF 		bl	GPIO_Write
 198              	.LVL20:
 199              	.L13:
 126:FreeRTOS/parTest/ParTest.c **** 		}
 127:FreeRTOS/parTest/ParTest.c **** 	}
 128:FreeRTOS/parTest/ParTest.c **** 	xTaskResumeAll();
 200              		.loc 1 128 0
 201 0036 FFF7FEFF 		bl	xTaskResumeAll
 202              	.LVL21:
 203 003a 10BD     		pop	{r4, pc}
 204              	.LVL22:
 205              	.L18:
 206              		.align	2
 207              	.L17:
 208 003c 00000000 		.word	.LANCHOR0
 209 0040 00100140 		.word	1073811456
 210              		.cfi_endproc
 211              	.LFE29:
 213              		.section	.bss.usOutputValue,"aw",%nobits
 214              		.align	1
 215              		.set	.LANCHOR0,. + 0
 218              	usOutputValue:
 219 0000 0000     		.space	2
 220              		.text
 221              	.Letext0:
 222              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20160926/arm-none-eabi/include/machine/_default_types
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s 			page 7


 223              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20160926/arm-none-eabi/include/sys/_stdint.h"
 224              		.file 4 "CMSIS/Core/CM3/stm32f10x.h"
 225              		.file 5 "STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 226              		.file 6 "FreeRTOS/Inc/task.h"
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ParTest.c
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s:20     .text.vParTestInitialise:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s:25     .text.vParTestInitialise:0000000000000000 vParTestInitialise
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s:62     .text.vParTestInitialise:0000000000000028 $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s:67     .text.vParTestSetLED:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s:72     .text.vParTestSetLED:0000000000000000 vParTestSetLED
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s:138    .text.vParTestSetLED:000000000000003c $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s:144    .text.vParTestToggleLED:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s:149    .text.vParTestToggleLED:0000000000000000 vParTestToggleLED
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s:208    .text.vParTestToggleLED:000000000000003c $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s:214    .bss.usOutputValue:0000000000000000 $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cc2Gz9AR.s:218    .bss.usOutputValue:0000000000000000 usOutputValue
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
GPIO_Init
vTaskSuspendAll
GPIO_Write
xTaskResumeAll
