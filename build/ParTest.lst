ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ParTest.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.vParTestInitialise,"ax",%progbits
  20              		.align	2
  21              		.global	vParTestInitialise
  22              		.thumb
  23              		.thumb_func
  25              	vParTestInitialise:
  26              	.LFB32:
  27              		.file 1 "FreeRTOS/control/Src/ParTest.c"
   1:FreeRTOS/control/Src/ParTest.c **** /*
   2:FreeRTOS/control/Src/ParTest.c ****  * FreeRTOS Kernel V10.1.1
   3:FreeRTOS/control/Src/ParTest.c ****  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:FreeRTOS/control/Src/ParTest.c ****  *
   5:FreeRTOS/control/Src/ParTest.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:FreeRTOS/control/Src/ParTest.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:FreeRTOS/control/Src/ParTest.c ****  * the Software without restriction, including without limitation the rights to
   8:FreeRTOS/control/Src/ParTest.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:FreeRTOS/control/Src/ParTest.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:FreeRTOS/control/Src/ParTest.c ****  * subject to the following conditions:
  11:FreeRTOS/control/Src/ParTest.c ****  *
  12:FreeRTOS/control/Src/ParTest.c ****  * The above copyright notice and this permission notice shall be included in all
  13:FreeRTOS/control/Src/ParTest.c ****  * copies or substantial portions of the Software.
  14:FreeRTOS/control/Src/ParTest.c ****  *
  15:FreeRTOS/control/Src/ParTest.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:FreeRTOS/control/Src/ParTest.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:FreeRTOS/control/Src/ParTest.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:FreeRTOS/control/Src/ParTest.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:FreeRTOS/control/Src/ParTest.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:FreeRTOS/control/Src/ParTest.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:FreeRTOS/control/Src/ParTest.c ****  *
  22:FreeRTOS/control/Src/ParTest.c ****  * http://www.FreeRTOS.org
  23:FreeRTOS/control/Src/ParTest.c ****  * http://aws.amazon.com/freertos
  24:FreeRTOS/control/Src/ParTest.c ****  *
  25:FreeRTOS/control/Src/ParTest.c ****  * 1 tab == 4 spaces!
  26:FreeRTOS/control/Src/ParTest.c ****  */
  27:FreeRTOS/control/Src/ParTest.c **** 
  28:FreeRTOS/control/Src/ParTest.c **** /*-----------------------------------------------------------
  29:FreeRTOS/control/Src/ParTest.c ****  * Simple parallel port IO routines.
  30:FreeRTOS/control/Src/ParTest.c ****  *-----------------------------------------------------------*/
  31:FreeRTOS/control/Src/ParTest.c **** 
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s 			page 2


  32:FreeRTOS/control/Src/ParTest.c **** /* FreeRTOS.org includes. */
  33:FreeRTOS/control/Src/ParTest.c **** #include "FreeRTOS.h"
  34:FreeRTOS/control/Src/ParTest.c **** #include "task.h"
  35:FreeRTOS/control/Src/ParTest.c **** #include "ParTest.h"
  36:FreeRTOS/control/Src/ParTest.c **** /* Library includes. */
  37:FreeRTOS/control/Src/ParTest.c **** #include "stm32f10x_conf.h"
  38:FreeRTOS/control/Src/ParTest.c **** 
  39:FreeRTOS/control/Src/ParTest.c **** #define partstMAX_OUTPUT_LED	( 3 )
  40:FreeRTOS/control/Src/ParTest.c **** #define partstFIRST_LED			GPIO_Pin_5
  41:FreeRTOS/control/Src/ParTest.c **** 
  42:FreeRTOS/control/Src/ParTest.c **** static unsigned short usOutputValue = 0;
  43:FreeRTOS/control/Src/ParTest.c **** 
  44:FreeRTOS/control/Src/ParTest.c **** /*-----------------------------------------------------------*/
  45:FreeRTOS/control/Src/ParTest.c **** 
  46:FreeRTOS/control/Src/ParTest.c **** void vParTestInitialise( void )
  47:FreeRTOS/control/Src/ParTest.c **** {
  28              		.loc 1 47 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  48:FreeRTOS/control/Src/ParTest.c **** GPIO_InitTypeDef GPIO_InitStructure;
  49:FreeRTOS/control/Src/ParTest.c **** 
  50:FreeRTOS/control/Src/ParTest.c **** 	/* Enable LED GPIO clock. */
  51:FreeRTOS/control/Src/ParTest.c **** 	//RCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOB, ENABLE );
  52:FreeRTOS/control/Src/ParTest.c **** 
  53:FreeRTOS/control/Src/ParTest.c **** 	/* Configure LED pins as output push-pull. */
  54:FreeRTOS/control/Src/ParTest.c **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_8 | GPIO_Pin_9 ;
  39              		.loc 1 54 0
  40 0004 4FF44873 		mov	r3, #800
  41 0008 ADF80430 		strh	r3, [sp, #4]	@ movhi
  55:FreeRTOS/control/Src/ParTest.c **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
  42              		.loc 1 55 0
  43 000c 1023     		movs	r3, #16
  44 000e 8DF80730 		strb	r3, [sp, #7]
  56:FreeRTOS/control/Src/ParTest.c **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  45              		.loc 1 56 0
  46 0012 0323     		movs	r3, #3
  47 0014 8DF80630 		strb	r3, [sp, #6]
  57:FreeRTOS/control/Src/ParTest.c **** 
  58:FreeRTOS/control/Src/ParTest.c **** 	GPIO_Init( GPIOB, &GPIO_InitStructure );
  48              		.loc 1 58 0
  49 0018 01A9     		add	r1, sp, #4
  50 001a 0348     		ldr	r0, .L3
  51 001c FFF7FEFF 		bl	GPIO_Init
  52              	.LVL0:
  59:FreeRTOS/control/Src/ParTest.c **** }
  53              		.loc 1 59 0
  54 0020 03B0     		add	sp, sp, #12
  55              	.LCFI2:
  56              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s 			page 3


  57              		@ sp needed
  58 0022 5DF804FB 		ldr	pc, [sp], #4
  59              	.L4:
  60 0026 00BF     		.align	2
  61              	.L3:
  62 0028 000C0140 		.word	1073810432
  63              		.cfi_endproc
  64              	.LFE32:
  66              		.section	.text.vParTestSetLED,"ax",%progbits
  67              		.align	2
  68              		.global	vParTestSetLED
  69              		.thumb
  70              		.thumb_func
  72              	vParTestSetLED:
  73              	.LFB33:
  60:FreeRTOS/control/Src/ParTest.c **** /*-----------------------------------------------------------*/
  61:FreeRTOS/control/Src/ParTest.c **** 
  62:FreeRTOS/control/Src/ParTest.c **** void vParTestSetLED( unsigned portBASE_TYPE uxLED, signed portBASE_TYPE xValue )
  63:FreeRTOS/control/Src/ParTest.c **** {
  74              		.loc 1 63 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL1:
  79 0000 38B5     		push	{r3, r4, r5, lr}
  80              	.LCFI3:
  81              		.cfi_def_cfa_offset 16
  82              		.cfi_offset 3, -16
  83              		.cfi_offset 4, -12
  84              		.cfi_offset 5, -8
  85              		.cfi_offset 14, -4
  86 0002 0446     		mov	r4, r0
  87 0004 0D46     		mov	r5, r1
  64:FreeRTOS/control/Src/ParTest.c **** unsigned short usBit;
  65:FreeRTOS/control/Src/ParTest.c **** 
  66:FreeRTOS/control/Src/ParTest.c **** 	vTaskSuspendAll();
  88              		.loc 1 66 0
  89 0006 FFF7FEFF 		bl	vTaskSuspendAll
  90              	.LVL2:
  67:FreeRTOS/control/Src/ParTest.c **** 	{
  68:FreeRTOS/control/Src/ParTest.c **** 		if( uxLED < partstMAX_OUTPUT_LED )
  91              		.loc 1 68 0
  92 000a 022C     		cmp	r4, #2
  93 000c 1AD8     		bhi	.L6
  69:FreeRTOS/control/Src/ParTest.c **** 		{
  70:FreeRTOS/control/Src/ParTest.c **** 			//usBit = partstFIRST_LED << uxLED;
  71:FreeRTOS/control/Src/ParTest.c **** 
  72:FreeRTOS/control/Src/ParTest.c ****             if(uxLED == 0)
  94              		.loc 1 72 0
  95 000e 1CB9     		cbnz	r4, .L7
  73:FreeRTOS/control/Src/ParTest.c ****             {
  74:FreeRTOS/control/Src/ParTest.c ****                 usBit = partstFIRST_LED << uxLED;
  96              		.loc 1 74 0
  97 0010 2020     		movs	r0, #32
  98 0012 A040     		lsls	r0, r0, r4
  99 0014 80B2     		uxth	r0, r0
 100              	.LVL3:
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s 			page 4


 101 0016 04E0     		b	.L8
 102              	.LVL4:
 103              	.L7:
  75:FreeRTOS/control/Src/ParTest.c ****             }
  76:FreeRTOS/control/Src/ParTest.c ****             else
  77:FreeRTOS/control/Src/ParTest.c ****             {
  78:FreeRTOS/control/Src/ParTest.c ****                 usBit = partstFIRST_LED << (uxLED + 2);
 104              		.loc 1 78 0
 105 0018 A01C     		adds	r0, r4, #2
 106 001a 2023     		movs	r3, #32
 107 001c 03FA00F0 		lsl	r0, r3, r0
 108 0020 80B2     		uxth	r0, r0
 109              	.LVL5:
 110              	.L8:
  79:FreeRTOS/control/Src/ParTest.c ****             }
  80:FreeRTOS/control/Src/ParTest.c **** 
  81:FreeRTOS/control/Src/ParTest.c **** 			if( xValue == pdFALSE )
 111              		.loc 1 81 0
 112 0022 35B9     		cbnz	r5, .L9
  82:FreeRTOS/control/Src/ParTest.c **** 			{
  83:FreeRTOS/control/Src/ParTest.c **** 				usBit ^= ( unsigned short ) 0xffff;
 113              		.loc 1 83 0
 114 0024 C043     		mvns	r0, r0
 115              	.LVL6:
 116 0026 80B2     		uxth	r0, r0
 117              	.LVL7:
  84:FreeRTOS/control/Src/ParTest.c **** 				usOutputValue &= usBit;
 118              		.loc 1 84 0
 119 0028 084A     		ldr	r2, .L12
 120 002a 1388     		ldrh	r3, [r2]
 121 002c 1840     		ands	r0, r0, r3
 122              	.LVL8:
 123 002e 1080     		strh	r0, [r2]	@ movhi
 124 0030 03E0     		b	.L10
 125              	.LVL9:
 126              	.L9:
  85:FreeRTOS/control/Src/ParTest.c **** 			}
  86:FreeRTOS/control/Src/ParTest.c **** 			else
  87:FreeRTOS/control/Src/ParTest.c **** 			{
  88:FreeRTOS/control/Src/ParTest.c **** 				usOutputValue |= usBit;
 127              		.loc 1 88 0
 128 0032 064A     		ldr	r2, .L12
 129 0034 1388     		ldrh	r3, [r2]
 130 0036 1843     		orrs	r0, r0, r3
 131              	.LVL10:
 132 0038 1080     		strh	r0, [r2]	@ movhi
 133              	.L10:
  89:FreeRTOS/control/Src/ParTest.c **** 			}
  90:FreeRTOS/control/Src/ParTest.c **** 
  91:FreeRTOS/control/Src/ParTest.c **** 			GPIO_Write( GPIOC, usOutputValue );
 134              		.loc 1 91 0
 135 003a 044B     		ldr	r3, .L12
 136 003c 1988     		ldrh	r1, [r3]
 137 003e 0448     		ldr	r0, .L12+4
 138 0040 FFF7FEFF 		bl	GPIO_Write
 139              	.LVL11:
 140              	.L6:
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s 			page 5


  92:FreeRTOS/control/Src/ParTest.c **** 		}	
  93:FreeRTOS/control/Src/ParTest.c **** 	}
  94:FreeRTOS/control/Src/ParTest.c **** 	xTaskResumeAll();
 141              		.loc 1 94 0
 142 0044 FFF7FEFF 		bl	xTaskResumeAll
 143              	.LVL12:
 144 0048 38BD     		pop	{r3, r4, r5, pc}
 145              	.LVL13:
 146              	.L13:
 147 004a 00BF     		.align	2
 148              	.L12:
 149 004c 00000000 		.word	.LANCHOR0
 150 0050 00100140 		.word	1073811456
 151              		.cfi_endproc
 152              	.LFE33:
 154              		.section	.text.vParTestToggleLED,"ax",%progbits
 155              		.align	2
 156              		.global	vParTestToggleLED
 157              		.thumb
 158              		.thumb_func
 160              	vParTestToggleLED:
 161              	.LFB34:
  95:FreeRTOS/control/Src/ParTest.c **** }
  96:FreeRTOS/control/Src/ParTest.c **** /*-----------------------------------------------------------*/
  97:FreeRTOS/control/Src/ParTest.c **** 
  98:FreeRTOS/control/Src/ParTest.c **** void vParTestToggleLED( unsigned portBASE_TYPE uxLED )
  99:FreeRTOS/control/Src/ParTest.c **** {
 162              		.loc 1 99 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              	.LVL14:
 167 0000 10B5     		push	{r4, lr}
 168              	.LCFI4:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 4, -8
 171              		.cfi_offset 14, -4
 172 0002 0446     		mov	r4, r0
 100:FreeRTOS/control/Src/ParTest.c **** unsigned short usBit;
 101:FreeRTOS/control/Src/ParTest.c **** 
 102:FreeRTOS/control/Src/ParTest.c **** 	vTaskSuspendAll();
 173              		.loc 1 102 0
 174 0004 FFF7FEFF 		bl	vTaskSuspendAll
 175              	.LVL15:
 103:FreeRTOS/control/Src/ParTest.c **** 	{
 104:FreeRTOS/control/Src/ParTest.c **** 		if( uxLED < partstMAX_OUTPUT_LED )
 176              		.loc 1 104 0
 177 0008 022C     		cmp	r4, #2
 178 000a 1AD8     		bhi	.L15
 105:FreeRTOS/control/Src/ParTest.c **** 		{
 106:FreeRTOS/control/Src/ParTest.c ****             /*
 107:FreeRTOS/control/Src/ParTest.c **** 			usBit = partstFIRST_LED << uxLED;
 108:FreeRTOS/control/Src/ParTest.c **** 
 109:FreeRTOS/control/Src/ParTest.c **** 			if( usOutputValue & usBit )
 110:FreeRTOS/control/Src/ParTest.c **** 			{
 111:FreeRTOS/control/Src/ParTest.c **** 				usOutputValue &= ~usBit;
 112:FreeRTOS/control/Src/ParTest.c **** 			}
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s 			page 6


 113:FreeRTOS/control/Src/ParTest.c **** 			else
 114:FreeRTOS/control/Src/ParTest.c **** 			{
 115:FreeRTOS/control/Src/ParTest.c **** 				usOutputValue |= usBit;
 116:FreeRTOS/control/Src/ParTest.c **** 			}
 117:FreeRTOS/control/Src/ParTest.c **** 
 118:FreeRTOS/control/Src/ParTest.c **** 			GPIO_Write( GPIOB, usOutputValue );
 119:FreeRTOS/control/Src/ParTest.c ****             */
 120:FreeRTOS/control/Src/ParTest.c ****            if(uxLED == 0)
 179              		.loc 1 120 0
 180 000c 1CB9     		cbnz	r4, .L16
 121:FreeRTOS/control/Src/ParTest.c ****            {
 122:FreeRTOS/control/Src/ParTest.c ****                usBit = partstFIRST_LED << uxLED;
 181              		.loc 1 122 0
 182 000e 2020     		movs	r0, #32
 183 0010 A040     		lsls	r0, r0, r4
 184 0012 80B2     		uxth	r0, r0
 185              	.LVL16:
 186 0014 04E0     		b	.L17
 187              	.LVL17:
 188              	.L16:
 123:FreeRTOS/control/Src/ParTest.c ****            }
 124:FreeRTOS/control/Src/ParTest.c ****            else
 125:FreeRTOS/control/Src/ParTest.c ****            {
 126:FreeRTOS/control/Src/ParTest.c ****                usBit = partstFIRST_LED << (uxLED + 2);
 189              		.loc 1 126 0
 190 0016 A01C     		adds	r0, r4, #2
 191 0018 2023     		movs	r3, #32
 192 001a 03FA00F0 		lsl	r0, r3, r0
 193 001e 80B2     		uxth	r0, r0
 194              	.LVL18:
 195              	.L17:
 127:FreeRTOS/control/Src/ParTest.c ****            }
 128:FreeRTOS/control/Src/ParTest.c ****            if(usOutputValue & usBit)
 196              		.loc 1 128 0
 197 0020 094B     		ldr	r3, .L21
 198 0022 1B88     		ldrh	r3, [r3]
 199 0024 1842     		tst	r0, r3
 200 0026 04D0     		beq	.L18
 129:FreeRTOS/control/Src/ParTest.c ****            {
 130:FreeRTOS/control/Src/ParTest.c ****                usOutputValue &= ~usBit;
 201              		.loc 1 130 0
 202 0028 23EA0000 		bic	r0, r3, r0
 203              	.LVL19:
 204 002c 064B     		ldr	r3, .L21
 205 002e 1880     		strh	r0, [r3]	@ movhi
 206 0030 02E0     		b	.L19
 207              	.LVL20:
 208              	.L18:
 131:FreeRTOS/control/Src/ParTest.c ****            }
 132:FreeRTOS/control/Src/ParTest.c ****            else
 133:FreeRTOS/control/Src/ParTest.c ****            {
 134:FreeRTOS/control/Src/ParTest.c ****                usOutputValue |= usBit;
 209              		.loc 1 134 0
 210 0032 1843     		orrs	r0, r0, r3
 211              	.LVL21:
 212 0034 044B     		ldr	r3, .L21
 213 0036 1880     		strh	r0, [r3]	@ movhi
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s 			page 7


 214              	.L19:
 135:FreeRTOS/control/Src/ParTest.c ****            }
 136:FreeRTOS/control/Src/ParTest.c ****            GPIO_Write(GPIOB, usOutputValue);
 215              		.loc 1 136 0
 216 0038 034B     		ldr	r3, .L21
 217 003a 1988     		ldrh	r1, [r3]
 218 003c 0348     		ldr	r0, .L21+4
 219 003e FFF7FEFF 		bl	GPIO_Write
 220              	.LVL22:
 221              	.L15:
 137:FreeRTOS/control/Src/ParTest.c **** 		}
 138:FreeRTOS/control/Src/ParTest.c **** 	}
 139:FreeRTOS/control/Src/ParTest.c **** 	xTaskResumeAll();
 222              		.loc 1 139 0
 223 0042 FFF7FEFF 		bl	xTaskResumeAll
 224              	.LVL23:
 225 0046 10BD     		pop	{r4, pc}
 226              	.LVL24:
 227              	.L22:
 228              		.align	2
 229              	.L21:
 230 0048 00000000 		.word	.LANCHOR0
 231 004c 000C0140 		.word	1073810432
 232              		.cfi_endproc
 233              	.LFE34:
 235              		.section	.bss.usOutputValue,"aw",%nobits
 236              		.align	1
 237              		.set	.LANCHOR0,. + 0
 240              	usOutputValue:
 241 0000 0000     		.space	2
 242              		.text
 243              	.Letext0:
 244              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20160926/arm-none-eabi/include/machine/_default_types
 245              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20160926/arm-none-eabi/include/sys/_stdint.h"
 246              		.file 4 "CMSIS/Core/CM3/stm32f10x.h"
 247              		.file 5 "STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 248              		.file 6 "FreeRTOS/ARM_CM3/portmacro.h"
 249              		.file 7 "FreeRTOS/Inc/task.h"
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ParTest.c
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s:20     .text.vParTestInitialise:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s:25     .text.vParTestInitialise:0000000000000000 vParTestInitialise
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s:62     .text.vParTestInitialise:0000000000000028 $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s:67     .text.vParTestSetLED:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s:72     .text.vParTestSetLED:0000000000000000 vParTestSetLED
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s:149    .text.vParTestSetLED:000000000000004c $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s:155    .text.vParTestToggleLED:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s:160    .text.vParTestToggleLED:0000000000000000 vParTestToggleLED
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s:230    .text.vParTestToggleLED:0000000000000048 $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s:236    .bss.usOutputValue:0000000000000000 $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccm8aQFd.s:240    .bss.usOutputValue:0000000000000000 usOutputValue
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
GPIO_Init
vTaskSuspendAll
GPIO_Write
xTaskResumeAll
