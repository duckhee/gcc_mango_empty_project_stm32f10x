ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"core_cm3.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.__get_PSP,"ax",%progbits
  20              		.align	2
  21              		.global	__get_PSP
  22              		.thumb
  23              		.thumb_func
  25              	__get_PSP:
  26              	.LFB0:
  27              		.file 1 "CMSIS/Core/CM3/core_cm3.c"
   1:CMSIS/Core/CM3/core_cm3.c **** /******************************************************************************
   2:CMSIS/Core/CM3/core_cm3.c ****  * @file:    core_cm3.c
   3:CMSIS/Core/CM3/core_cm3.c ****  * @purpose: CMSIS Cortex-M3 Core Peripheral Access Layer Source File
   4:CMSIS/Core/CM3/core_cm3.c ****  * @version: V1.20
   5:CMSIS/Core/CM3/core_cm3.c ****  * @date:    22. May 2009
   6:CMSIS/Core/CM3/core_cm3.c ****  *----------------------------------------------------------------------------
   7:CMSIS/Core/CM3/core_cm3.c ****  *
   8:CMSIS/Core/CM3/core_cm3.c ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:CMSIS/Core/CM3/core_cm3.c ****  *
  10:CMSIS/Core/CM3/core_cm3.c ****  * ARM Limited (ARM) is supplying this software for use with Cortex-Mx 
  11:CMSIS/Core/CM3/core_cm3.c ****  * processor based microcontrollers.  This file can be freely distributed 
  12:CMSIS/Core/CM3/core_cm3.c ****  * within development tools that are supporting such ARM based processors. 
  13:CMSIS/Core/CM3/core_cm3.c ****  *
  14:CMSIS/Core/CM3/core_cm3.c ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  15:CMSIS/Core/CM3/core_cm3.c ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  16:CMSIS/Core/CM3/core_cm3.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  17:CMSIS/Core/CM3/core_cm3.c ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  18:CMSIS/Core/CM3/core_cm3.c ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  19:CMSIS/Core/CM3/core_cm3.c ****  *
  20:CMSIS/Core/CM3/core_cm3.c ****  ******************************************************************************/
  21:CMSIS/Core/CM3/core_cm3.c **** 
  22:CMSIS/Core/CM3/core_cm3.c **** 
  23:CMSIS/Core/CM3/core_cm3.c **** 
  24:CMSIS/Core/CM3/core_cm3.c **** #include <stdint.h>
  25:CMSIS/Core/CM3/core_cm3.c **** 
  26:CMSIS/Core/CM3/core_cm3.c **** 
  27:CMSIS/Core/CM3/core_cm3.c **** /* define compiler specific symbols */
  28:CMSIS/Core/CM3/core_cm3.c **** #if defined   ( __CC_ARM   )
  29:CMSIS/Core/CM3/core_cm3.c ****   #define __ASM            __asm           /*!< asm keyword for armcc           */
  30:CMSIS/Core/CM3/core_cm3.c ****   #define __INLINE         __inline        /*!< inline keyword for armcc        */
  31:CMSIS/Core/CM3/core_cm3.c **** 
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 2


  32:CMSIS/Core/CM3/core_cm3.c **** #elif defined ( __ICCARM__ )
  33:CMSIS/Core/CM3/core_cm3.c ****   #define __ASM           __asm            /*!< asm keyword for iarcc           */
  34:CMSIS/Core/CM3/core_cm3.c ****   #define __INLINE        inline           /*!< inline keyword for iarcc. Only avaiable in High opt
  35:CMSIS/Core/CM3/core_cm3.c **** 
  36:CMSIS/Core/CM3/core_cm3.c **** #elif defined (  __GNUC__  )
  37:CMSIS/Core/CM3/core_cm3.c ****   #define __ASM             __asm          /*!< asm keyword for gcc            */
  38:CMSIS/Core/CM3/core_cm3.c ****   #define __INLINE          inline         /*!< inline keyword for gcc         */
  39:CMSIS/Core/CM3/core_cm3.c **** 
  40:CMSIS/Core/CM3/core_cm3.c **** #elif defined   (  __TASKING__  )
  41:CMSIS/Core/CM3/core_cm3.c ****   #define __ASM            __asm           /*!< asm keyword for TASKING Compiler          */
  42:CMSIS/Core/CM3/core_cm3.c ****   #define __INLINE         inline          /*!< inline keyword for TASKING Compiler       */
  43:CMSIS/Core/CM3/core_cm3.c **** 
  44:CMSIS/Core/CM3/core_cm3.c **** #endif
  45:CMSIS/Core/CM3/core_cm3.c **** 
  46:CMSIS/Core/CM3/core_cm3.c **** 
  47:CMSIS/Core/CM3/core_cm3.c **** 
  48:CMSIS/Core/CM3/core_cm3.c **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
  49:CMSIS/Core/CM3/core_cm3.c **** 
  50:CMSIS/Core/CM3/core_cm3.c **** /**
  51:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Return the Process Stack Pointer
  52:CMSIS/Core/CM3/core_cm3.c ****  *
  53:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
  54:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t ProcessStackPointer
  55:CMSIS/Core/CM3/core_cm3.c ****  *
  56:CMSIS/Core/CM3/core_cm3.c ****  * Return the actual process stack pointer
  57:CMSIS/Core/CM3/core_cm3.c ****  */
  58:CMSIS/Core/CM3/core_cm3.c **** __ASM uint32_t __get_PSP(void)
  59:CMSIS/Core/CM3/core_cm3.c **** {
  60:CMSIS/Core/CM3/core_cm3.c ****   mrs r0, psp
  61:CMSIS/Core/CM3/core_cm3.c ****   bx lr
  62:CMSIS/Core/CM3/core_cm3.c **** }
  63:CMSIS/Core/CM3/core_cm3.c **** 
  64:CMSIS/Core/CM3/core_cm3.c **** /**
  65:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Set the Process Stack Pointer
  66:CMSIS/Core/CM3/core_cm3.c ****  *
  67:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t Process Stack Pointer
  68:CMSIS/Core/CM3/core_cm3.c ****  * @return none
  69:CMSIS/Core/CM3/core_cm3.c ****  *
  70:CMSIS/Core/CM3/core_cm3.c ****  * Assign the value ProcessStackPointer to the MSP 
  71:CMSIS/Core/CM3/core_cm3.c ****  * (process stack pointer) Cortex processor register
  72:CMSIS/Core/CM3/core_cm3.c ****  */
  73:CMSIS/Core/CM3/core_cm3.c **** __ASM void __set_PSP(uint32_t topOfProcStack)
  74:CMSIS/Core/CM3/core_cm3.c **** {
  75:CMSIS/Core/CM3/core_cm3.c ****   msr psp, r0
  76:CMSIS/Core/CM3/core_cm3.c ****   bx lr
  77:CMSIS/Core/CM3/core_cm3.c **** }
  78:CMSIS/Core/CM3/core_cm3.c **** 
  79:CMSIS/Core/CM3/core_cm3.c **** /**
  80:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Return the Main Stack Pointer
  81:CMSIS/Core/CM3/core_cm3.c ****  *
  82:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
  83:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t Main Stack Pointer
  84:CMSIS/Core/CM3/core_cm3.c ****  *
  85:CMSIS/Core/CM3/core_cm3.c ****  * Return the current value of the MSP (main stack pointer)
  86:CMSIS/Core/CM3/core_cm3.c ****  * Cortex processor register
  87:CMSIS/Core/CM3/core_cm3.c ****  */
  88:CMSIS/Core/CM3/core_cm3.c **** __ASM uint32_t __get_MSP(void)
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 3


  89:CMSIS/Core/CM3/core_cm3.c **** {
  90:CMSIS/Core/CM3/core_cm3.c ****   mrs r0, msp
  91:CMSIS/Core/CM3/core_cm3.c ****   bx lr
  92:CMSIS/Core/CM3/core_cm3.c **** }
  93:CMSIS/Core/CM3/core_cm3.c **** 
  94:CMSIS/Core/CM3/core_cm3.c **** /**
  95:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Set the Main Stack Pointer
  96:CMSIS/Core/CM3/core_cm3.c ****  *
  97:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t Main Stack Pointer
  98:CMSIS/Core/CM3/core_cm3.c ****  * @return none
  99:CMSIS/Core/CM3/core_cm3.c ****  *
 100:CMSIS/Core/CM3/core_cm3.c ****  * Assign the value mainStackPointer to the MSP 
 101:CMSIS/Core/CM3/core_cm3.c ****  * (main stack pointer) Cortex processor register
 102:CMSIS/Core/CM3/core_cm3.c ****  */
 103:CMSIS/Core/CM3/core_cm3.c **** __ASM void __set_MSP(uint32_t mainStackPointer)
 104:CMSIS/Core/CM3/core_cm3.c **** {
 105:CMSIS/Core/CM3/core_cm3.c ****   msr msp, r0
 106:CMSIS/Core/CM3/core_cm3.c ****   bx lr
 107:CMSIS/Core/CM3/core_cm3.c **** }
 108:CMSIS/Core/CM3/core_cm3.c **** 
 109:CMSIS/Core/CM3/core_cm3.c **** /**
 110:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Reverse byte order in unsigned short value
 111:CMSIS/Core/CM3/core_cm3.c ****  *
 112:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint16_t value to reverse
 113:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t reversed value
 114:CMSIS/Core/CM3/core_cm3.c ****  *
 115:CMSIS/Core/CM3/core_cm3.c ****  * Reverse byte order in unsigned short value
 116:CMSIS/Core/CM3/core_cm3.c ****  */
 117:CMSIS/Core/CM3/core_cm3.c **** __ASM uint32_t __REV16(uint16_t value)
 118:CMSIS/Core/CM3/core_cm3.c **** {
 119:CMSIS/Core/CM3/core_cm3.c ****   rev16 r0, r0
 120:CMSIS/Core/CM3/core_cm3.c ****   bx lr
 121:CMSIS/Core/CM3/core_cm3.c **** }
 122:CMSIS/Core/CM3/core_cm3.c **** 
 123:CMSIS/Core/CM3/core_cm3.c **** /**
 124:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 125:CMSIS/Core/CM3/core_cm3.c ****  *
 126:CMSIS/Core/CM3/core_cm3.c ****  * @param  int16_t value to reverse
 127:CMSIS/Core/CM3/core_cm3.c ****  * @return int32_t reversed value
 128:CMSIS/Core/CM3/core_cm3.c ****  *
 129:CMSIS/Core/CM3/core_cm3.c ****  * Reverse byte order in signed short value with sign extension to integer
 130:CMSIS/Core/CM3/core_cm3.c ****  */
 131:CMSIS/Core/CM3/core_cm3.c **** __ASM int32_t __REVSH(int16_t value)
 132:CMSIS/Core/CM3/core_cm3.c **** {
 133:CMSIS/Core/CM3/core_cm3.c ****   revsh r0, r0
 134:CMSIS/Core/CM3/core_cm3.c ****   bx lr
 135:CMSIS/Core/CM3/core_cm3.c **** }
 136:CMSIS/Core/CM3/core_cm3.c **** 
 137:CMSIS/Core/CM3/core_cm3.c **** 
 138:CMSIS/Core/CM3/core_cm3.c **** #if (__ARMCC_VERSION < 400000)
 139:CMSIS/Core/CM3/core_cm3.c **** 
 140:CMSIS/Core/CM3/core_cm3.c **** /**
 141:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Remove the exclusive lock created by ldrex
 142:CMSIS/Core/CM3/core_cm3.c ****  *
 143:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
 144:CMSIS/Core/CM3/core_cm3.c ****  * @return none
 145:CMSIS/Core/CM3/core_cm3.c ****  *
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 4


 146:CMSIS/Core/CM3/core_cm3.c ****  * Removes the exclusive lock which is created by ldrex.
 147:CMSIS/Core/CM3/core_cm3.c ****  */
 148:CMSIS/Core/CM3/core_cm3.c **** __ASM void __CLREX(void)
 149:CMSIS/Core/CM3/core_cm3.c **** {
 150:CMSIS/Core/CM3/core_cm3.c ****   clrex
 151:CMSIS/Core/CM3/core_cm3.c **** }
 152:CMSIS/Core/CM3/core_cm3.c **** 
 153:CMSIS/Core/CM3/core_cm3.c **** /**
 154:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Return the Base Priority value
 155:CMSIS/Core/CM3/core_cm3.c ****  *
 156:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
 157:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t BasePriority
 158:CMSIS/Core/CM3/core_cm3.c ****  *
 159:CMSIS/Core/CM3/core_cm3.c ****  * Return the content of the base priority register
 160:CMSIS/Core/CM3/core_cm3.c ****  */
 161:CMSIS/Core/CM3/core_cm3.c **** __ASM uint32_t  __get_BASEPRI(void)
 162:CMSIS/Core/CM3/core_cm3.c **** {
 163:CMSIS/Core/CM3/core_cm3.c ****   mrs r0, basepri
 164:CMSIS/Core/CM3/core_cm3.c ****   bx lr
 165:CMSIS/Core/CM3/core_cm3.c **** }
 166:CMSIS/Core/CM3/core_cm3.c **** 
 167:CMSIS/Core/CM3/core_cm3.c **** /**
 168:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Set the Base Priority value
 169:CMSIS/Core/CM3/core_cm3.c ****  *
 170:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t BasePriority
 171:CMSIS/Core/CM3/core_cm3.c ****  * @return none
 172:CMSIS/Core/CM3/core_cm3.c ****  *
 173:CMSIS/Core/CM3/core_cm3.c ****  * Set the base priority register
 174:CMSIS/Core/CM3/core_cm3.c ****  */
 175:CMSIS/Core/CM3/core_cm3.c **** __ASM void __set_BASEPRI(uint32_t basePri)
 176:CMSIS/Core/CM3/core_cm3.c **** {
 177:CMSIS/Core/CM3/core_cm3.c ****   msr basepri, r0
 178:CMSIS/Core/CM3/core_cm3.c ****   bx lr
 179:CMSIS/Core/CM3/core_cm3.c **** }
 180:CMSIS/Core/CM3/core_cm3.c **** 
 181:CMSIS/Core/CM3/core_cm3.c **** /**
 182:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Return the Priority Mask value
 183:CMSIS/Core/CM3/core_cm3.c ****  *
 184:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
 185:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t PriMask
 186:CMSIS/Core/CM3/core_cm3.c ****  *
 187:CMSIS/Core/CM3/core_cm3.c ****  * Return the state of the priority mask bit from the priority mask
 188:CMSIS/Core/CM3/core_cm3.c ****  * register
 189:CMSIS/Core/CM3/core_cm3.c ****  */
 190:CMSIS/Core/CM3/core_cm3.c **** __ASM uint32_t __get_PRIMASK(void)
 191:CMSIS/Core/CM3/core_cm3.c **** {
 192:CMSIS/Core/CM3/core_cm3.c ****   mrs r0, primask
 193:CMSIS/Core/CM3/core_cm3.c ****   bx lr
 194:CMSIS/Core/CM3/core_cm3.c **** }
 195:CMSIS/Core/CM3/core_cm3.c **** 
 196:CMSIS/Core/CM3/core_cm3.c **** /**
 197:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Set the Priority Mask value
 198:CMSIS/Core/CM3/core_cm3.c ****  *
 199:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t PriMask
 200:CMSIS/Core/CM3/core_cm3.c ****  * @return none
 201:CMSIS/Core/CM3/core_cm3.c ****  *
 202:CMSIS/Core/CM3/core_cm3.c ****  * Set the priority mask bit in the priority mask register
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 5


 203:CMSIS/Core/CM3/core_cm3.c ****  */
 204:CMSIS/Core/CM3/core_cm3.c **** __ASM void __set_PRIMASK(uint32_t priMask)
 205:CMSIS/Core/CM3/core_cm3.c **** {
 206:CMSIS/Core/CM3/core_cm3.c ****   msr primask, r0
 207:CMSIS/Core/CM3/core_cm3.c ****   bx lr
 208:CMSIS/Core/CM3/core_cm3.c **** }
 209:CMSIS/Core/CM3/core_cm3.c **** 
 210:CMSIS/Core/CM3/core_cm3.c **** /**
 211:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Return the Fault Mask value
 212:CMSIS/Core/CM3/core_cm3.c ****  *
 213:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
 214:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t FaultMask
 215:CMSIS/Core/CM3/core_cm3.c ****  *
 216:CMSIS/Core/CM3/core_cm3.c ****  * Return the content of the fault mask register
 217:CMSIS/Core/CM3/core_cm3.c ****  */
 218:CMSIS/Core/CM3/core_cm3.c **** __ASM uint32_t  __get_FAULTMASK(void)
 219:CMSIS/Core/CM3/core_cm3.c **** {
 220:CMSIS/Core/CM3/core_cm3.c ****   mrs r0, faultmask
 221:CMSIS/Core/CM3/core_cm3.c ****   bx lr
 222:CMSIS/Core/CM3/core_cm3.c **** }
 223:CMSIS/Core/CM3/core_cm3.c **** 
 224:CMSIS/Core/CM3/core_cm3.c **** /**
 225:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Set the Fault Mask value
 226:CMSIS/Core/CM3/core_cm3.c ****  *
 227:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t faultMask value
 228:CMSIS/Core/CM3/core_cm3.c ****  * @return none
 229:CMSIS/Core/CM3/core_cm3.c ****  *
 230:CMSIS/Core/CM3/core_cm3.c ****  * Set the fault mask register
 231:CMSIS/Core/CM3/core_cm3.c ****  */
 232:CMSIS/Core/CM3/core_cm3.c **** __ASM void __set_FAULTMASK(uint32_t faultMask)
 233:CMSIS/Core/CM3/core_cm3.c **** {
 234:CMSIS/Core/CM3/core_cm3.c ****   msr faultmask, r0
 235:CMSIS/Core/CM3/core_cm3.c ****   bx lr
 236:CMSIS/Core/CM3/core_cm3.c **** }
 237:CMSIS/Core/CM3/core_cm3.c **** 
 238:CMSIS/Core/CM3/core_cm3.c **** /**
 239:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Return the Control Register value
 240:CMSIS/Core/CM3/core_cm3.c ****  * 
 241:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
 242:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t Control value
 243:CMSIS/Core/CM3/core_cm3.c ****  *
 244:CMSIS/Core/CM3/core_cm3.c ****  * Return the content of the control register
 245:CMSIS/Core/CM3/core_cm3.c ****  */
 246:CMSIS/Core/CM3/core_cm3.c **** __ASM uint32_t  __get_CONTROL(void)
 247:CMSIS/Core/CM3/core_cm3.c **** {
 248:CMSIS/Core/CM3/core_cm3.c ****   mrs r0, control
 249:CMSIS/Core/CM3/core_cm3.c ****   bx lr
 250:CMSIS/Core/CM3/core_cm3.c **** }
 251:CMSIS/Core/CM3/core_cm3.c **** 
 252:CMSIS/Core/CM3/core_cm3.c **** /**
 253:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Set the Control Register value
 254:CMSIS/Core/CM3/core_cm3.c ****  *
 255:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t Control value
 256:CMSIS/Core/CM3/core_cm3.c ****  * @return none
 257:CMSIS/Core/CM3/core_cm3.c ****  *
 258:CMSIS/Core/CM3/core_cm3.c ****  * Set the control register
 259:CMSIS/Core/CM3/core_cm3.c ****  */
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 6


 260:CMSIS/Core/CM3/core_cm3.c **** __ASM void __set_CONTROL(uint32_t control)
 261:CMSIS/Core/CM3/core_cm3.c **** {
 262:CMSIS/Core/CM3/core_cm3.c ****   msr control, r0
 263:CMSIS/Core/CM3/core_cm3.c ****   bx lr
 264:CMSIS/Core/CM3/core_cm3.c **** }
 265:CMSIS/Core/CM3/core_cm3.c **** 
 266:CMSIS/Core/CM3/core_cm3.c **** #endif /* __ARMCC_VERSION  */ 
 267:CMSIS/Core/CM3/core_cm3.c **** 
 268:CMSIS/Core/CM3/core_cm3.c **** 
 269:CMSIS/Core/CM3/core_cm3.c **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
 270:CMSIS/Core/CM3/core_cm3.c **** #pragma diag_suppress=Pe940
 271:CMSIS/Core/CM3/core_cm3.c **** 
 272:CMSIS/Core/CM3/core_cm3.c **** /**
 273:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Return the Process Stack Pointer
 274:CMSIS/Core/CM3/core_cm3.c ****  *
 275:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
 276:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t ProcessStackPointer
 277:CMSIS/Core/CM3/core_cm3.c ****  *
 278:CMSIS/Core/CM3/core_cm3.c ****  * Return the actual process stack pointer
 279:CMSIS/Core/CM3/core_cm3.c ****  */
 280:CMSIS/Core/CM3/core_cm3.c **** uint32_t __get_PSP(void)
 281:CMSIS/Core/CM3/core_cm3.c **** {
 282:CMSIS/Core/CM3/core_cm3.c ****   __ASM("mrs r0, psp");
 283:CMSIS/Core/CM3/core_cm3.c ****   __ASM("bx lr");
 284:CMSIS/Core/CM3/core_cm3.c **** }
 285:CMSIS/Core/CM3/core_cm3.c **** 
 286:CMSIS/Core/CM3/core_cm3.c **** /**
 287:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Set the Process Stack Pointer
 288:CMSIS/Core/CM3/core_cm3.c ****  *
 289:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t Process Stack Pointer
 290:CMSIS/Core/CM3/core_cm3.c ****  * @return none
 291:CMSIS/Core/CM3/core_cm3.c ****  *
 292:CMSIS/Core/CM3/core_cm3.c ****  * Assign the value ProcessStackPointer to the MSP 
 293:CMSIS/Core/CM3/core_cm3.c ****  * (process stack pointer) Cortex processor register
 294:CMSIS/Core/CM3/core_cm3.c ****  */
 295:CMSIS/Core/CM3/core_cm3.c **** void __set_PSP(uint32_t topOfProcStack)
 296:CMSIS/Core/CM3/core_cm3.c **** {
 297:CMSIS/Core/CM3/core_cm3.c ****   __ASM("msr psp, r0");
 298:CMSIS/Core/CM3/core_cm3.c ****   __ASM("bx lr");
 299:CMSIS/Core/CM3/core_cm3.c **** }
 300:CMSIS/Core/CM3/core_cm3.c **** 
 301:CMSIS/Core/CM3/core_cm3.c **** /**
 302:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Return the Main Stack Pointer
 303:CMSIS/Core/CM3/core_cm3.c ****  *
 304:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
 305:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t Main Stack Pointer
 306:CMSIS/Core/CM3/core_cm3.c ****  *
 307:CMSIS/Core/CM3/core_cm3.c ****  * Return the current value of the MSP (main stack pointer)
 308:CMSIS/Core/CM3/core_cm3.c ****  * Cortex processor register
 309:CMSIS/Core/CM3/core_cm3.c ****  */
 310:CMSIS/Core/CM3/core_cm3.c **** uint32_t __get_MSP(void)
 311:CMSIS/Core/CM3/core_cm3.c **** {
 312:CMSIS/Core/CM3/core_cm3.c ****   __ASM("mrs r0, msp");
 313:CMSIS/Core/CM3/core_cm3.c ****   __ASM("bx lr");
 314:CMSIS/Core/CM3/core_cm3.c **** }
 315:CMSIS/Core/CM3/core_cm3.c **** 
 316:CMSIS/Core/CM3/core_cm3.c **** /**
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 7


 317:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Set the Main Stack Pointer
 318:CMSIS/Core/CM3/core_cm3.c ****  *
 319:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t Main Stack Pointer
 320:CMSIS/Core/CM3/core_cm3.c ****  * @return none
 321:CMSIS/Core/CM3/core_cm3.c ****  *
 322:CMSIS/Core/CM3/core_cm3.c ****  * Assign the value mainStackPointer to the MSP 
 323:CMSIS/Core/CM3/core_cm3.c ****  * (main stack pointer) Cortex processor register
 324:CMSIS/Core/CM3/core_cm3.c ****  */
 325:CMSIS/Core/CM3/core_cm3.c **** void __set_MSP(uint32_t topOfMainStack)
 326:CMSIS/Core/CM3/core_cm3.c **** {
 327:CMSIS/Core/CM3/core_cm3.c ****   __ASM("msr msp, r0");
 328:CMSIS/Core/CM3/core_cm3.c ****   __ASM("bx lr");
 329:CMSIS/Core/CM3/core_cm3.c **** }
 330:CMSIS/Core/CM3/core_cm3.c **** 
 331:CMSIS/Core/CM3/core_cm3.c **** /**
 332:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Reverse byte order in unsigned short value
 333:CMSIS/Core/CM3/core_cm3.c ****  *
 334:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint16_t value to reverse
 335:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t reversed value
 336:CMSIS/Core/CM3/core_cm3.c ****  *
 337:CMSIS/Core/CM3/core_cm3.c ****  * Reverse byte order in unsigned short value
 338:CMSIS/Core/CM3/core_cm3.c ****  */
 339:CMSIS/Core/CM3/core_cm3.c **** uint32_t __REV16(uint16_t value)
 340:CMSIS/Core/CM3/core_cm3.c **** {
 341:CMSIS/Core/CM3/core_cm3.c ****   __ASM("rev16 r0, r0");
 342:CMSIS/Core/CM3/core_cm3.c ****   __ASM("bx lr");
 343:CMSIS/Core/CM3/core_cm3.c **** }
 344:CMSIS/Core/CM3/core_cm3.c **** 
 345:CMSIS/Core/CM3/core_cm3.c **** /**
 346:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Reverse bit order of value
 347:CMSIS/Core/CM3/core_cm3.c ****  *
 348:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t value to reverse
 349:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t reversed value
 350:CMSIS/Core/CM3/core_cm3.c ****  *
 351:CMSIS/Core/CM3/core_cm3.c ****  * Reverse bit order of value
 352:CMSIS/Core/CM3/core_cm3.c ****  */
 353:CMSIS/Core/CM3/core_cm3.c **** uint32_t __RBIT(uint32_t value)
 354:CMSIS/Core/CM3/core_cm3.c **** {
 355:CMSIS/Core/CM3/core_cm3.c ****   __ASM("rbit r0, r0");
 356:CMSIS/Core/CM3/core_cm3.c ****   __ASM("bx lr");
 357:CMSIS/Core/CM3/core_cm3.c **** }
 358:CMSIS/Core/CM3/core_cm3.c **** 
 359:CMSIS/Core/CM3/core_cm3.c **** /**
 360:CMSIS/Core/CM3/core_cm3.c ****  * @brief  LDR Exclusive
 361:CMSIS/Core/CM3/core_cm3.c ****  *
 362:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint8_t* address
 363:CMSIS/Core/CM3/core_cm3.c ****  * @return uint8_t value of (*address)
 364:CMSIS/Core/CM3/core_cm3.c ****  *
 365:CMSIS/Core/CM3/core_cm3.c ****  * Exclusive LDR command
 366:CMSIS/Core/CM3/core_cm3.c ****  */
 367:CMSIS/Core/CM3/core_cm3.c **** uint8_t __LDREXB(uint8_t *addr)
 368:CMSIS/Core/CM3/core_cm3.c **** {
 369:CMSIS/Core/CM3/core_cm3.c ****   __ASM("ldrexb r0, [r0]");
 370:CMSIS/Core/CM3/core_cm3.c ****   __ASM("bx lr"); 
 371:CMSIS/Core/CM3/core_cm3.c **** }
 372:CMSIS/Core/CM3/core_cm3.c **** 
 373:CMSIS/Core/CM3/core_cm3.c **** /**
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 8


 374:CMSIS/Core/CM3/core_cm3.c ****  * @brief  LDR Exclusive
 375:CMSIS/Core/CM3/core_cm3.c ****  *
 376:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint16_t* address
 377:CMSIS/Core/CM3/core_cm3.c ****  * @return uint16_t value of (*address)
 378:CMSIS/Core/CM3/core_cm3.c ****  *
 379:CMSIS/Core/CM3/core_cm3.c ****  * Exclusive LDR command
 380:CMSIS/Core/CM3/core_cm3.c ****  */
 381:CMSIS/Core/CM3/core_cm3.c **** uint16_t __LDREXH(uint16_t *addr)
 382:CMSIS/Core/CM3/core_cm3.c **** {
 383:CMSIS/Core/CM3/core_cm3.c ****   __ASM("ldrexh r0, [r0]");
 384:CMSIS/Core/CM3/core_cm3.c ****   __ASM("bx lr");
 385:CMSIS/Core/CM3/core_cm3.c **** }
 386:CMSIS/Core/CM3/core_cm3.c **** 
 387:CMSIS/Core/CM3/core_cm3.c **** /**
 388:CMSIS/Core/CM3/core_cm3.c ****  * @brief  LDR Exclusive
 389:CMSIS/Core/CM3/core_cm3.c ****  *
 390:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t* address
 391:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t value of (*address)
 392:CMSIS/Core/CM3/core_cm3.c ****  *
 393:CMSIS/Core/CM3/core_cm3.c ****  * Exclusive LDR command
 394:CMSIS/Core/CM3/core_cm3.c ****  */
 395:CMSIS/Core/CM3/core_cm3.c **** uint32_t __LDREXW(uint32_t *addr)
 396:CMSIS/Core/CM3/core_cm3.c **** {
 397:CMSIS/Core/CM3/core_cm3.c ****   __ASM("ldrex r0, [r0]");
 398:CMSIS/Core/CM3/core_cm3.c ****   __ASM("bx lr");
 399:CMSIS/Core/CM3/core_cm3.c **** }
 400:CMSIS/Core/CM3/core_cm3.c **** 
 401:CMSIS/Core/CM3/core_cm3.c **** /**
 402:CMSIS/Core/CM3/core_cm3.c ****  * @brief  STR Exclusive
 403:CMSIS/Core/CM3/core_cm3.c ****  *
 404:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint8_t *address
 405:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint8_t value to store
 406:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t successful / failed
 407:CMSIS/Core/CM3/core_cm3.c ****  *
 408:CMSIS/Core/CM3/core_cm3.c ****  * Exclusive STR command
 409:CMSIS/Core/CM3/core_cm3.c ****  */
 410:CMSIS/Core/CM3/core_cm3.c **** __attribute__( (always_inline, optimize("O0")) ) static __INLINE
 411:CMSIS/Core/CM3/core_cm3.c **** uint32_t __STREXB(uint8_t value, uint8_t *addr)
 412:CMSIS/Core/CM3/core_cm3.c **** {
 413:CMSIS/Core/CM3/core_cm3.c ****   __ASM("strexb r0, r0, [r1]");
 414:CMSIS/Core/CM3/core_cm3.c ****   __ASM("bx lr");
 415:CMSIS/Core/CM3/core_cm3.c **** }
 416:CMSIS/Core/CM3/core_cm3.c **** 
 417:CMSIS/Core/CM3/core_cm3.c **** /**
 418:CMSIS/Core/CM3/core_cm3.c ****  * @brief  STR Exclusive
 419:CMSIS/Core/CM3/core_cm3.c ****  *
 420:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint16_t *address
 421:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint16_t value to store
 422:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t successful / failed
 423:CMSIS/Core/CM3/core_cm3.c ****  *
 424:CMSIS/Core/CM3/core_cm3.c ****  * Exclusive STR command
 425:CMSIS/Core/CM3/core_cm3.c ****  */
 426:CMSIS/Core/CM3/core_cm3.c **** __attribute__( (always_inline, optimize("O0")) ) static __INLINE
 427:CMSIS/Core/CM3/core_cm3.c **** uint32_t __STREXH(uint16_t value, uint16_t *addr)
 428:CMSIS/Core/CM3/core_cm3.c **** {
 429:CMSIS/Core/CM3/core_cm3.c ****   __ASM("strexh r0, r0, [r1]");
 430:CMSIS/Core/CM3/core_cm3.c ****   __ASM("bx lr");
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 9


 431:CMSIS/Core/CM3/core_cm3.c **** }
 432:CMSIS/Core/CM3/core_cm3.c **** 
 433:CMSIS/Core/CM3/core_cm3.c **** /**
 434:CMSIS/Core/CM3/core_cm3.c ****  * @brief  STR Exclusive
 435:CMSIS/Core/CM3/core_cm3.c ****  *
 436:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t *address
 437:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t value to store
 438:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t successful / failed
 439:CMSIS/Core/CM3/core_cm3.c ****  *
 440:CMSIS/Core/CM3/core_cm3.c ****  * Exclusive STR command
 441:CMSIS/Core/CM3/core_cm3.c ****  */
 442:CMSIS/Core/CM3/core_cm3.c **** uint32_t __STREXW(uint32_t value, uint32_t *addr)
 443:CMSIS/Core/CM3/core_cm3.c **** {
 444:CMSIS/Core/CM3/core_cm3.c ****   __ASM("strex r0, r0, [r1]");
 445:CMSIS/Core/CM3/core_cm3.c ****   __ASM("bx lr");
 446:CMSIS/Core/CM3/core_cm3.c **** }
 447:CMSIS/Core/CM3/core_cm3.c **** 
 448:CMSIS/Core/CM3/core_cm3.c **** #pragma diag_default=Pe940
 449:CMSIS/Core/CM3/core_cm3.c **** 
 450:CMSIS/Core/CM3/core_cm3.c **** 
 451:CMSIS/Core/CM3/core_cm3.c **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
 452:CMSIS/Core/CM3/core_cm3.c **** 
 453:CMSIS/Core/CM3/core_cm3.c **** /**
 454:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Return the Process Stack Pointer
 455:CMSIS/Core/CM3/core_cm3.c ****  *
 456:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
 457:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t ProcessStackPointer
 458:CMSIS/Core/CM3/core_cm3.c ****  *
 459:CMSIS/Core/CM3/core_cm3.c ****  * Return the actual process stack pointer
 460:CMSIS/Core/CM3/core_cm3.c ****  */
 461:CMSIS/Core/CM3/core_cm3.c **** uint32_t __get_PSP(void) __attribute__( ( naked ) );
 462:CMSIS/Core/CM3/core_cm3.c **** uint32_t __get_PSP(void)
 463:CMSIS/Core/CM3/core_cm3.c **** {
  28              		.loc 1 463 0
  29              		.cfi_startproc
  30              		@ Naked Function: prologue and epilogue provided by programmer.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
 464:CMSIS/Core/CM3/core_cm3.c ****   uint32_t result=0;
 465:CMSIS/Core/CM3/core_cm3.c **** 
 466:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("MRS %0, psp\n\t" 
  34              		.loc 1 466 0
  35              		.syntax unified
  36              	@ 466 "CMSIS/Core/CM3/core_cm3.c" 1
  37 0000 EFF30980 		MRS r0, psp
  38 0004 0046     		MOV r0, r0 
  39 0006 7047     		BX  lr     
  40              		
  41              	@ 0 "" 2
  42              	.LVL1:
 467:CMSIS/Core/CM3/core_cm3.c ****                   "MOV r0, %0 \n\t"
 468:CMSIS/Core/CM3/core_cm3.c ****                   "BX  lr     \n\t"  : "=r" (result) );
 469:CMSIS/Core/CM3/core_cm3.c ****   return(result);
 470:CMSIS/Core/CM3/core_cm3.c **** }
  43              		.loc 1 470 0
  44              		.thumb
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 10


  45              		.syntax unified
  46              		.cfi_endproc
  47              	.LFE0:
  49              		.section	.text.__set_PSP,"ax",%progbits
  50              		.align	2
  51              		.global	__set_PSP
  52              		.thumb
  53              		.thumb_func
  55              	__set_PSP:
  56              	.LFB1:
 471:CMSIS/Core/CM3/core_cm3.c **** 
 472:CMSIS/Core/CM3/core_cm3.c **** 
 473:CMSIS/Core/CM3/core_cm3.c **** /**
 474:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Set the Process Stack Pointer
 475:CMSIS/Core/CM3/core_cm3.c ****  *
 476:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t Process Stack Pointer
 477:CMSIS/Core/CM3/core_cm3.c ****  * @return none
 478:CMSIS/Core/CM3/core_cm3.c ****  *
 479:CMSIS/Core/CM3/core_cm3.c ****  * Assign the value ProcessStackPointer to the MSP 
 480:CMSIS/Core/CM3/core_cm3.c ****  * (process stack pointer) Cortex processor register
 481:CMSIS/Core/CM3/core_cm3.c ****  */
 482:CMSIS/Core/CM3/core_cm3.c **** void __set_PSP(uint32_t topOfProcStack) __attribute__( ( naked ) );
 483:CMSIS/Core/CM3/core_cm3.c **** void __set_PSP(uint32_t topOfProcStack)
 484:CMSIS/Core/CM3/core_cm3.c **** {
  57              		.loc 1 484 0
  58              		.cfi_startproc
  59              		@ Naked Function: prologue and epilogue provided by programmer.
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              	.LVL2:
 485:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("MSR psp, %0\n\t"
  63              		.loc 1 485 0
  64              		.syntax unified
  65              	@ 485 "CMSIS/Core/CM3/core_cm3.c" 1
  66 0000 80F30988 		MSR psp, r0
  67 0004 7047     		BX  lr     
  68              		
  69              	@ 0 "" 2
 486:CMSIS/Core/CM3/core_cm3.c ****                   "BX  lr     \n\t" : : "r" (topOfProcStack) );
 487:CMSIS/Core/CM3/core_cm3.c **** }
  70              		.loc 1 487 0
  71              		.thumb
  72              		.syntax unified
  73              		.cfi_endproc
  74              	.LFE1:
  76 0006 00BF     		.section	.text.__get_MSP,"ax",%progbits
  77              		.align	2
  78              		.global	__get_MSP
  79              		.thumb
  80              		.thumb_func
  82              	__get_MSP:
  83              	.LFB2:
 488:CMSIS/Core/CM3/core_cm3.c **** 
 489:CMSIS/Core/CM3/core_cm3.c **** /**
 490:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Return the Main Stack Pointer
 491:CMSIS/Core/CM3/core_cm3.c ****  *
 492:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 11


 493:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t Main Stack Pointer
 494:CMSIS/Core/CM3/core_cm3.c ****  *
 495:CMSIS/Core/CM3/core_cm3.c ****  * Return the current value of the MSP (main stack pointer)
 496:CMSIS/Core/CM3/core_cm3.c ****  * Cortex processor register
 497:CMSIS/Core/CM3/core_cm3.c ****  */
 498:CMSIS/Core/CM3/core_cm3.c **** uint32_t __get_MSP(void) __attribute__( ( naked ) );
 499:CMSIS/Core/CM3/core_cm3.c **** uint32_t __get_MSP(void)
 500:CMSIS/Core/CM3/core_cm3.c **** {
  84              		.loc 1 500 0
  85              		.cfi_startproc
  86              		@ Naked Function: prologue and epilogue provided by programmer.
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              	.LVL3:
 501:CMSIS/Core/CM3/core_cm3.c ****   uint32_t result=0;
 502:CMSIS/Core/CM3/core_cm3.c **** 
 503:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("MRS %0, msp\n\t" 
  90              		.loc 1 503 0
  91              		.syntax unified
  92              	@ 503 "CMSIS/Core/CM3/core_cm3.c" 1
  93 0000 EFF30880 		MRS r0, msp
  94 0004 0046     		MOV r0, r0 
  95 0006 7047     		BX  lr     
  96              		
  97              	@ 0 "" 2
  98              	.LVL4:
 504:CMSIS/Core/CM3/core_cm3.c ****                   "MOV r0, %0 \n\t"
 505:CMSIS/Core/CM3/core_cm3.c ****                   "BX  lr     \n\t"  : "=r" (result) );
 506:CMSIS/Core/CM3/core_cm3.c ****   return(result);
 507:CMSIS/Core/CM3/core_cm3.c **** }
  99              		.loc 1 507 0
 100              		.thumb
 101              		.syntax unified
 102              		.cfi_endproc
 103              	.LFE2:
 105              		.section	.text.__set_MSP,"ax",%progbits
 106              		.align	2
 107              		.global	__set_MSP
 108              		.thumb
 109              		.thumb_func
 111              	__set_MSP:
 112              	.LFB3:
 508:CMSIS/Core/CM3/core_cm3.c **** 
 509:CMSIS/Core/CM3/core_cm3.c **** /**
 510:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Set the Main Stack Pointer
 511:CMSIS/Core/CM3/core_cm3.c ****  *
 512:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t Main Stack Pointer
 513:CMSIS/Core/CM3/core_cm3.c ****  * @return none
 514:CMSIS/Core/CM3/core_cm3.c ****  *
 515:CMSIS/Core/CM3/core_cm3.c ****  * Assign the value mainStackPointer to the MSP 
 516:CMSIS/Core/CM3/core_cm3.c ****  * (main stack pointer) Cortex processor register
 517:CMSIS/Core/CM3/core_cm3.c ****  */
 518:CMSIS/Core/CM3/core_cm3.c **** void __set_MSP(uint32_t topOfMainStack) __attribute__( ( naked ) );
 519:CMSIS/Core/CM3/core_cm3.c **** void __set_MSP(uint32_t topOfMainStack)
 520:CMSIS/Core/CM3/core_cm3.c **** {
 113              		.loc 1 520 0
 114              		.cfi_startproc
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 12


 115              		@ Naked Function: prologue and epilogue provided by programmer.
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              	.LVL5:
 521:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("MSR msp, %0\n\t"
 119              		.loc 1 521 0
 120              		.syntax unified
 121              	@ 521 "CMSIS/Core/CM3/core_cm3.c" 1
 122 0000 80F30888 		MSR msp, r0
 123 0004 7047     		BX  lr     
 124              		
 125              	@ 0 "" 2
 522:CMSIS/Core/CM3/core_cm3.c ****                   "BX  lr     \n\t" : : "r" (topOfMainStack) );
 523:CMSIS/Core/CM3/core_cm3.c **** }
 126              		.loc 1 523 0
 127              		.thumb
 128              		.syntax unified
 129              		.cfi_endproc
 130              	.LFE3:
 132 0006 00BF     		.section	.text.__get_BASEPRI,"ax",%progbits
 133              		.align	2
 134              		.global	__get_BASEPRI
 135              		.thumb
 136              		.thumb_func
 138              	__get_BASEPRI:
 139              	.LFB4:
 524:CMSIS/Core/CM3/core_cm3.c **** 
 525:CMSIS/Core/CM3/core_cm3.c **** /**
 526:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Return the Base Priority value
 527:CMSIS/Core/CM3/core_cm3.c ****  *
 528:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
 529:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t BasePriority
 530:CMSIS/Core/CM3/core_cm3.c ****  *
 531:CMSIS/Core/CM3/core_cm3.c ****  * Return the content of the base priority register
 532:CMSIS/Core/CM3/core_cm3.c ****  */
 533:CMSIS/Core/CM3/core_cm3.c **** uint32_t __get_BASEPRI(void)
 534:CMSIS/Core/CM3/core_cm3.c **** {
 140              		.loc 1 534 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL6:
 535:CMSIS/Core/CM3/core_cm3.c ****   uint32_t result=0;
 536:CMSIS/Core/CM3/core_cm3.c ****   
 537:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("MRS %0, basepri_max" : "=r" (result) );
 146              		.loc 1 537 0
 147              		.syntax unified
 148              	@ 537 "CMSIS/Core/CM3/core_cm3.c" 1
 149 0000 EFF31280 		MRS r0, basepri_max
 150              	@ 0 "" 2
 151              	.LVL7:
 538:CMSIS/Core/CM3/core_cm3.c ****   return(result);
 539:CMSIS/Core/CM3/core_cm3.c **** }
 152              		.loc 1 539 0
 153              		.thumb
 154              		.syntax unified
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 13


 155 0004 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE4:
 159 0006 00BF     		.section	.text.__set_BASEPRI,"ax",%progbits
 160              		.align	2
 161              		.global	__set_BASEPRI
 162              		.thumb
 163              		.thumb_func
 165              	__set_BASEPRI:
 166              	.LFB5:
 540:CMSIS/Core/CM3/core_cm3.c **** 
 541:CMSIS/Core/CM3/core_cm3.c **** /**
 542:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Set the Base Priority value
 543:CMSIS/Core/CM3/core_cm3.c ****  *
 544:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t BasePriority
 545:CMSIS/Core/CM3/core_cm3.c ****  * @return none
 546:CMSIS/Core/CM3/core_cm3.c ****  *
 547:CMSIS/Core/CM3/core_cm3.c ****  * Set the base priority register
 548:CMSIS/Core/CM3/core_cm3.c ****  */
 549:CMSIS/Core/CM3/core_cm3.c **** void __set_BASEPRI(uint32_t value)
 550:CMSIS/Core/CM3/core_cm3.c **** {
 167              		.loc 1 550 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL8:
 551:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) );
 173              		.loc 1 551 0
 174              		.syntax unified
 175              	@ 551 "CMSIS/Core/CM3/core_cm3.c" 1
 176 0000 80F31188 		MSR basepri, r0
 177              	@ 0 "" 2
 178              		.thumb
 179              		.syntax unified
 180 0004 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE5:
 184 0006 00BF     		.section	.text.__get_PRIMASK,"ax",%progbits
 185              		.align	2
 186              		.global	__get_PRIMASK
 187              		.thumb
 188              		.thumb_func
 190              	__get_PRIMASK:
 191              	.LFB6:
 552:CMSIS/Core/CM3/core_cm3.c **** }
 553:CMSIS/Core/CM3/core_cm3.c **** 
 554:CMSIS/Core/CM3/core_cm3.c **** /**
 555:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Return the Priority Mask value
 556:CMSIS/Core/CM3/core_cm3.c ****  *
 557:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
 558:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t PriMask
 559:CMSIS/Core/CM3/core_cm3.c ****  *
 560:CMSIS/Core/CM3/core_cm3.c ****  * Return the state of the priority mask bit from the priority mask
 561:CMSIS/Core/CM3/core_cm3.c ****  * register
 562:CMSIS/Core/CM3/core_cm3.c ****  */
 563:CMSIS/Core/CM3/core_cm3.c **** uint32_t __get_PRIMASK(void)
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 14


 564:CMSIS/Core/CM3/core_cm3.c **** {
 192              		.loc 1 564 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197              	.LVL9:
 565:CMSIS/Core/CM3/core_cm3.c ****   uint32_t result=0;
 566:CMSIS/Core/CM3/core_cm3.c **** 
 567:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 198              		.loc 1 567 0
 199              		.syntax unified
 200              	@ 567 "CMSIS/Core/CM3/core_cm3.c" 1
 201 0000 EFF31080 		MRS r0, primask
 202              	@ 0 "" 2
 203              	.LVL10:
 568:CMSIS/Core/CM3/core_cm3.c ****   return(result);
 569:CMSIS/Core/CM3/core_cm3.c **** }
 204              		.loc 1 569 0
 205              		.thumb
 206              		.syntax unified
 207 0004 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE6:
 211 0006 00BF     		.section	.text.__set_PRIMASK,"ax",%progbits
 212              		.align	2
 213              		.global	__set_PRIMASK
 214              		.thumb
 215              		.thumb_func
 217              	__set_PRIMASK:
 218              	.LFB7:
 570:CMSIS/Core/CM3/core_cm3.c **** 
 571:CMSIS/Core/CM3/core_cm3.c **** /**
 572:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Set the Priority Mask value
 573:CMSIS/Core/CM3/core_cm3.c ****  *
 574:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t PriMask
 575:CMSIS/Core/CM3/core_cm3.c ****  * @return none
 576:CMSIS/Core/CM3/core_cm3.c ****  *
 577:CMSIS/Core/CM3/core_cm3.c ****  * Set the priority mask bit in the priority mask register
 578:CMSIS/Core/CM3/core_cm3.c ****  */
 579:CMSIS/Core/CM3/core_cm3.c **** void __set_PRIMASK(uint32_t priMask)
 580:CMSIS/Core/CM3/core_cm3.c **** {
 219              		.loc 1 580 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224              	.LVL11:
 581:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) );
 225              		.loc 1 581 0
 226              		.syntax unified
 227              	@ 581 "CMSIS/Core/CM3/core_cm3.c" 1
 228 0000 80F31088 		MSR primask, r0
 229              	@ 0 "" 2
 230              		.thumb
 231              		.syntax unified
 232 0004 7047     		bx	lr
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 15


 233              		.cfi_endproc
 234              	.LFE7:
 236 0006 00BF     		.section	.text.__get_FAULTMASK,"ax",%progbits
 237              		.align	2
 238              		.global	__get_FAULTMASK
 239              		.thumb
 240              		.thumb_func
 242              	__get_FAULTMASK:
 243              	.LFB8:
 582:CMSIS/Core/CM3/core_cm3.c **** }
 583:CMSIS/Core/CM3/core_cm3.c **** 
 584:CMSIS/Core/CM3/core_cm3.c **** /**
 585:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Return the Fault Mask value
 586:CMSIS/Core/CM3/core_cm3.c ****  *
 587:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
 588:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t FaultMask
 589:CMSIS/Core/CM3/core_cm3.c ****  *
 590:CMSIS/Core/CM3/core_cm3.c ****  * Return the content of the fault mask register
 591:CMSIS/Core/CM3/core_cm3.c ****  */
 592:CMSIS/Core/CM3/core_cm3.c **** uint32_t __get_FAULTMASK(void)
 593:CMSIS/Core/CM3/core_cm3.c **** {
 244              		.loc 1 593 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249              	.LVL12:
 594:CMSIS/Core/CM3/core_cm3.c ****   uint32_t result=0;
 595:CMSIS/Core/CM3/core_cm3.c ****   
 596:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 250              		.loc 1 596 0
 251              		.syntax unified
 252              	@ 596 "CMSIS/Core/CM3/core_cm3.c" 1
 253 0000 EFF31380 		MRS r0, faultmask
 254              	@ 0 "" 2
 255              	.LVL13:
 597:CMSIS/Core/CM3/core_cm3.c ****   return(result);
 598:CMSIS/Core/CM3/core_cm3.c **** }
 256              		.loc 1 598 0
 257              		.thumb
 258              		.syntax unified
 259 0004 7047     		bx	lr
 260              		.cfi_endproc
 261              	.LFE8:
 263 0006 00BF     		.section	.text.__set_FAULTMASK,"ax",%progbits
 264              		.align	2
 265              		.global	__set_FAULTMASK
 266              		.thumb
 267              		.thumb_func
 269              	__set_FAULTMASK:
 270              	.LFB9:
 599:CMSIS/Core/CM3/core_cm3.c **** 
 600:CMSIS/Core/CM3/core_cm3.c **** /**
 601:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Set the Fault Mask value
 602:CMSIS/Core/CM3/core_cm3.c ****  *
 603:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t faultMask value
 604:CMSIS/Core/CM3/core_cm3.c ****  * @return none
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 16


 605:CMSIS/Core/CM3/core_cm3.c ****  *
 606:CMSIS/Core/CM3/core_cm3.c ****  * Set the fault mask register
 607:CMSIS/Core/CM3/core_cm3.c ****  */
 608:CMSIS/Core/CM3/core_cm3.c **** void __set_FAULTMASK(uint32_t faultMask)
 609:CMSIS/Core/CM3/core_cm3.c **** {
 271              		.loc 1 609 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 276              	.LVL14:
 610:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) );
 277              		.loc 1 610 0
 278              		.syntax unified
 279              	@ 610 "CMSIS/Core/CM3/core_cm3.c" 1
 280 0000 80F31388 		MSR faultmask, r0
 281              	@ 0 "" 2
 282              		.thumb
 283              		.syntax unified
 284 0004 7047     		bx	lr
 285              		.cfi_endproc
 286              	.LFE9:
 288 0006 00BF     		.section	.text.__REV,"ax",%progbits
 289              		.align	2
 290              		.global	__REV
 291              		.thumb
 292              		.thumb_func
 294              	__REV:
 295              	.LFB10:
 611:CMSIS/Core/CM3/core_cm3.c **** }
 612:CMSIS/Core/CM3/core_cm3.c **** 
 613:CMSIS/Core/CM3/core_cm3.c **** /**
 614:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Reverse byte order in integer value
 615:CMSIS/Core/CM3/core_cm3.c ****  *
 616:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t value to reverse
 617:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t reversed value
 618:CMSIS/Core/CM3/core_cm3.c ****  *
 619:CMSIS/Core/CM3/core_cm3.c ****  * Reverse byte order in integer value
 620:CMSIS/Core/CM3/core_cm3.c ****  */
 621:CMSIS/Core/CM3/core_cm3.c **** uint32_t __REV(uint32_t value)
 622:CMSIS/Core/CM3/core_cm3.c **** {
 296              		.loc 1 622 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 301              	.LVL15:
 623:CMSIS/Core/CM3/core_cm3.c ****   uint32_t result=0;
 624:CMSIS/Core/CM3/core_cm3.c ****   
 625:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 302              		.loc 1 625 0
 303              		.syntax unified
 304              	@ 625 "CMSIS/Core/CM3/core_cm3.c" 1
 305 0000 00BA     		rev r0, r0
 306              	@ 0 "" 2
 307              	.LVL16:
 626:CMSIS/Core/CM3/core_cm3.c ****   return(result);
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 17


 627:CMSIS/Core/CM3/core_cm3.c **** }
 308              		.loc 1 627 0
 309              		.thumb
 310              		.syntax unified
 311 0002 7047     		bx	lr
 312              		.cfi_endproc
 313              	.LFE10:
 315              		.section	.text.__REV16,"ax",%progbits
 316              		.align	2
 317              		.global	__REV16
 318              		.thumb
 319              		.thumb_func
 321              	__REV16:
 322              	.LFB11:
 628:CMSIS/Core/CM3/core_cm3.c **** 
 629:CMSIS/Core/CM3/core_cm3.c **** /**
 630:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Reverse byte order in unsigned short value
 631:CMSIS/Core/CM3/core_cm3.c ****  *
 632:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint16_t value to reverse
 633:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t reversed value
 634:CMSIS/Core/CM3/core_cm3.c ****  *
 635:CMSIS/Core/CM3/core_cm3.c ****  * Reverse byte order in unsigned short value
 636:CMSIS/Core/CM3/core_cm3.c ****  */
 637:CMSIS/Core/CM3/core_cm3.c **** uint32_t __REV16(uint16_t value)
 638:CMSIS/Core/CM3/core_cm3.c **** {
 323              		.loc 1 638 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LVL17:
 639:CMSIS/Core/CM3/core_cm3.c ****   uint32_t result=0;
 640:CMSIS/Core/CM3/core_cm3.c ****   
 641:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("rev16 %0, %1" : "=r" (result) : "r" (value) );
 329              		.loc 1 641 0
 330              		.syntax unified
 331              	@ 641 "CMSIS/Core/CM3/core_cm3.c" 1
 332 0000 40BA     		rev16 r0, r0
 333              	@ 0 "" 2
 334              	.LVL18:
 642:CMSIS/Core/CM3/core_cm3.c ****   return(result);
 643:CMSIS/Core/CM3/core_cm3.c **** }
 335              		.loc 1 643 0
 336              		.thumb
 337              		.syntax unified
 338 0002 7047     		bx	lr
 339              		.cfi_endproc
 340              	.LFE11:
 342              		.section	.text.__REVSH,"ax",%progbits
 343              		.align	2
 344              		.global	__REVSH
 345              		.thumb
 346              		.thumb_func
 348              	__REVSH:
 349              	.LFB12:
 644:CMSIS/Core/CM3/core_cm3.c **** 
 645:CMSIS/Core/CM3/core_cm3.c **** /**
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 18


 646:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 647:CMSIS/Core/CM3/core_cm3.c ****  *
 648:CMSIS/Core/CM3/core_cm3.c ****  * @param  int32_t value to reverse
 649:CMSIS/Core/CM3/core_cm3.c ****  * @return int32_t reversed value
 650:CMSIS/Core/CM3/core_cm3.c ****  *
 651:CMSIS/Core/CM3/core_cm3.c ****  * Reverse byte order in signed short value with sign extension to integer
 652:CMSIS/Core/CM3/core_cm3.c ****  */
 653:CMSIS/Core/CM3/core_cm3.c **** int32_t __REVSH(int16_t value)
 654:CMSIS/Core/CM3/core_cm3.c **** {
 350              		.loc 1 654 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LVL19:
 655:CMSIS/Core/CM3/core_cm3.c ****   uint32_t result=0;
 656:CMSIS/Core/CM3/core_cm3.c ****   
 657:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("revsh %0, %1" : "=r" (result) : "r" (value) );
 356              		.loc 1 657 0
 357              		.syntax unified
 358              	@ 657 "CMSIS/Core/CM3/core_cm3.c" 1
 359 0000 C0BA     		revsh r0, r0
 360              	@ 0 "" 2
 361              	.LVL20:
 658:CMSIS/Core/CM3/core_cm3.c ****   return(result);
 659:CMSIS/Core/CM3/core_cm3.c **** }
 362              		.loc 1 659 0
 363              		.thumb
 364              		.syntax unified
 365 0002 7047     		bx	lr
 366              		.cfi_endproc
 367              	.LFE12:
 369              		.section	.text.__RBIT,"ax",%progbits
 370              		.align	2
 371              		.global	__RBIT
 372              		.thumb
 373              		.thumb_func
 375              	__RBIT:
 376              	.LFB13:
 660:CMSIS/Core/CM3/core_cm3.c **** 
 661:CMSIS/Core/CM3/core_cm3.c **** /**
 662:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Reverse bit order of value
 663:CMSIS/Core/CM3/core_cm3.c ****  *
 664:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t value to reverse
 665:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t reversed value
 666:CMSIS/Core/CM3/core_cm3.c ****  *
 667:CMSIS/Core/CM3/core_cm3.c ****  * Reverse bit order of value
 668:CMSIS/Core/CM3/core_cm3.c ****  */
 669:CMSIS/Core/CM3/core_cm3.c **** uint32_t __RBIT(uint32_t value)
 670:CMSIS/Core/CM3/core_cm3.c **** {
 377              		.loc 1 670 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382              	.LVL21:
 671:CMSIS/Core/CM3/core_cm3.c ****   uint32_t result=0;
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 19


 672:CMSIS/Core/CM3/core_cm3.c ****   
 673:CMSIS/Core/CM3/core_cm3.c ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 383              		.loc 1 673 0
 384              		.syntax unified
 385              	@ 673 "CMSIS/Core/CM3/core_cm3.c" 1
 386 0000 90FAA0F0 		rbit r0, r0
 387              	@ 0 "" 2
 388              	.LVL22:
 674:CMSIS/Core/CM3/core_cm3.c ****    return(result);
 675:CMSIS/Core/CM3/core_cm3.c **** }
 389              		.loc 1 675 0
 390              		.thumb
 391              		.syntax unified
 392 0004 7047     		bx	lr
 393              		.cfi_endproc
 394              	.LFE13:
 396 0006 00BF     		.section	.text.__LDREXB,"ax",%progbits
 397              		.align	2
 398              		.global	__LDREXB
 399              		.thumb
 400              		.thumb_func
 402              	__LDREXB:
 403              	.LFB14:
 676:CMSIS/Core/CM3/core_cm3.c **** 
 677:CMSIS/Core/CM3/core_cm3.c **** /**
 678:CMSIS/Core/CM3/core_cm3.c ****  * @brief  LDR Exclusive
 679:CMSIS/Core/CM3/core_cm3.c ****  *
 680:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint8_t* address
 681:CMSIS/Core/CM3/core_cm3.c ****  * @return uint8_t value of (*address)
 682:CMSIS/Core/CM3/core_cm3.c ****  *
 683:CMSIS/Core/CM3/core_cm3.c ****  * Exclusive LDR command
 684:CMSIS/Core/CM3/core_cm3.c ****  */
 685:CMSIS/Core/CM3/core_cm3.c **** uint8_t __LDREXB(uint8_t *addr)
 686:CMSIS/Core/CM3/core_cm3.c **** {
 404              		.loc 1 686 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 409              	.LVL23:
 687:CMSIS/Core/CM3/core_cm3.c ****     uint8_t result=0;
 688:CMSIS/Core/CM3/core_cm3.c ****   
 689:CMSIS/Core/CM3/core_cm3.c ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) );
 410              		.loc 1 689 0
 411              		.syntax unified
 412              	@ 689 "CMSIS/Core/CM3/core_cm3.c" 1
 413 0000 D0E84F0F 		ldrexb r0, [r0]
 414              	@ 0 "" 2
 415              	.LVL24:
 690:CMSIS/Core/CM3/core_cm3.c ****    return(result);
 691:CMSIS/Core/CM3/core_cm3.c **** }
 416              		.loc 1 691 0
 417              		.thumb
 418              		.syntax unified
 419 0004 C0B2     		uxtb	r0, r0
 420 0006 7047     		bx	lr
 421              		.cfi_endproc
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 20


 422              	.LFE14:
 424              		.section	.text.__LDREXH,"ax",%progbits
 425              		.align	2
 426              		.global	__LDREXH
 427              		.thumb
 428              		.thumb_func
 430              	__LDREXH:
 431              	.LFB15:
 692:CMSIS/Core/CM3/core_cm3.c **** 
 693:CMSIS/Core/CM3/core_cm3.c **** /**
 694:CMSIS/Core/CM3/core_cm3.c ****  * @brief  LDR Exclusive
 695:CMSIS/Core/CM3/core_cm3.c ****  *
 696:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint16_t* address
 697:CMSIS/Core/CM3/core_cm3.c ****  * @return uint16_t value of (*address)
 698:CMSIS/Core/CM3/core_cm3.c ****  *
 699:CMSIS/Core/CM3/core_cm3.c ****  * Exclusive LDR command
 700:CMSIS/Core/CM3/core_cm3.c ****  */
 701:CMSIS/Core/CM3/core_cm3.c **** uint16_t __LDREXH(uint16_t *addr)
 702:CMSIS/Core/CM3/core_cm3.c **** {
 432              		.loc 1 702 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437              	.LVL25:
 703:CMSIS/Core/CM3/core_cm3.c ****     uint16_t result=0;
 704:CMSIS/Core/CM3/core_cm3.c ****   
 705:CMSIS/Core/CM3/core_cm3.c ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) );
 438              		.loc 1 705 0
 439              		.syntax unified
 440              	@ 705 "CMSIS/Core/CM3/core_cm3.c" 1
 441 0000 D0E85F0F 		ldrexh r0, [r0]
 442              	@ 0 "" 2
 443              	.LVL26:
 706:CMSIS/Core/CM3/core_cm3.c ****    return(result);
 707:CMSIS/Core/CM3/core_cm3.c **** }
 444              		.loc 1 707 0
 445              		.thumb
 446              		.syntax unified
 447 0004 80B2     		uxth	r0, r0
 448 0006 7047     		bx	lr
 449              		.cfi_endproc
 450              	.LFE15:
 452              		.section	.text.__LDREXW,"ax",%progbits
 453              		.align	2
 454              		.global	__LDREXW
 455              		.thumb
 456              		.thumb_func
 458              	__LDREXW:
 459              	.LFB16:
 708:CMSIS/Core/CM3/core_cm3.c **** 
 709:CMSIS/Core/CM3/core_cm3.c **** /**
 710:CMSIS/Core/CM3/core_cm3.c ****  * @brief  LDR Exclusive
 711:CMSIS/Core/CM3/core_cm3.c ****  *
 712:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t* address
 713:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t value of (*address)
 714:CMSIS/Core/CM3/core_cm3.c ****  *
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 21


 715:CMSIS/Core/CM3/core_cm3.c ****  * Exclusive LDR command
 716:CMSIS/Core/CM3/core_cm3.c ****  */
 717:CMSIS/Core/CM3/core_cm3.c **** uint32_t __LDREXW(uint32_t *addr)
 718:CMSIS/Core/CM3/core_cm3.c **** {
 460              		.loc 1 718 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              		@ link register save eliminated.
 465              	.LVL27:
 719:CMSIS/Core/CM3/core_cm3.c ****     uint32_t result=0;
 720:CMSIS/Core/CM3/core_cm3.c ****   
 721:CMSIS/Core/CM3/core_cm3.c ****    __ASM volatile ("ldrex %0, [%1]" : "=r" (result) : "r" (addr) );
 466              		.loc 1 721 0
 467              		.syntax unified
 468              	@ 721 "CMSIS/Core/CM3/core_cm3.c" 1
 469 0000 50E8000F 		ldrex r0, [r0]
 470              	@ 0 "" 2
 471              	.LVL28:
 722:CMSIS/Core/CM3/core_cm3.c ****    return(result);
 723:CMSIS/Core/CM3/core_cm3.c **** }
 472              		.loc 1 723 0
 473              		.thumb
 474              		.syntax unified
 475 0004 7047     		bx	lr
 476              		.cfi_endproc
 477              	.LFE16:
 479 0006 00BF     		.section	.text.__STREXW,"ax",%progbits
 480              		.align	2
 481              		.global	__STREXW
 482              		.thumb
 483              		.thumb_func
 485              	__STREXW:
 486              	.LFB19:
 724:CMSIS/Core/CM3/core_cm3.c **** 
 725:CMSIS/Core/CM3/core_cm3.c **** /**
 726:CMSIS/Core/CM3/core_cm3.c ****  * @brief  STR Exclusive
 727:CMSIS/Core/CM3/core_cm3.c ****  *
 728:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint8_t *address
 729:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint8_t value to store
 730:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t successful / failed
 731:CMSIS/Core/CM3/core_cm3.c ****  *
 732:CMSIS/Core/CM3/core_cm3.c ****  * Exclusive STR command
 733:CMSIS/Core/CM3/core_cm3.c ****  */
 734:CMSIS/Core/CM3/core_cm3.c **** __attribute__( (always_inline, optimize("O0")) ) static __INLINE
 735:CMSIS/Core/CM3/core_cm3.c **** uint32_t __STREXB(uint8_t value, uint8_t *addr)
 736:CMSIS/Core/CM3/core_cm3.c **** {
 737:CMSIS/Core/CM3/core_cm3.c ****    uint32_t result=0;
 738:CMSIS/Core/CM3/core_cm3.c ****   
 739:CMSIS/Core/CM3/core_cm3.c ****    __ASM volatile ("strexb %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
 740:CMSIS/Core/CM3/core_cm3.c ****    return(result);
 741:CMSIS/Core/CM3/core_cm3.c **** }
 742:CMSIS/Core/CM3/core_cm3.c **** 
 743:CMSIS/Core/CM3/core_cm3.c **** /**
 744:CMSIS/Core/CM3/core_cm3.c ****  * @brief  STR Exclusive
 745:CMSIS/Core/CM3/core_cm3.c ****  *
 746:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint16_t *address
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 22


 747:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint16_t value to store
 748:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t successful / failed
 749:CMSIS/Core/CM3/core_cm3.c ****  *
 750:CMSIS/Core/CM3/core_cm3.c ****  * Exclusive STR command
 751:CMSIS/Core/CM3/core_cm3.c ****  */
 752:CMSIS/Core/CM3/core_cm3.c **** __attribute__( (always_inline, optimize("O0")) ) static __INLINE
 753:CMSIS/Core/CM3/core_cm3.c **** uint32_t __STREXH(uint16_t value, uint16_t *addr)
 754:CMSIS/Core/CM3/core_cm3.c **** {
 755:CMSIS/Core/CM3/core_cm3.c ****    uint32_t result=0;
 756:CMSIS/Core/CM3/core_cm3.c ****   
 757:CMSIS/Core/CM3/core_cm3.c ****    __ASM volatile ("strexh %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
 758:CMSIS/Core/CM3/core_cm3.c ****    return(result);
 759:CMSIS/Core/CM3/core_cm3.c **** }
 760:CMSIS/Core/CM3/core_cm3.c **** 
 761:CMSIS/Core/CM3/core_cm3.c **** /**
 762:CMSIS/Core/CM3/core_cm3.c ****  * @brief  STR Exclusive
 763:CMSIS/Core/CM3/core_cm3.c ****  *
 764:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t *address
 765:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t value to store
 766:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t successful / failed
 767:CMSIS/Core/CM3/core_cm3.c ****  *
 768:CMSIS/Core/CM3/core_cm3.c ****  * Exclusive STR command
 769:CMSIS/Core/CM3/core_cm3.c ****  */
 770:CMSIS/Core/CM3/core_cm3.c **** uint32_t __STREXW(uint32_t value, uint32_t *addr)
 771:CMSIS/Core/CM3/core_cm3.c **** {
 487              		.loc 1 771 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492              	.LVL29:
 772:CMSIS/Core/CM3/core_cm3.c ****    uint32_t result=0;
 773:CMSIS/Core/CM3/core_cm3.c ****   
 774:CMSIS/Core/CM3/core_cm3.c ****    __ASM volatile ("strex %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
 493              		.loc 1 774 0
 494              		.syntax unified
 495              	@ 774 "CMSIS/Core/CM3/core_cm3.c" 1
 496 0000 41E80000 		strex r0, r0, [r1]
 497              	@ 0 "" 2
 498              	.LVL30:
 775:CMSIS/Core/CM3/core_cm3.c ****    return(result);
 776:CMSIS/Core/CM3/core_cm3.c **** }
 499              		.loc 1 776 0
 500              		.thumb
 501              		.syntax unified
 502 0004 7047     		bx	lr
 503              		.cfi_endproc
 504              	.LFE19:
 506 0006 00BF     		.section	.text.__get_CONTROL,"ax",%progbits
 507              		.align	2
 508              		.global	__get_CONTROL
 509              		.thumb
 510              		.thumb_func
 512              	__get_CONTROL:
 513              	.LFB20:
 777:CMSIS/Core/CM3/core_cm3.c **** 
 778:CMSIS/Core/CM3/core_cm3.c **** /**
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 23


 779:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Return the Control Register value
 780:CMSIS/Core/CM3/core_cm3.c ****  * 
 781:CMSIS/Core/CM3/core_cm3.c ****  * @param  none
 782:CMSIS/Core/CM3/core_cm3.c ****  * @return uint32_t Control value
 783:CMSIS/Core/CM3/core_cm3.c ****  *
 784:CMSIS/Core/CM3/core_cm3.c ****  * Return the content of the control register
 785:CMSIS/Core/CM3/core_cm3.c ****  */
 786:CMSIS/Core/CM3/core_cm3.c **** uint32_t __get_CONTROL(void)
 787:CMSIS/Core/CM3/core_cm3.c **** {
 514              		.loc 1 787 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 519              	.LVL31:
 788:CMSIS/Core/CM3/core_cm3.c ****   uint32_t result=0;
 789:CMSIS/Core/CM3/core_cm3.c **** 
 790:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 520              		.loc 1 790 0
 521              		.syntax unified
 522              	@ 790 "CMSIS/Core/CM3/core_cm3.c" 1
 523 0000 EFF31480 		MRS r0, control
 524              	@ 0 "" 2
 525              	.LVL32:
 791:CMSIS/Core/CM3/core_cm3.c ****   return(result);
 792:CMSIS/Core/CM3/core_cm3.c **** }
 526              		.loc 1 792 0
 527              		.thumb
 528              		.syntax unified
 529 0004 7047     		bx	lr
 530              		.cfi_endproc
 531              	.LFE20:
 533 0006 00BF     		.section	.text.__set_CONTROL,"ax",%progbits
 534              		.align	2
 535              		.global	__set_CONTROL
 536              		.thumb
 537              		.thumb_func
 539              	__set_CONTROL:
 540              	.LFB21:
 793:CMSIS/Core/CM3/core_cm3.c **** 
 794:CMSIS/Core/CM3/core_cm3.c **** /**
 795:CMSIS/Core/CM3/core_cm3.c ****  * @brief  Set the Control Register value
 796:CMSIS/Core/CM3/core_cm3.c ****  *
 797:CMSIS/Core/CM3/core_cm3.c ****  * @param  uint32_t Control value
 798:CMSIS/Core/CM3/core_cm3.c ****  * @return none
 799:CMSIS/Core/CM3/core_cm3.c ****  *
 800:CMSIS/Core/CM3/core_cm3.c ****  * Set the control register
 801:CMSIS/Core/CM3/core_cm3.c ****  */
 802:CMSIS/Core/CM3/core_cm3.c **** void __set_CONTROL(uint32_t control)
 803:CMSIS/Core/CM3/core_cm3.c **** {
 541              		.loc 1 803 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 546              	.LVL33:
 804:CMSIS/Core/CM3/core_cm3.c ****   __ASM volatile ("MSR control, %0" : : "r" (control) );
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 24


 547              		.loc 1 804 0
 548              		.syntax unified
 549              	@ 804 "CMSIS/Core/CM3/core_cm3.c" 1
 550 0000 80F31488 		MSR control, r0
 551              	@ 0 "" 2
 552              		.thumb
 553              		.syntax unified
 554 0004 7047     		bx	lr
 555              		.cfi_endproc
 556              	.LFE21:
 558 0006 00BF     		.text
 559              	.Letext0:
 560              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20160926/arm-none-eabi/include/machine/_default_types
 561              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20160926/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 core_cm3.c
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:20     .text.__get_PSP:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:25     .text.__get_PSP:0000000000000000 __get_PSP
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:50     .text.__set_PSP:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:55     .text.__set_PSP:0000000000000000 __set_PSP
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:77     .text.__get_MSP:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:82     .text.__get_MSP:0000000000000000 __get_MSP
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:106    .text.__set_MSP:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:111    .text.__set_MSP:0000000000000000 __set_MSP
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:133    .text.__get_BASEPRI:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:138    .text.__get_BASEPRI:0000000000000000 __get_BASEPRI
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:160    .text.__set_BASEPRI:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:165    .text.__set_BASEPRI:0000000000000000 __set_BASEPRI
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:185    .text.__get_PRIMASK:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:190    .text.__get_PRIMASK:0000000000000000 __get_PRIMASK
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:212    .text.__set_PRIMASK:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:217    .text.__set_PRIMASK:0000000000000000 __set_PRIMASK
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:237    .text.__get_FAULTMASK:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:242    .text.__get_FAULTMASK:0000000000000000 __get_FAULTMASK
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:264    .text.__set_FAULTMASK:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:269    .text.__set_FAULTMASK:0000000000000000 __set_FAULTMASK
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:289    .text.__REV:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:294    .text.__REV:0000000000000000 __REV
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:316    .text.__REV16:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:321    .text.__REV16:0000000000000000 __REV16
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:343    .text.__REVSH:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:348    .text.__REVSH:0000000000000000 __REVSH
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:370    .text.__RBIT:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:375    .text.__RBIT:0000000000000000 __RBIT
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:397    .text.__LDREXB:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:402    .text.__LDREXB:0000000000000000 __LDREXB
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:425    .text.__LDREXH:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:430    .text.__LDREXH:0000000000000000 __LDREXH
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:453    .text.__LDREXW:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:458    .text.__LDREXW:0000000000000000 __LDREXW
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:480    .text.__STREXW:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:485    .text.__STREXW:0000000000000000 __STREXW
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:507    .text.__get_CONTROL:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:512    .text.__get_CONTROL:0000000000000000 __get_CONTROL
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:534    .text.__set_CONTROL:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//cckV70NY.s:539    .text.__set_CONTROL:0000000000000000 __set_CONTROL
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
