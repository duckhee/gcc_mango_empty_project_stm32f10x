ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"flash.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.vLEDFlashTask,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	vLEDFlashTask:
  25              	.LFB1:
  26              		.file 1 "FreeRTOS/Common/Minimal/flash.c"
   1:FreeRTOS/Common/Minimal/flash.c **** /*
   2:FreeRTOS/Common/Minimal/flash.c **** 	FreeRTOS V5.4.2 - Copyright (C) 2009 Real Time Engineers Ltd.
   3:FreeRTOS/Common/Minimal/flash.c **** 
   4:FreeRTOS/Common/Minimal/flash.c **** 	This file is part of the FreeRTOS distribution.
   5:FreeRTOS/Common/Minimal/flash.c **** 
   6:FreeRTOS/Common/Minimal/flash.c **** 	FreeRTOS is free software; you can redistribute it and/or modify it	under 
   7:FreeRTOS/Common/Minimal/flash.c **** 	the terms of the GNU General Public License (version 2) as published by the 
   8:FreeRTOS/Common/Minimal/flash.c **** 	Free Software Foundation and modified by the FreeRTOS exception.
   9:FreeRTOS/Common/Minimal/flash.c **** 	**NOTE** The exception to the GPL is included to allow you to distribute a
  10:FreeRTOS/Common/Minimal/flash.c **** 	combined work that includes FreeRTOS without being obliged to provide the 
  11:FreeRTOS/Common/Minimal/flash.c **** 	source code for proprietary components outside of the FreeRTOS kernel.  
  12:FreeRTOS/Common/Minimal/flash.c **** 	Alternative commercial license and support terms are also available upon 
  13:FreeRTOS/Common/Minimal/flash.c **** 	request.  See the licensing section of http://www.FreeRTOS.org for full 
  14:FreeRTOS/Common/Minimal/flash.c **** 	license details.
  15:FreeRTOS/Common/Minimal/flash.c **** 
  16:FreeRTOS/Common/Minimal/flash.c **** 	FreeRTOS is distributed in the hope that it will be useful,	but WITHOUT
  17:FreeRTOS/Common/Minimal/flash.c **** 	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  18:FreeRTOS/Common/Minimal/flash.c **** 	FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  19:FreeRTOS/Common/Minimal/flash.c **** 	more details.
  20:FreeRTOS/Common/Minimal/flash.c **** 
  21:FreeRTOS/Common/Minimal/flash.c **** 	You should have received a copy of the GNU General Public License along
  22:FreeRTOS/Common/Minimal/flash.c **** 	with FreeRTOS; if not, write to the Free Software Foundation, Inc., 59
  23:FreeRTOS/Common/Minimal/flash.c **** 	Temple Place, Suite 330, Boston, MA  02111-1307  USA.
  24:FreeRTOS/Common/Minimal/flash.c **** 
  25:FreeRTOS/Common/Minimal/flash.c **** 
  26:FreeRTOS/Common/Minimal/flash.c **** 	***************************************************************************
  27:FreeRTOS/Common/Minimal/flash.c **** 	*                                                                         *
  28:FreeRTOS/Common/Minimal/flash.c **** 	* Looking for a quick start?  Then check out the FreeRTOS eBook!          *
  29:FreeRTOS/Common/Minimal/flash.c **** 	* See http://www.FreeRTOS.org/Documentation for details                   *
  30:FreeRTOS/Common/Minimal/flash.c **** 	*                                                                         *
  31:FreeRTOS/Common/Minimal/flash.c **** 	***************************************************************************
  32:FreeRTOS/Common/Minimal/flash.c **** 
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s 			page 2


  33:FreeRTOS/Common/Minimal/flash.c **** 	1 tab == 4 spaces!
  34:FreeRTOS/Common/Minimal/flash.c **** 
  35:FreeRTOS/Common/Minimal/flash.c **** 	Please ensure to read the configuration and relevant port sections of the
  36:FreeRTOS/Common/Minimal/flash.c **** 	online documentation.
  37:FreeRTOS/Common/Minimal/flash.c **** 
  38:FreeRTOS/Common/Minimal/flash.c **** 	http://www.FreeRTOS.org - Documentation, latest information, license and
  39:FreeRTOS/Common/Minimal/flash.c **** 	contact details.
  40:FreeRTOS/Common/Minimal/flash.c **** 
  41:FreeRTOS/Common/Minimal/flash.c **** 	http://www.SafeRTOS.com - A version that is certified for use in safety
  42:FreeRTOS/Common/Minimal/flash.c **** 	critical systems.
  43:FreeRTOS/Common/Minimal/flash.c **** 
  44:FreeRTOS/Common/Minimal/flash.c **** 	http://www.OpenRTOS.com - Commercial support, development, porting,
  45:FreeRTOS/Common/Minimal/flash.c **** 	licensing and training services.
  46:FreeRTOS/Common/Minimal/flash.c **** */
  47:FreeRTOS/Common/Minimal/flash.c **** 
  48:FreeRTOS/Common/Minimal/flash.c **** /**
  49:FreeRTOS/Common/Minimal/flash.c ****  * This version of flash .c is for use on systems that have limited stack space
  50:FreeRTOS/Common/Minimal/flash.c ****  * and no display facilities.  The complete version can be found in the 
  51:FreeRTOS/Common/Minimal/flash.c ****  * Demo/Common/Full directory.
  52:FreeRTOS/Common/Minimal/flash.c ****  * 
  53:FreeRTOS/Common/Minimal/flash.c ****  * Three tasks are created, each of which flash an LED at a different rate.  The first 
  54:FreeRTOS/Common/Minimal/flash.c ****  * LED flashes every 200ms, the second every 400ms, the third every 600ms.
  55:FreeRTOS/Common/Minimal/flash.c ****  *
  56:FreeRTOS/Common/Minimal/flash.c ****  * The LED flash tasks provide instant visual feedback.  They show that the scheduler 
  57:FreeRTOS/Common/Minimal/flash.c ****  * is still operational.
  58:FreeRTOS/Common/Minimal/flash.c ****  *
  59:FreeRTOS/Common/Minimal/flash.c ****  */
  60:FreeRTOS/Common/Minimal/flash.c **** 
  61:FreeRTOS/Common/Minimal/flash.c **** 
  62:FreeRTOS/Common/Minimal/flash.c **** #include <stdlib.h>
  63:FreeRTOS/Common/Minimal/flash.c **** 
  64:FreeRTOS/Common/Minimal/flash.c **** /* Scheduler include files. */
  65:FreeRTOS/Common/Minimal/flash.c **** #include "FreeRTOS.h"
  66:FreeRTOS/Common/Minimal/flash.c **** #include "task.h"
  67:FreeRTOS/Common/Minimal/flash.c **** 
  68:FreeRTOS/Common/Minimal/flash.c **** /* Demo program include files. */
  69:FreeRTOS/Common/Minimal/flash.c **** #include "partest.h"
  70:FreeRTOS/Common/Minimal/flash.c **** #include "flash.h"
  71:FreeRTOS/Common/Minimal/flash.c **** 
  72:FreeRTOS/Common/Minimal/flash.c **** #define ledSTACK_SIZE		configMINIMAL_STACK_SIZE
  73:FreeRTOS/Common/Minimal/flash.c **** #define ledNUMBER_OF_LEDS	( 3 )
  74:FreeRTOS/Common/Minimal/flash.c **** #define ledFLASH_RATE_BASE	( ( portTickType ) 333 )
  75:FreeRTOS/Common/Minimal/flash.c **** 
  76:FreeRTOS/Common/Minimal/flash.c **** /* Variable used by the created tasks to calculate the LED number to use, and
  77:FreeRTOS/Common/Minimal/flash.c **** the rate at which they should flash the LED. */
  78:FreeRTOS/Common/Minimal/flash.c **** static volatile unsigned portBASE_TYPE uxFlashTaskNumber = 0;
  79:FreeRTOS/Common/Minimal/flash.c **** 
  80:FreeRTOS/Common/Minimal/flash.c **** /* The task that is created three times. */
  81:FreeRTOS/Common/Minimal/flash.c **** static portTASK_FUNCTION_PROTO( vLEDFlashTask, pvParameters );
  82:FreeRTOS/Common/Minimal/flash.c **** 
  83:FreeRTOS/Common/Minimal/flash.c **** /*-----------------------------------------------------------*/
  84:FreeRTOS/Common/Minimal/flash.c **** 
  85:FreeRTOS/Common/Minimal/flash.c **** void vStartLEDFlashTasks( unsigned portBASE_TYPE uxPriority )
  86:FreeRTOS/Common/Minimal/flash.c **** {
  87:FreeRTOS/Common/Minimal/flash.c **** signed portBASE_TYPE xLEDTask;
  88:FreeRTOS/Common/Minimal/flash.c **** 
  89:FreeRTOS/Common/Minimal/flash.c **** 	/* Create the three tasks. */
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s 			page 3


  90:FreeRTOS/Common/Minimal/flash.c **** 	for( xLEDTask = 0; xLEDTask < ledNUMBER_OF_LEDS; ++xLEDTask )
  91:FreeRTOS/Common/Minimal/flash.c **** 	{
  92:FreeRTOS/Common/Minimal/flash.c **** 		/* Spawn the task. */
  93:FreeRTOS/Common/Minimal/flash.c **** 		xTaskCreate( vLEDFlashTask, ( signed portCHAR * ) "LEDx", ledSTACK_SIZE, NULL, uxPriority, ( xTas
  94:FreeRTOS/Common/Minimal/flash.c **** 	}
  95:FreeRTOS/Common/Minimal/flash.c **** }
  96:FreeRTOS/Common/Minimal/flash.c **** /*-----------------------------------------------------------*/
  97:FreeRTOS/Common/Minimal/flash.c **** 
  98:FreeRTOS/Common/Minimal/flash.c **** static portTASK_FUNCTION( vLEDFlashTask, pvParameters )
  99:FreeRTOS/Common/Minimal/flash.c **** {
  27              		.loc 1 99 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 83B0     		sub	sp, sp, #12
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
 100:FreeRTOS/Common/Minimal/flash.c **** portTickType xFlashRate, xLastFlashTime;
 101:FreeRTOS/Common/Minimal/flash.c **** unsigned portBASE_TYPE uxLED;
 102:FreeRTOS/Common/Minimal/flash.c **** 
 103:FreeRTOS/Common/Minimal/flash.c **** 	/* The parameters are not used. */
 104:FreeRTOS/Common/Minimal/flash.c **** 	( void ) pvParameters;
 105:FreeRTOS/Common/Minimal/flash.c **** 
 106:FreeRTOS/Common/Minimal/flash.c **** 	/* Calculate the LED and flash rate. */
 107:FreeRTOS/Common/Minimal/flash.c **** 	portENTER_CRITICAL();
  41              		.loc 1 107 0
  42 0004 FFF7FEFF 		bl	vPortEnterCritical
  43              	.LVL1:
 108:FreeRTOS/Common/Minimal/flash.c **** 	{
 109:FreeRTOS/Common/Minimal/flash.c **** 		/* See which of the eight LED's we should use. */
 110:FreeRTOS/Common/Minimal/flash.c **** 		uxLED = uxFlashTaskNumber;
  44              		.loc 1 110 0
  45 0008 0E4B     		ldr	r3, .L4
  46 000a 1D68     		ldr	r5, [r3]
  47              	.LVL2:
 111:FreeRTOS/Common/Minimal/flash.c **** 
 112:FreeRTOS/Common/Minimal/flash.c **** 		/* Update so the next task uses the next LED. */
 113:FreeRTOS/Common/Minimal/flash.c **** 		uxFlashTaskNumber++;
  48              		.loc 1 113 0
  49 000c 1A68     		ldr	r2, [r3]
  50 000e 0132     		adds	r2, r2, #1
  51 0010 1A60     		str	r2, [r3]
 114:FreeRTOS/Common/Minimal/flash.c **** 	}
 115:FreeRTOS/Common/Minimal/flash.c **** 	portEXIT_CRITICAL();
  52              		.loc 1 115 0
  53 0012 FFF7FEFF 		bl	vPortExitCritical
  54              	.LVL3:
 116:FreeRTOS/Common/Minimal/flash.c **** 
 117:FreeRTOS/Common/Minimal/flash.c **** 	xFlashRate = ledFLASH_RATE_BASE + ( ledFLASH_RATE_BASE * ( portTickType ) uxLED );
  55              		.loc 1 117 0
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s 			page 4


  56 0016 40F24D14 		movw	r4, #333
  57 001a 05FB0444 		mla	r4, r5, r4, r4
  58              	.LVL4:
 118:FreeRTOS/Common/Minimal/flash.c **** 	xFlashRate /= portTICK_RATE_MS;
 119:FreeRTOS/Common/Minimal/flash.c **** 
 120:FreeRTOS/Common/Minimal/flash.c **** 	/* We will turn the LED on and off again in the delay period, so each
 121:FreeRTOS/Common/Minimal/flash.c **** 	delay is only half the total period. */
 122:FreeRTOS/Common/Minimal/flash.c **** 	xFlashRate /= ( portTickType ) 2;
  59              		.loc 1 122 0
  60 001e 6408     		lsrs	r4, r4, #1
  61              	.LVL5:
 123:FreeRTOS/Common/Minimal/flash.c **** 
 124:FreeRTOS/Common/Minimal/flash.c **** 	/* We need to initialise xLastFlashTime prior to the first call to 
 125:FreeRTOS/Common/Minimal/flash.c **** 	vTaskDelayUntil(). */
 126:FreeRTOS/Common/Minimal/flash.c **** 	xLastFlashTime = xTaskGetTickCount();
  62              		.loc 1 126 0
  63 0020 FFF7FEFF 		bl	xTaskGetTickCount
  64              	.LVL6:
  65 0024 0190     		str	r0, [sp, #4]
  66              	.L2:
 127:FreeRTOS/Common/Minimal/flash.c **** 
 128:FreeRTOS/Common/Minimal/flash.c **** 	for(;;)
 129:FreeRTOS/Common/Minimal/flash.c **** 	{
 130:FreeRTOS/Common/Minimal/flash.c **** 		/* Delay for half the flash period then turn the LED on. */
 131:FreeRTOS/Common/Minimal/flash.c **** 		vTaskDelayUntil( &xLastFlashTime, xFlashRate );
  67              		.loc 1 131 0 discriminator 1
  68 0026 2146     		mov	r1, r4
  69 0028 01A8     		add	r0, sp, #4
  70 002a FFF7FEFF 		bl	vTaskDelayUntil
  71              	.LVL7:
 132:FreeRTOS/Common/Minimal/flash.c **** 		vParTestToggleLED( uxLED );
  72              		.loc 1 132 0 discriminator 1
  73 002e 2846     		mov	r0, r5
  74 0030 FFF7FEFF 		bl	vParTestToggleLED
  75              	.LVL8:
 133:FreeRTOS/Common/Minimal/flash.c **** 
 134:FreeRTOS/Common/Minimal/flash.c **** 		/* Delay for half the flash period then turn the LED off. */
 135:FreeRTOS/Common/Minimal/flash.c **** 		vTaskDelayUntil( &xLastFlashTime, xFlashRate );
  76              		.loc 1 135 0 discriminator 1
  77 0034 2146     		mov	r1, r4
  78 0036 01A8     		add	r0, sp, #4
  79 0038 FFF7FEFF 		bl	vTaskDelayUntil
  80              	.LVL9:
 136:FreeRTOS/Common/Minimal/flash.c **** 		vParTestToggleLED( uxLED );
  81              		.loc 1 136 0 discriminator 1
  82 003c 2846     		mov	r0, r5
  83 003e FFF7FEFF 		bl	vParTestToggleLED
  84              	.LVL10:
  85 0042 F0E7     		b	.L2
  86              	.L5:
  87              		.align	2
  88              	.L4:
  89 0044 00000000 		.word	.LANCHOR0
  90              		.cfi_endproc
  91              	.LFE1:
  93              		.section	.text.vStartLEDFlashTasks,"ax",%progbits
  94              		.align	2
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s 			page 5


  95              		.global	vStartLEDFlashTasks
  96              		.thumb
  97              		.thumb_func
  99              	vStartLEDFlashTasks:
 100              	.LFB0:
  86:FreeRTOS/Common/Minimal/flash.c **** signed portBASE_TYPE xLEDTask;
 101              		.loc 1 86 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              	.LVL11:
 106 0000 30B5     		push	{r4, r5, lr}
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 12
 109              		.cfi_offset 4, -12
 110              		.cfi_offset 5, -8
 111              		.cfi_offset 14, -4
 112 0002 83B0     		sub	sp, sp, #12
 113              	.LCFI3:
 114              		.cfi_def_cfa_offset 24
 115 0004 0546     		mov	r5, r0
 116              	.LVL12:
  90:FreeRTOS/Common/Minimal/flash.c **** 	{
 117              		.loc 1 90 0
 118 0006 0024     		movs	r4, #0
 119 0008 08E0     		b	.L7
 120              	.LVL13:
 121              	.L8:
  93:FreeRTOS/Common/Minimal/flash.c **** 	}
 122              		.loc 1 93 0 discriminator 3
 123 000a 0023     		movs	r3, #0
 124 000c 0193     		str	r3, [sp, #4]
 125 000e 0095     		str	r5, [sp]
 126 0010 8022     		movs	r2, #128
 127 0012 0449     		ldr	r1, .L10
 128 0014 0448     		ldr	r0, .L10+4
 129 0016 FFF7FEFF 		bl	xTaskCreate
 130              	.LVL14:
  90:FreeRTOS/Common/Minimal/flash.c **** 	{
 131              		.loc 1 90 0 discriminator 3
 132 001a 0134     		adds	r4, r4, #1
 133              	.LVL15:
 134              	.L7:
  90:FreeRTOS/Common/Minimal/flash.c **** 	{
 135              		.loc 1 90 0 is_stmt 0 discriminator 1
 136 001c 022C     		cmp	r4, #2
 137 001e F4DD     		ble	.L8
  95:FreeRTOS/Common/Minimal/flash.c **** /*-----------------------------------------------------------*/
 138              		.loc 1 95 0 is_stmt 1
 139 0020 03B0     		add	sp, sp, #12
 140              	.LCFI4:
 141              		.cfi_def_cfa_offset 12
 142              		@ sp needed
 143 0022 30BD     		pop	{r4, r5, pc}
 144              	.LVL16:
 145              	.L11:
 146              		.align	2
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s 			page 6


 147              	.L10:
 148 0024 00000000 		.word	.LC0
 149 0028 00000000 		.word	vLEDFlashTask
 150              		.cfi_endproc
 151              	.LFE0:
 153              		.section	.bss.uxFlashTaskNumber,"aw",%nobits
 154              		.align	2
 155              		.set	.LANCHOR0,. + 0
 158              	uxFlashTaskNumber:
 159 0000 00000000 		.space	4
 160              		.section	.rodata.str1.4,"aMS",%progbits,1
 161              		.align	2
 162              	.LC0:
 163 0000 4C454478 		.ascii	"LEDx\000"
 163      00
 164              		.text
 165              	.Letext0:
 166              		.file 2 "FreeRTOS/ARMCM3/Inc/portmacro.h"
 167              		.file 3 "FreeRTOS/Inc/task.h"
 168              		.file 4 "FreeRTOS/Common/Inc/partest.h"
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 flash.c
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s:20     .text.vLEDFlashTask:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s:24     .text.vLEDFlashTask:0000000000000000 vLEDFlashTask
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s:89     .text.vLEDFlashTask:0000000000000044 $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s:94     .text.vStartLEDFlashTasks:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s:99     .text.vStartLEDFlashTasks:0000000000000000 vStartLEDFlashTasks
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s:148    .text.vStartLEDFlashTasks:0000000000000024 $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s:154    .bss.uxFlashTaskNumber:0000000000000000 $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s:158    .bss.uxFlashTaskNumber:0000000000000000 uxFlashTaskNumber
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccGuCCr2.s:161    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskGetTickCount
vTaskDelayUntil
vParTestToggleLED
xTaskCreate
