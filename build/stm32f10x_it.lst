ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f10x_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	2
  21              		.global	NMI_Handler
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB28:
  27              		.file 1 "src/stm32f10x_it.c"
   1:src/stm32f10x_it.c **** /**
   2:src/stm32f10x_it.c ****   ******************************************************************************
   3:src/stm32f10x_it.c ****   * @file    SysTick/stm32f10x_it.c 
   4:src/stm32f10x_it.c ****   * @author  MCD Application Team
   5:src/stm32f10x_it.c ****   * @version V3.1.0
   6:src/stm32f10x_it.c ****   * @date    06/19/2009
   7:src/stm32f10x_it.c ****   * @brief   Main Interrupt Service Routines.
   8:src/stm32f10x_it.c ****   *          This file provides template for all exceptions handler and peripherals
   9:src/stm32f10x_it.c ****   *          interrupt service routine.
  10:src/stm32f10x_it.c ****   ******************************************************************************
  11:src/stm32f10x_it.c ****   * @copy
  12:src/stm32f10x_it.c ****   *
  13:src/stm32f10x_it.c **** * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  14:src/stm32f10x_it.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  15:src/stm32f10x_it.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  16:src/stm32f10x_it.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  17:src/stm32f10x_it.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  18:src/stm32f10x_it.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  19:src/stm32f10x_it.c ****   *
  20:src/stm32f10x_it.c ****   * <h2><center>&copy; COPYRIGHT 2009 STMicroelectronics</center></h2>
  21:src/stm32f10x_it.c ****   */ 
  22:src/stm32f10x_it.c **** 
  23:src/stm32f10x_it.c **** /* Includes ------------------------------------------------------------------*/
  24:src/stm32f10x_it.c **** #include "stm32f10x_it.h"
  25:src/stm32f10x_it.c **** #include "stm32f10x_exti.h"
  26:src/stm32f10x_it.c **** #include "stm32f10x_dma.h"
  27:src/stm32f10x_it.c **** 
  28:src/stm32f10x_it.c **** #include "hw_config.h"
  29:src/stm32f10x_it.c **** 
  30:src/stm32f10x_it.c **** /* Private typedef -----------------------------------------------------------*/
  31:src/stm32f10x_it.c **** 
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 2


  32:src/stm32f10x_it.c **** /* Private define ------------------------------------------------------------*/
  33:src/stm32f10x_it.c **** 
  34:src/stm32f10x_it.c **** /* Private macro -------------------------------------------------------------*/
  35:src/stm32f10x_it.c **** 
  36:src/stm32f10x_it.c **** /* Private variables ---------------------------------------------------------*/
  37:src/stm32f10x_it.c **** uint8_t Send_Buffer[2];
  38:src/stm32f10x_it.c **** extern uint32_t ADC_ConvertedValueX;
  39:src/stm32f10x_it.c **** extern uint32_t ADC_ConvertedValueX_1;
  40:src/stm32f10x_it.c **** 
  41:src/stm32f10x_it.c **** /* Private function prototypes -----------------------------------------------*/
  42:src/stm32f10x_it.c **** /* Private functions ---------------------------------------------------------*/
  43:src/stm32f10x_it.c **** 
  44:src/stm32f10x_it.c **** /******************************************************************************/
  45:src/stm32f10x_it.c **** /*            Cortex-M3 Processor Exceptions Handlers                         */
  46:src/stm32f10x_it.c **** /******************************************************************************/
  47:src/stm32f10x_it.c **** 
  48:src/stm32f10x_it.c **** /**
  49:src/stm32f10x_it.c ****   * @brief  This function handles NMI exception.
  50:src/stm32f10x_it.c ****   * @param  None
  51:src/stm32f10x_it.c ****   * @retval None
  52:src/stm32f10x_it.c ****   */
  53:src/stm32f10x_it.c **** void NMI_Handler(void)
  54:src/stm32f10x_it.c **** {
  28              		.loc 1 54 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE28:
  37 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	2
  39              		.global	HardFault_Handler
  40              		.thumb
  41              		.thumb_func
  43              	HardFault_Handler:
  44              	.LFB29:
  55:src/stm32f10x_it.c **** }
  56:src/stm32f10x_it.c **** 
  57:src/stm32f10x_it.c **** /**
  58:src/stm32f10x_it.c ****   * @brief  This function handles Hard Fault exception.
  59:src/stm32f10x_it.c ****   * @param  None
  60:src/stm32f10x_it.c ****   * @retval None
  61:src/stm32f10x_it.c ****   */
  62:src/stm32f10x_it.c **** void HardFault_Handler(void)
  63:src/stm32f10x_it.c **** {
  45              		.loc 1 63 0
  46              		.cfi_startproc
  47              		@ Volatile: function does not return.
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51              	.L3:
  52 0000 FEE7     		b	.L3
  53              		.cfi_endproc
  54              	.LFE29:
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 3


  56 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  57              		.align	2
  58              		.global	MemManage_Handler
  59              		.thumb
  60              		.thumb_func
  62              	MemManage_Handler:
  63              	.LFB30:
  64:src/stm32f10x_it.c ****     /* Go to infinite loop when Hard Fault exception occurs */
  65:src/stm32f10x_it.c ****     while (1)
  66:src/stm32f10x_it.c ****     {
  67:src/stm32f10x_it.c ****     }
  68:src/stm32f10x_it.c **** }
  69:src/stm32f10x_it.c **** 
  70:src/stm32f10x_it.c **** /**
  71:src/stm32f10x_it.c ****   * @brief  This function handles Memory Manage exception.
  72:src/stm32f10x_it.c ****   * @param  None
  73:src/stm32f10x_it.c ****   * @retval None
  74:src/stm32f10x_it.c ****   */
  75:src/stm32f10x_it.c **** void MemManage_Handler(void)
  76:src/stm32f10x_it.c **** {
  64              		.loc 1 76 0
  65              		.cfi_startproc
  66              		@ Volatile: function does not return.
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70              	.L5:
  71 0000 FEE7     		b	.L5
  72              		.cfi_endproc
  73              	.LFE30:
  75 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  76              		.align	2
  77              		.global	BusFault_Handler
  78              		.thumb
  79              		.thumb_func
  81              	BusFault_Handler:
  82              	.LFB31:
  77:src/stm32f10x_it.c ****     /* Go to infinite loop when Memory Manage exception occurs */
  78:src/stm32f10x_it.c ****     while (1)
  79:src/stm32f10x_it.c ****     {
  80:src/stm32f10x_it.c ****     }
  81:src/stm32f10x_it.c **** }
  82:src/stm32f10x_it.c **** 
  83:src/stm32f10x_it.c **** /**
  84:src/stm32f10x_it.c ****   * @brief  This function handles Bus Fault exception.
  85:src/stm32f10x_it.c ****   * @param  None
  86:src/stm32f10x_it.c ****   * @retval None
  87:src/stm32f10x_it.c ****   */
  88:src/stm32f10x_it.c **** void BusFault_Handler(void)
  89:src/stm32f10x_it.c **** {
  83              		.loc 1 89 0
  84              		.cfi_startproc
  85              		@ Volatile: function does not return.
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89              	.L7:
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 4


  90 0000 FEE7     		b	.L7
  91              		.cfi_endproc
  92              	.LFE31:
  94 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
  95              		.align	2
  96              		.global	UsageFault_Handler
  97              		.thumb
  98              		.thumb_func
 100              	UsageFault_Handler:
 101              	.LFB32:
  90:src/stm32f10x_it.c ****     /* Go to infinite loop when Bus Fault exception occurs */
  91:src/stm32f10x_it.c ****     while (1)
  92:src/stm32f10x_it.c ****     {
  93:src/stm32f10x_it.c ****     }
  94:src/stm32f10x_it.c **** }
  95:src/stm32f10x_it.c **** 
  96:src/stm32f10x_it.c **** /**
  97:src/stm32f10x_it.c ****   * @brief  This function handles Usage Fault exception.
  98:src/stm32f10x_it.c ****   * @param  None
  99:src/stm32f10x_it.c ****   * @retval None
 100:src/stm32f10x_it.c ****   */
 101:src/stm32f10x_it.c **** void UsageFault_Handler(void)
 102:src/stm32f10x_it.c **** {
 102              		.loc 1 102 0
 103              		.cfi_startproc
 104              		@ Volatile: function does not return.
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.L9:
 109 0000 FEE7     		b	.L9
 110              		.cfi_endproc
 111              	.LFE32:
 113 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 114              		.align	2
 115              		.global	SVC_Handler
 116              		.thumb
 117              		.thumb_func
 119              	SVC_Handler:
 120              	.LFB33:
 103:src/stm32f10x_it.c ****     /* Go to infinite loop when Usage Fault exception occurs */
 104:src/stm32f10x_it.c ****     while (1)
 105:src/stm32f10x_it.c ****     {
 106:src/stm32f10x_it.c ****     }
 107:src/stm32f10x_it.c **** }
 108:src/stm32f10x_it.c **** 
 109:src/stm32f10x_it.c **** /**
 110:src/stm32f10x_it.c ****   * @brief  This function handles SVCall exception.
 111:src/stm32f10x_it.c ****   * @param  None
 112:src/stm32f10x_it.c ****   * @retval None
 113:src/stm32f10x_it.c ****   */
 114:src/stm32f10x_it.c **** void SVC_Handler(void)
 115:src/stm32f10x_it.c **** {
 121              		.loc 1 115 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 5


 125              		@ link register save eliminated.
 126 0000 7047     		bx	lr
 127              		.cfi_endproc
 128              	.LFE33:
 130 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 131              		.align	2
 132              		.global	DebugMon_Handler
 133              		.thumb
 134              		.thumb_func
 136              	DebugMon_Handler:
 137              	.LFB34:
 116:src/stm32f10x_it.c **** }
 117:src/stm32f10x_it.c **** 
 118:src/stm32f10x_it.c **** /**
 119:src/stm32f10x_it.c ****   * @brief  This function handles Debug Monitor exception.
 120:src/stm32f10x_it.c ****   * @param  None
 121:src/stm32f10x_it.c ****   * @retval None
 122:src/stm32f10x_it.c ****   */
 123:src/stm32f10x_it.c **** void DebugMon_Handler(void)
 124:src/stm32f10x_it.c **** {
 138              		.loc 1 124 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 143 0000 7047     		bx	lr
 144              		.cfi_endproc
 145              	.LFE34:
 147 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 148              		.align	2
 149              		.global	PendSV_Handler
 150              		.thumb
 151              		.thumb_func
 153              	PendSV_Handler:
 154              	.LFB35:
 125:src/stm32f10x_it.c **** }
 126:src/stm32f10x_it.c **** 
 127:src/stm32f10x_it.c **** /**
 128:src/stm32f10x_it.c ****   * @brief  This function handles PendSV_Handler exception.
 129:src/stm32f10x_it.c ****   * @param  None
 130:src/stm32f10x_it.c ****   * @retval None
 131:src/stm32f10x_it.c ****   */
 132:src/stm32f10x_it.c **** void PendSV_Handler(void)
 133:src/stm32f10x_it.c **** {
 155              		.loc 1 133 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE35:
 164 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 165              		.align	2
 166              		.global	SysTick_Handler
 167              		.thumb
 168              		.thumb_func
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 6


 170              	SysTick_Handler:
 171              	.LFB36:
 134:src/stm32f10x_it.c **** }
 135:src/stm32f10x_it.c **** 
 136:src/stm32f10x_it.c **** /**
 137:src/stm32f10x_it.c ****   * @brief  This function handles SysTick Handler.
 138:src/stm32f10x_it.c ****   * @param  None
 139:src/stm32f10x_it.c ****   * @retval None
 140:src/stm32f10x_it.c ****   */
 141:src/stm32f10x_it.c **** void SysTick_Handler(void)
 142:src/stm32f10x_it.c **** {
 172              		.loc 1 142 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		.loc 1 142 0
 177 0000 08B5     		push	{r3, lr}
 178              	.LCFI0:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 3, -8
 181              		.cfi_offset 14, -4
 143:src/stm32f10x_it.c ****     TimingDelay_Decrement();
 182              		.loc 1 143 0
 183 0002 FFF7FEFF 		bl	TimingDelay_Decrement
 184              	.LVL0:
 185 0006 08BD     		pop	{r3, pc}
 186              		.cfi_endproc
 187              	.LFE36:
 189              		.section	.text.WWDG_IRQHandler,"ax",%progbits
 190              		.align	2
 191              		.global	WWDG_IRQHandler
 192              		.thumb
 193              		.thumb_func
 195              	WWDG_IRQHandler:
 196              	.LFB37:
 144:src/stm32f10x_it.c **** }
 145:src/stm32f10x_it.c **** 
 146:src/stm32f10x_it.c **** /******************************************************************************/
 147:src/stm32f10x_it.c **** /*            STM32F10x Peripherals Interrupt Handlers                        */
 148:src/stm32f10x_it.c **** /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
 149:src/stm32f10x_it.c **** /*  available peripheral interrupt handler's name please refer to the startup */
 150:src/stm32f10x_it.c **** /*  file (startup_stm32f10x_xx.s).                                            */
 151:src/stm32f10x_it.c **** /******************************************************************************/
 152:src/stm32f10x_it.c **** 
 153:src/stm32f10x_it.c **** /*******************************************************************************
 154:src/stm32f10x_it.c **** * Function Name  : WWDG_IRQHandler
 155:src/stm32f10x_it.c **** * Description    : This function handles WWDG interrupt request.
 156:src/stm32f10x_it.c **** * Input          : None
 157:src/stm32f10x_it.c **** * Output         : None
 158:src/stm32f10x_it.c **** * Return         : None
 159:src/stm32f10x_it.c **** *******************************************************************************/
 160:src/stm32f10x_it.c **** void WWDG_IRQHandler(void)
 161:src/stm32f10x_it.c **** {
 197              		.loc 1 161 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 7


 201              		@ link register save eliminated.
 202 0000 7047     		bx	lr
 203              		.cfi_endproc
 204              	.LFE37:
 206 0002 00BF     		.section	.text.PVD_IRQHandler,"ax",%progbits
 207              		.align	2
 208              		.global	PVD_IRQHandler
 209              		.thumb
 210              		.thumb_func
 212              	PVD_IRQHandler:
 213              	.LFB38:
 162:src/stm32f10x_it.c **** }
 163:src/stm32f10x_it.c **** 
 164:src/stm32f10x_it.c **** /*******************************************************************************
 165:src/stm32f10x_it.c **** * Function Name  : PVD_IRQHandler
 166:src/stm32f10x_it.c **** * Description    : This function handles PVD interrupt request.
 167:src/stm32f10x_it.c **** * Input          : None
 168:src/stm32f10x_it.c **** * Output         : None
 169:src/stm32f10x_it.c **** * Return         : None
 170:src/stm32f10x_it.c **** *******************************************************************************/
 171:src/stm32f10x_it.c **** void PVD_IRQHandler(void)
 172:src/stm32f10x_it.c **** {
 214              		.loc 1 172 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 219 0000 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE38:
 223 0002 00BF     		.section	.text.TAMPER_IRQHandler,"ax",%progbits
 224              		.align	2
 225              		.global	TAMPER_IRQHandler
 226              		.thumb
 227              		.thumb_func
 229              	TAMPER_IRQHandler:
 230              	.LFB39:
 173:src/stm32f10x_it.c **** }
 174:src/stm32f10x_it.c **** 
 175:src/stm32f10x_it.c **** /*******************************************************************************
 176:src/stm32f10x_it.c **** * Function Name  : TAMPER_IRQHandler
 177:src/stm32f10x_it.c **** * Description    : This function handles Tamper interrupt request. 
 178:src/stm32f10x_it.c **** * Input          : None
 179:src/stm32f10x_it.c **** * Output         : None
 180:src/stm32f10x_it.c **** * Return         : None
 181:src/stm32f10x_it.c **** *******************************************************************************/
 182:src/stm32f10x_it.c **** void TAMPER_IRQHandler(void)
 183:src/stm32f10x_it.c **** {
 231              		.loc 1 183 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236 0000 7047     		bx	lr
 237              		.cfi_endproc
 238              	.LFE39:
 240 0002 00BF     		.section	.text.RTC_IRQHandler,"ax",%progbits
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 8


 241              		.align	2
 242              		.global	RTC_IRQHandler
 243              		.thumb
 244              		.thumb_func
 246              	RTC_IRQHandler:
 247              	.LFB40:
 184:src/stm32f10x_it.c **** }
 185:src/stm32f10x_it.c **** 
 186:src/stm32f10x_it.c **** /*******************************************************************************
 187:src/stm32f10x_it.c **** * Function Name  : RTC_IRQHandler
 188:src/stm32f10x_it.c **** * Description    : This function handles RTC global interrupt request.
 189:src/stm32f10x_it.c **** * Input          : None
 190:src/stm32f10x_it.c **** * Output         : None
 191:src/stm32f10x_it.c **** * Return         : None
 192:src/stm32f10x_it.c **** *******************************************************************************/
 193:src/stm32f10x_it.c **** void RTC_IRQHandler(void)
 194:src/stm32f10x_it.c **** {
 248              		.loc 1 194 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253 0000 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE40:
 257 0002 00BF     		.section	.text.FLASH_IRQHandler,"ax",%progbits
 258              		.align	2
 259              		.global	FLASH_IRQHandler
 260              		.thumb
 261              		.thumb_func
 263              	FLASH_IRQHandler:
 264              	.LFB41:
 195:src/stm32f10x_it.c **** }
 196:src/stm32f10x_it.c **** 
 197:src/stm32f10x_it.c **** /*******************************************************************************
 198:src/stm32f10x_it.c **** * Function Name  : FLASH_IRQHandler
 199:src/stm32f10x_it.c **** * Description    : This function handles Flash interrupt request.
 200:src/stm32f10x_it.c **** * Input          : None
 201:src/stm32f10x_it.c **** * Output         : None
 202:src/stm32f10x_it.c **** * Return         : None
 203:src/stm32f10x_it.c **** *******************************************************************************/
 204:src/stm32f10x_it.c **** void FLASH_IRQHandler(void)
 205:src/stm32f10x_it.c **** {
 265              		.loc 1 205 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270 0000 7047     		bx	lr
 271              		.cfi_endproc
 272              	.LFE41:
 274 0002 00BF     		.section	.text.RCC_IRQHandler,"ax",%progbits
 275              		.align	2
 276              		.global	RCC_IRQHandler
 277              		.thumb
 278              		.thumb_func
 280              	RCC_IRQHandler:
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 9


 281              	.LFB42:
 206:src/stm32f10x_it.c **** }
 207:src/stm32f10x_it.c **** 
 208:src/stm32f10x_it.c **** /*******************************************************************************
 209:src/stm32f10x_it.c **** * Function Name  : RCC_IRQHandler
 210:src/stm32f10x_it.c **** * Description    : This function handles RCC interrupt request. 
 211:src/stm32f10x_it.c **** * Input          : None
 212:src/stm32f10x_it.c **** * Output         : None
 213:src/stm32f10x_it.c **** * Return         : None
 214:src/stm32f10x_it.c **** *******************************************************************************/
 215:src/stm32f10x_it.c **** void RCC_IRQHandler(void)
 216:src/stm32f10x_it.c **** {
 282              		.loc 1 216 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287 0000 7047     		bx	lr
 288              		.cfi_endproc
 289              	.LFE42:
 291 0002 00BF     		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 292              		.align	2
 293              		.global	EXTI0_IRQHandler
 294              		.thumb
 295              		.thumb_func
 297              	EXTI0_IRQHandler:
 298              	.LFB43:
 217:src/stm32f10x_it.c **** }
 218:src/stm32f10x_it.c **** 
 219:src/stm32f10x_it.c **** /*******************************************************************************
 220:src/stm32f10x_it.c **** * Function Name  : EXTI0_IRQHandler
 221:src/stm32f10x_it.c **** * Description    : This function handles External interrupt Line 0 request.
 222:src/stm32f10x_it.c **** * Input          : None
 223:src/stm32f10x_it.c **** * Output         : None
 224:src/stm32f10x_it.c **** * Return         : None
 225:src/stm32f10x_it.c **** *******************************************************************************/
 226:src/stm32f10x_it.c **** 
 227:src/stm32f10x_it.c **** static bool toggle_data_key1 = FALSE;
 228:src/stm32f10x_it.c **** 
 229:src/stm32f10x_it.c **** void EXTI0_IRQHandler(void)
 230:src/stm32f10x_it.c **** {
 299              		.loc 1 230 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		.loc 1 230 0
 304 0000 08B5     		push	{r3, lr}
 305              	.LCFI1:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 3, -8
 308              		.cfi_offset 14, -4
 231:src/stm32f10x_it.c ****     if(EXTI_GetITStatus(GPIO_EXTI_Line_KEY1) != RESET) {
 309              		.loc 1 231 0
 310 0002 0120     		movs	r0, #1
 311 0004 FFF7FEFF 		bl	EXTI_GetITStatus
 312              	.LVL1:
 313 0008 48B3     		cbz	r0, .L21
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 10


 232:src/stm32f10x_it.c ****         printf("Left-WKUP Button Press\r\n");
 314              		.loc 1 232 0
 315 000a 1548     		ldr	r0, .L27
 316 000c FFF7FEFF 		bl	puts
 317              	.LVL2:
 233:src/stm32f10x_it.c **** 
 234:src/stm32f10x_it.c **** #if 0
 235:src/stm32f10x_it.c ****         /* USB Remote Wakup ... */
 236:src/stm32f10x_it.c ****         if (pInformation->Current_Feature & 0x20) //Remote wake-up enabled
 237:src/stm32f10x_it.c ****         {
 238:src/stm32f10x_it.c ****           Resume(RESUME_INTERNAL);
 239:src/stm32f10x_it.c ****         }
 240:src/stm32f10x_it.c **** #endif
 241:src/stm32f10x_it.c **** 
 242:src/stm32f10x_it.c ****         if(TRUE == g_TestProcessState)
 318              		.loc 1 242 0
 319 0010 144B     		ldr	r3, .L27+4
 320 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 321 0014 012B     		cmp	r3, #1
 322 0016 1FD1     		bne	.L23
 243:src/stm32f10x_it.c ****         {
 244:src/stm32f10x_it.c ****             Send_Buffer[0] = 0x05;
 323              		.loc 1 244 0
 324 0018 0522     		movs	r2, #5
 325 001a 134B     		ldr	r3, .L27+8
 326 001c 1A70     		strb	r2, [r3]
 245:src/stm32f10x_it.c **** 
 246:src/stm32f10x_it.c ****             if(toggle_data_key1)
 327              		.loc 1 246 0
 328 001e 134B     		ldr	r3, .L27+12
 329 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 330 0022 33B1     		cbz	r3, .L24
 247:src/stm32f10x_it.c ****             {
 248:src/stm32f10x_it.c ****                 toggle_data_key1 = FALSE;
 331              		.loc 1 248 0
 332 0024 0022     		movs	r2, #0
 333 0026 114B     		ldr	r3, .L27+12
 334 0028 1A70     		strb	r2, [r3]
 249:src/stm32f10x_it.c ****                 Send_Buffer[1] = 0x01;
 335              		.loc 1 249 0
 336 002a 0122     		movs	r2, #1
 337 002c 0E4B     		ldr	r3, .L27+8
 338 002e 5A70     		strb	r2, [r3, #1]
 339 0030 05E0     		b	.L25
 340              	.L24:
 250:src/stm32f10x_it.c ****             }
 251:src/stm32f10x_it.c ****             else
 252:src/stm32f10x_it.c ****             {
 253:src/stm32f10x_it.c ****                 toggle_data_key1 = TRUE;
 341              		.loc 1 253 0
 342 0032 0122     		movs	r2, #1
 343 0034 0D4B     		ldr	r3, .L27+12
 344 0036 1A70     		strb	r2, [r3]
 254:src/stm32f10x_it.c ****                 Send_Buffer[1] = 0x00;
 345              		.loc 1 254 0
 346 0038 0022     		movs	r2, #0
 347 003a 0B4B     		ldr	r3, .L27+8
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 11


 348 003c 5A70     		strb	r2, [r3, #1]
 349              	.L25:
 255:src/stm32f10x_it.c ****             }
 256:src/stm32f10x_it.c **** 
 257:src/stm32f10x_it.c ****             UserToPMABufferCopy(Send_Buffer, ENDP1_TXADDR, 2);
 350              		.loc 1 257 0
 351 003e 0222     		movs	r2, #2
 352 0040 4FF48071 		mov	r1, #256
 353 0044 0848     		ldr	r0, .L27+8
 354 0046 FFF7FEFF 		bl	UserToPMABufferCopy
 355              	.LVL3:
 258:src/stm32f10x_it.c ****             SetEPTxCount(ENDP1, 2);
 356              		.loc 1 258 0
 357 004a 0221     		movs	r1, #2
 358 004c 0120     		movs	r0, #1
 359 004e FFF7FEFF 		bl	SetEPTxCount
 360              	.LVL4:
 259:src/stm32f10x_it.c ****             SetEPTxValid(ENDP1);
 361              		.loc 1 259 0
 362 0052 0120     		movs	r0, #1
 363 0054 FFF7FEFF 		bl	SetEPTxValid
 364              	.LVL5:
 365              	.L23:
 260:src/stm32f10x_it.c ****         }
 261:src/stm32f10x_it.c **** 
 262:src/stm32f10x_it.c ****         EXTI_ClearITPendingBit(GPIO_EXTI_Line_KEY1);
 366              		.loc 1 262 0
 367 0058 0120     		movs	r0, #1
 368 005a FFF7FEFF 		bl	EXTI_ClearITPendingBit
 369              	.LVL6:
 370              	.L21:
 371 005e 08BD     		pop	{r3, pc}
 372              	.L28:
 373              		.align	2
 374              	.L27:
 375 0060 00000000 		.word	.LC0
 376 0064 00000000 		.word	g_TestProcessState
 377 0068 00000000 		.word	Send_Buffer
 378 006c 00000000 		.word	.LANCHOR0
 379              		.cfi_endproc
 380              	.LFE43:
 382              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 383              		.align	2
 384              		.global	EXTI1_IRQHandler
 385              		.thumb
 386              		.thumb_func
 388              	EXTI1_IRQHandler:
 389              	.LFB44:
 263:src/stm32f10x_it.c ****     }
 264:src/stm32f10x_it.c **** }
 265:src/stm32f10x_it.c **** 
 266:src/stm32f10x_it.c **** /*******************************************************************************
 267:src/stm32f10x_it.c **** * Function Name  : EXTI1_IRQHandler
 268:src/stm32f10x_it.c **** * Description    : This function handles External interrupt Line 1 request.
 269:src/stm32f10x_it.c **** * Input          : None
 270:src/stm32f10x_it.c **** * Output         : None
 271:src/stm32f10x_it.c **** * Return         : None
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 12


 272:src/stm32f10x_it.c **** *******************************************************************************/
 273:src/stm32f10x_it.c **** 
 274:src/stm32f10x_it.c **** static bool toggle_data_key2 = FALSE;
 275:src/stm32f10x_it.c **** 
 276:src/stm32f10x_it.c **** void EXTI1_IRQHandler(void)
 277:src/stm32f10x_it.c **** {
 390              		.loc 1 277 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394 0000 08B5     		push	{r3, lr}
 395              	.LCFI2:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 3, -8
 398              		.cfi_offset 14, -4
 278:src/stm32f10x_it.c ****     if(EXTI_GetITStatus(GPIO_EXTI_Line_KEY2) != RESET) {
 399              		.loc 1 278 0
 400 0002 0220     		movs	r0, #2
 401 0004 FFF7FEFF 		bl	EXTI_GetITStatus
 402              	.LVL7:
 403 0008 48B3     		cbz	r0, .L29
 279:src/stm32f10x_it.c ****         printf("Right-USER Button Press\r\n");
 404              		.loc 1 279 0
 405 000a 1548     		ldr	r0, .L35
 406 000c FFF7FEFF 		bl	puts
 407              	.LVL8:
 280:src/stm32f10x_it.c **** 
 281:src/stm32f10x_it.c ****         if(TRUE == g_TestProcessState)
 408              		.loc 1 281 0
 409 0010 144B     		ldr	r3, .L35+4
 410 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 411 0014 012B     		cmp	r3, #1
 412 0016 1FD1     		bne	.L31
 282:src/stm32f10x_it.c ****         {
 283:src/stm32f10x_it.c ****             Send_Buffer[0] = 0x06;
 413              		.loc 1 283 0
 414 0018 0622     		movs	r2, #6
 415 001a 134B     		ldr	r3, .L35+8
 416 001c 1A70     		strb	r2, [r3]
 284:src/stm32f10x_it.c **** 
 285:src/stm32f10x_it.c ****             if(toggle_data_key2)
 417              		.loc 1 285 0
 418 001e 134B     		ldr	r3, .L35+12
 419 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 420 0022 33B1     		cbz	r3, .L32
 286:src/stm32f10x_it.c ****             {
 287:src/stm32f10x_it.c ****                 toggle_data_key2 = FALSE;
 421              		.loc 1 287 0
 422 0024 0022     		movs	r2, #0
 423 0026 114B     		ldr	r3, .L35+12
 424 0028 1A70     		strb	r2, [r3]
 288:src/stm32f10x_it.c ****                 Send_Buffer[1] = 0x01;
 425              		.loc 1 288 0
 426 002a 0122     		movs	r2, #1
 427 002c 0E4B     		ldr	r3, .L35+8
 428 002e 5A70     		strb	r2, [r3, #1]
 429 0030 05E0     		b	.L33
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 13


 430              	.L32:
 289:src/stm32f10x_it.c ****             }
 290:src/stm32f10x_it.c ****             else
 291:src/stm32f10x_it.c ****             {
 292:src/stm32f10x_it.c ****                 toggle_data_key2 = TRUE;
 431              		.loc 1 292 0
 432 0032 0122     		movs	r2, #1
 433 0034 0D4B     		ldr	r3, .L35+12
 434 0036 1A70     		strb	r2, [r3]
 293:src/stm32f10x_it.c ****                 Send_Buffer[1] = 0x00;
 435              		.loc 1 293 0
 436 0038 0022     		movs	r2, #0
 437 003a 0B4B     		ldr	r3, .L35+8
 438 003c 5A70     		strb	r2, [r3, #1]
 439              	.L33:
 294:src/stm32f10x_it.c ****             }
 295:src/stm32f10x_it.c **** 
 296:src/stm32f10x_it.c ****             UserToPMABufferCopy(Send_Buffer, ENDP1_TXADDR, 2);
 440              		.loc 1 296 0
 441 003e 0222     		movs	r2, #2
 442 0040 4FF48071 		mov	r1, #256
 443 0044 0848     		ldr	r0, .L35+8
 444 0046 FFF7FEFF 		bl	UserToPMABufferCopy
 445              	.LVL9:
 297:src/stm32f10x_it.c ****             SetEPTxCount(ENDP1, 2);
 446              		.loc 1 297 0
 447 004a 0221     		movs	r1, #2
 448 004c 0120     		movs	r0, #1
 449 004e FFF7FEFF 		bl	SetEPTxCount
 450              	.LVL10:
 298:src/stm32f10x_it.c ****             SetEPTxValid(ENDP1);
 451              		.loc 1 298 0
 452 0052 0120     		movs	r0, #1
 453 0054 FFF7FEFF 		bl	SetEPTxValid
 454              	.LVL11:
 455              	.L31:
 299:src/stm32f10x_it.c ****         }
 300:src/stm32f10x_it.c **** 
 301:src/stm32f10x_it.c ****         EXTI_ClearITPendingBit(GPIO_EXTI_Line_KEY2);
 456              		.loc 1 301 0
 457 0058 0220     		movs	r0, #2
 458 005a FFF7FEFF 		bl	EXTI_ClearITPendingBit
 459              	.LVL12:
 460              	.L29:
 461 005e 08BD     		pop	{r3, pc}
 462              	.L36:
 463              		.align	2
 464              	.L35:
 465 0060 18000000 		.word	.LC1
 466 0064 00000000 		.word	g_TestProcessState
 467 0068 00000000 		.word	Send_Buffer
 468 006c 00000000 		.word	.LANCHOR1
 469              		.cfi_endproc
 470              	.LFE44:
 472              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 473              		.align	2
 474              		.global	EXTI2_IRQHandler
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 14


 475              		.thumb
 476              		.thumb_func
 478              	EXTI2_IRQHandler:
 479              	.LFB45:
 302:src/stm32f10x_it.c ****     }
 303:src/stm32f10x_it.c **** }
 304:src/stm32f10x_it.c **** 
 305:src/stm32f10x_it.c **** /*******************************************************************************
 306:src/stm32f10x_it.c **** * Function Name  : EXTI2_IRQHandler
 307:src/stm32f10x_it.c **** * Description    : This function handles External interrupt Line 2 request.
 308:src/stm32f10x_it.c **** * Input          : None
 309:src/stm32f10x_it.c **** * Output         : None
 310:src/stm32f10x_it.c **** * Return         : None
 311:src/stm32f10x_it.c **** *******************************************************************************/
 312:src/stm32f10x_it.c **** void EXTI2_IRQHandler(void)
 313:src/stm32f10x_it.c **** {
 480              		.loc 1 313 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 485 0000 7047     		bx	lr
 486              		.cfi_endproc
 487              	.LFE45:
 489 0002 00BF     		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 490              		.align	2
 491              		.global	EXTI3_IRQHandler
 492              		.thumb
 493              		.thumb_func
 495              	EXTI3_IRQHandler:
 496              	.LFB46:
 314:src/stm32f10x_it.c **** }
 315:src/stm32f10x_it.c **** 
 316:src/stm32f10x_it.c **** /*******************************************************************************
 317:src/stm32f10x_it.c **** * Function Name  : EXTI3_IRQHandler
 318:src/stm32f10x_it.c **** * Description    : This function handles External interrupt Line 3 request.
 319:src/stm32f10x_it.c **** * Input          : None
 320:src/stm32f10x_it.c **** * Output         : None
 321:src/stm32f10x_it.c **** * Return         : None
 322:src/stm32f10x_it.c **** *******************************************************************************/
 323:src/stm32f10x_it.c **** void EXTI3_IRQHandler(void)
 324:src/stm32f10x_it.c **** {
 497              		.loc 1 324 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
 502 0000 7047     		bx	lr
 503              		.cfi_endproc
 504              	.LFE46:
 506 0002 00BF     		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 507              		.align	2
 508              		.global	EXTI4_IRQHandler
 509              		.thumb
 510              		.thumb_func
 512              	EXTI4_IRQHandler:
 513              	.LFB47:
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 15


 325:src/stm32f10x_it.c **** }
 326:src/stm32f10x_it.c **** 
 327:src/stm32f10x_it.c **** /*******************************************************************************
 328:src/stm32f10x_it.c **** * Function Name  : EXTI4_IRQHandler
 329:src/stm32f10x_it.c **** * Description    : This function handles External interrupt Line 4 request.
 330:src/stm32f10x_it.c **** * Input          : None
 331:src/stm32f10x_it.c **** * Output         : None
 332:src/stm32f10x_it.c **** * Return         : None
 333:src/stm32f10x_it.c **** *******************************************************************************/
 334:src/stm32f10x_it.c **** void EXTI4_IRQHandler(void)
 335:src/stm32f10x_it.c **** {
 514              		.loc 1 335 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 519 0000 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE47:
 523 0002 00BF     		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 524              		.align	2
 525              		.global	DMA1_Channel1_IRQHandler
 526              		.thumb
 527              		.thumb_func
 529              	DMA1_Channel1_IRQHandler:
 530              	.LFB48:
 336:src/stm32f10x_it.c **** }
 337:src/stm32f10x_it.c **** 
 338:src/stm32f10x_it.c **** /*******************************************************************************
 339:src/stm32f10x_it.c **** * Function Name  : DMA1_Channel1_IRQHandler
 340:src/stm32f10x_it.c **** * Description    : This function handles DMA1 Channel 1 interrupt request.
 341:src/stm32f10x_it.c **** * Input          : None
 342:src/stm32f10x_it.c **** * Output         : None
 343:src/stm32f10x_it.c **** * Return         : None
 344:src/stm32f10x_it.c **** *******************************************************************************/
 345:src/stm32f10x_it.c **** void DMA1_Channel1_IRQHandler(void)
 346:src/stm32f10x_it.c **** {
 531              		.loc 1 346 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		.loc 1 346 0
 536 0000 08B5     		push	{r3, lr}
 537              	.LCFI3:
 538              		.cfi_def_cfa_offset 8
 539              		.cfi_offset 3, -8
 540              		.cfi_offset 14, -4
 347:src/stm32f10x_it.c ****     Send_Buffer[0] = 0x07;
 541              		.loc 1 347 0
 542 0002 0722     		movs	r2, #7
 543 0004 104B     		ldr	r3, .L43
 544 0006 1A70     		strb	r2, [r3]
 348:src/stm32f10x_it.c **** 
 349:src/stm32f10x_it.c ****     if((ADC_ConvertedValueX >>4) - (ADC_ConvertedValueX_1 >>4) > 4)
 545              		.loc 1 349 0
 546 0008 104B     		ldr	r3, .L43+4
 547 000a 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 16


 548 000c 1B09     		lsrs	r3, r3, #4
 549 000e 104A     		ldr	r2, .L43+8
 550 0010 1268     		ldr	r2, [r2]
 551 0012 A3EB1212 		sub	r2, r3, r2, lsr #4
 552 0016 042A     		cmp	r2, #4
 553 0018 11D9     		bls	.L41
 350:src/stm32f10x_it.c ****     {
 351:src/stm32f10x_it.c ****         Send_Buffer[1] = (uint8_t)(ADC_ConvertedValueX >>4);
 554              		.loc 1 351 0
 555 001a 0B48     		ldr	r0, .L43
 556 001c 4370     		strb	r3, [r0, #1]
 352:src/stm32f10x_it.c ****         UserToPMABufferCopy(Send_Buffer, ENDP1_TXADDR, 2);
 557              		.loc 1 352 0
 558 001e 0222     		movs	r2, #2
 559 0020 4FF48071 		mov	r1, #256
 560 0024 FFF7FEFF 		bl	UserToPMABufferCopy
 561              	.LVL13:
 353:src/stm32f10x_it.c ****         SetEPTxCount(ENDP1, 2);
 562              		.loc 1 353 0
 563 0028 0221     		movs	r1, #2
 564 002a 0120     		movs	r0, #1
 565 002c FFF7FEFF 		bl	SetEPTxCount
 566              	.LVL14:
 354:src/stm32f10x_it.c ****         SetEPTxValid(ENDP1);
 567              		.loc 1 354 0
 568 0030 0120     		movs	r0, #1
 569 0032 FFF7FEFF 		bl	SetEPTxValid
 570              	.LVL15:
 355:src/stm32f10x_it.c ****         ADC_ConvertedValueX_1 = ADC_ConvertedValueX;
 571              		.loc 1 355 0
 572 0036 054B     		ldr	r3, .L43+4
 573 0038 1A68     		ldr	r2, [r3]
 574 003a 054B     		ldr	r3, .L43+8
 575 003c 1A60     		str	r2, [r3]
 576              	.L41:
 356:src/stm32f10x_it.c ****     }
 357:src/stm32f10x_it.c **** 
 358:src/stm32f10x_it.c ****     DMA_ClearFlag(DMA1_FLAG_TC1);
 577              		.loc 1 358 0
 578 003e 0220     		movs	r0, #2
 579 0040 FFF7FEFF 		bl	DMA_ClearFlag
 580              	.LVL16:
 581 0044 08BD     		pop	{r3, pc}
 582              	.L44:
 583 0046 00BF     		.align	2
 584              	.L43:
 585 0048 00000000 		.word	Send_Buffer
 586 004c 00000000 		.word	ADC_ConvertedValueX
 587 0050 00000000 		.word	ADC_ConvertedValueX_1
 588              		.cfi_endproc
 589              	.LFE48:
 591              		.section	.text.DMA1_Channel2_IRQHandler,"ax",%progbits
 592              		.align	2
 593              		.global	DMA1_Channel2_IRQHandler
 594              		.thumb
 595              		.thumb_func
 597              	DMA1_Channel2_IRQHandler:
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 17


 598              	.LFB49:
 359:src/stm32f10x_it.c **** }
 360:src/stm32f10x_it.c **** 
 361:src/stm32f10x_it.c **** /*******************************************************************************
 362:src/stm32f10x_it.c **** * Function Name  : DMA1_Channel2_IRQHandler
 363:src/stm32f10x_it.c **** * Description    : This function handles DMA1 Channel 2 interrupt request.
 364:src/stm32f10x_it.c **** * Input          : None
 365:src/stm32f10x_it.c **** * Output         : None
 366:src/stm32f10x_it.c **** * Return         : None
 367:src/stm32f10x_it.c **** *******************************************************************************/
 368:src/stm32f10x_it.c **** void DMA1_Channel2_IRQHandler(void)
 369:src/stm32f10x_it.c **** {
 599              		.loc 1 369 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 604 0000 7047     		bx	lr
 605              		.cfi_endproc
 606              	.LFE49:
 608 0002 00BF     		.section	.text.DMA1_Channel3_IRQHandler,"ax",%progbits
 609              		.align	2
 610              		.global	DMA1_Channel3_IRQHandler
 611              		.thumb
 612              		.thumb_func
 614              	DMA1_Channel3_IRQHandler:
 615              	.LFB50:
 370:src/stm32f10x_it.c **** }
 371:src/stm32f10x_it.c **** 
 372:src/stm32f10x_it.c **** /*******************************************************************************
 373:src/stm32f10x_it.c **** * Function Name  : DMA1_Channel3_IRQHandler
 374:src/stm32f10x_it.c **** * Description    : This function handles DMA1 Channel 3 interrupt request.
 375:src/stm32f10x_it.c **** * Input          : None
 376:src/stm32f10x_it.c **** * Output         : None
 377:src/stm32f10x_it.c **** * Return         : None
 378:src/stm32f10x_it.c **** *******************************************************************************/
 379:src/stm32f10x_it.c **** void DMA1_Channel3_IRQHandler(void)
 380:src/stm32f10x_it.c **** {
 616              		.loc 1 380 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 7047     		bx	lr
 622              		.cfi_endproc
 623              	.LFE50:
 625 0002 00BF     		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 626              		.align	2
 627              		.global	DMA1_Channel4_IRQHandler
 628              		.thumb
 629              		.thumb_func
 631              	DMA1_Channel4_IRQHandler:
 632              	.LFB51:
 381:src/stm32f10x_it.c **** }
 382:src/stm32f10x_it.c **** 
 383:src/stm32f10x_it.c **** /*******************************************************************************
 384:src/stm32f10x_it.c **** * Function Name  : DMA1_Channel4_IRQHandler
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 18


 385:src/stm32f10x_it.c **** * Description    : This function handles DMA1 Channel 4 interrupt request.
 386:src/stm32f10x_it.c **** * Input          : None
 387:src/stm32f10x_it.c **** * Output         : None
 388:src/stm32f10x_it.c **** * Return         : None
 389:src/stm32f10x_it.c **** *******************************************************************************/
 390:src/stm32f10x_it.c **** void DMA1_Channel4_IRQHandler(void)
 391:src/stm32f10x_it.c **** {
 633              		.loc 1 391 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637              		@ link register save eliminated.
 638 0000 7047     		bx	lr
 639              		.cfi_endproc
 640              	.LFE51:
 642 0002 00BF     		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 643              		.align	2
 644              		.global	DMA1_Channel5_IRQHandler
 645              		.thumb
 646              		.thumb_func
 648              	DMA1_Channel5_IRQHandler:
 649              	.LFB52:
 392:src/stm32f10x_it.c **** }
 393:src/stm32f10x_it.c **** 
 394:src/stm32f10x_it.c **** /*******************************************************************************
 395:src/stm32f10x_it.c **** * Function Name  : DMA1_Channel5_IRQHandler
 396:src/stm32f10x_it.c **** * Description    : This function handles DMA1 Channel 5 interrupt request.
 397:src/stm32f10x_it.c **** * Input          : None
 398:src/stm32f10x_it.c **** * Output         : None
 399:src/stm32f10x_it.c **** * Return         : None
 400:src/stm32f10x_it.c **** *******************************************************************************/
 401:src/stm32f10x_it.c **** void DMA1_Channel5_IRQHandler(void)
 402:src/stm32f10x_it.c **** {
 650              		.loc 1 402 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655 0000 7047     		bx	lr
 656              		.cfi_endproc
 657              	.LFE52:
 659 0002 00BF     		.section	.text.DMA1_Channel6_IRQHandler,"ax",%progbits
 660              		.align	2
 661              		.global	DMA1_Channel6_IRQHandler
 662              		.thumb
 663              		.thumb_func
 665              	DMA1_Channel6_IRQHandler:
 666              	.LFB53:
 403:src/stm32f10x_it.c **** }
 404:src/stm32f10x_it.c **** 
 405:src/stm32f10x_it.c **** /*******************************************************************************
 406:src/stm32f10x_it.c **** * Function Name  : DMA1_Channel6_IRQHandler
 407:src/stm32f10x_it.c **** * Description    : This function handles DMA1 Channel 6 interrupt request.
 408:src/stm32f10x_it.c **** * Input          : None
 409:src/stm32f10x_it.c **** * Output         : None
 410:src/stm32f10x_it.c **** * Return         : None
 411:src/stm32f10x_it.c **** *******************************************************************************/
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 19


 412:src/stm32f10x_it.c **** void DMA1_Channel6_IRQHandler(void)
 413:src/stm32f10x_it.c **** {
 667              		.loc 1 413 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              		@ link register save eliminated.
 672 0000 7047     		bx	lr
 673              		.cfi_endproc
 674              	.LFE53:
 676 0002 00BF     		.section	.text.DMA1_Channel7_IRQHandler,"ax",%progbits
 677              		.align	2
 678              		.global	DMA1_Channel7_IRQHandler
 679              		.thumb
 680              		.thumb_func
 682              	DMA1_Channel7_IRQHandler:
 683              	.LFB54:
 414:src/stm32f10x_it.c **** }
 415:src/stm32f10x_it.c **** 
 416:src/stm32f10x_it.c **** /*******************************************************************************
 417:src/stm32f10x_it.c **** * Function Name  : DMA1_Channel7_IRQHandler
 418:src/stm32f10x_it.c **** * Description    : This function handles DMA1 Channel 7 interrupt request.
 419:src/stm32f10x_it.c **** * Input          : None
 420:src/stm32f10x_it.c **** * Output         : None
 421:src/stm32f10x_it.c **** * Return         : None
 422:src/stm32f10x_it.c **** *******************************************************************************/
 423:src/stm32f10x_it.c **** void DMA1_Channel7_IRQHandler(void)
 424:src/stm32f10x_it.c **** {
 684              		.loc 1 424 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 689 0000 7047     		bx	lr
 690              		.cfi_endproc
 691              	.LFE54:
 693 0002 00BF     		.section	.text.ADC1_2_IRQHandler,"ax",%progbits
 694              		.align	2
 695              		.global	ADC1_2_IRQHandler
 696              		.thumb
 697              		.thumb_func
 699              	ADC1_2_IRQHandler:
 700              	.LFB55:
 425:src/stm32f10x_it.c **** }
 426:src/stm32f10x_it.c **** 
 427:src/stm32f10x_it.c **** /*******************************************************************************
 428:src/stm32f10x_it.c **** * Function Name  : ADC1_2_IRQHandler
 429:src/stm32f10x_it.c **** * Description    : This function handles ADC1 and ADC2 global interrupts requests.
 430:src/stm32f10x_it.c **** * Input          : None
 431:src/stm32f10x_it.c **** * Output         : None
 432:src/stm32f10x_it.c **** * Return         : None
 433:src/stm32f10x_it.c **** *******************************************************************************/
 434:src/stm32f10x_it.c **** void ADC1_2_IRQHandler(void)
 435:src/stm32f10x_it.c **** {
 701              		.loc 1 435 0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 20


 704              		@ frame_needed = 0, uses_anonymous_args = 0
 705              		@ link register save eliminated.
 706 0000 7047     		bx	lr
 707              		.cfi_endproc
 708              	.LFE55:
 710 0002 00BF     		.section	.text.USB_HP_CAN1_TX_IRQHandler,"ax",%progbits
 711              		.align	2
 712              		.global	USB_HP_CAN1_TX_IRQHandler
 713              		.thumb
 714              		.thumb_func
 716              	USB_HP_CAN1_TX_IRQHandler:
 717              	.LFB56:
 436:src/stm32f10x_it.c **** }
 437:src/stm32f10x_it.c **** 
 438:src/stm32f10x_it.c **** /*******************************************************************************
 439:src/stm32f10x_it.c **** * Function Name  : USB_HP_CAN_TX_IRQHandler
 440:src/stm32f10x_it.c **** * Description    : This function handles USB High Priority or CAN TX interrupts 
 441:src/stm32f10x_it.c **** *                  requests.
 442:src/stm32f10x_it.c **** * Input          : None
 443:src/stm32f10x_it.c **** * Output         : None
 444:src/stm32f10x_it.c **** * Return         : None
 445:src/stm32f10x_it.c **** *******************************************************************************/
 446:src/stm32f10x_it.c **** void USB_HP_CAN1_TX_IRQHandler(void)
 447:src/stm32f10x_it.c **** {
 718              		.loc 1 447 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 723 0000 7047     		bx	lr
 724              		.cfi_endproc
 725              	.LFE56:
 727 0002 00BF     		.section	.text.USB_LP_CAN1_RX0_IRQHandler,"ax",%progbits
 728              		.align	2
 729              		.global	USB_LP_CAN1_RX0_IRQHandler
 730              		.thumb
 731              		.thumb_func
 733              	USB_LP_CAN1_RX0_IRQHandler:
 734              	.LFB57:
 448:src/stm32f10x_it.c **** }
 449:src/stm32f10x_it.c **** 
 450:src/stm32f10x_it.c **** /*******************************************************************************
 451:src/stm32f10x_it.c **** * Function Name  : USB_LP_CAN_RX0_IRQHandler
 452:src/stm32f10x_it.c **** * Description    : This function handles USB Low Priority or CAN RX0 interrupts 
 453:src/stm32f10x_it.c **** *                  requests.
 454:src/stm32f10x_it.c **** * Input          : None
 455:src/stm32f10x_it.c **** * Output         : None
 456:src/stm32f10x_it.c **** * Return         : None
 457:src/stm32f10x_it.c **** *******************************************************************************/
 458:src/stm32f10x_it.c **** void USB_LP_CAN1_RX0_IRQHandler(void)
 459:src/stm32f10x_it.c **** {
 735              		.loc 1 459 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739              		.loc 1 459 0
 740 0000 08B5     		push	{r3, lr}
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 21


 741              	.LCFI4:
 742              		.cfi_def_cfa_offset 8
 743              		.cfi_offset 3, -8
 744              		.cfi_offset 14, -4
 460:src/stm32f10x_it.c ****     USB_Istr();
 745              		.loc 1 460 0
 746 0002 FFF7FEFF 		bl	USB_Istr
 747              	.LVL17:
 748 0006 08BD     		pop	{r3, pc}
 749              		.cfi_endproc
 750              	.LFE57:
 752              		.section	.text.CAN1_RX1_IRQHandler,"ax",%progbits
 753              		.align	2
 754              		.global	CAN1_RX1_IRQHandler
 755              		.thumb
 756              		.thumb_func
 758              	CAN1_RX1_IRQHandler:
 759              	.LFB58:
 461:src/stm32f10x_it.c **** }
 462:src/stm32f10x_it.c **** 
 463:src/stm32f10x_it.c **** /*******************************************************************************
 464:src/stm32f10x_it.c **** * Function Name  : CAN_RX1_IRQHandler
 465:src/stm32f10x_it.c **** * Description    : This function handles CAN RX1 interrupt request.
 466:src/stm32f10x_it.c **** * Input          : None
 467:src/stm32f10x_it.c **** * Output         : None
 468:src/stm32f10x_it.c **** * Return         : None
 469:src/stm32f10x_it.c **** *******************************************************************************/
 470:src/stm32f10x_it.c **** void CAN1_RX1_IRQHandler(void)
 471:src/stm32f10x_it.c **** {
 760              		.loc 1 471 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764              		@ link register save eliminated.
 765 0000 7047     		bx	lr
 766              		.cfi_endproc
 767              	.LFE58:
 769 0002 00BF     		.section	.text.CAN1_SCE_IRQHandler,"ax",%progbits
 770              		.align	2
 771              		.global	CAN1_SCE_IRQHandler
 772              		.thumb
 773              		.thumb_func
 775              	CAN1_SCE_IRQHandler:
 776              	.LFB59:
 472:src/stm32f10x_it.c **** }
 473:src/stm32f10x_it.c **** 
 474:src/stm32f10x_it.c **** /*******************************************************************************
 475:src/stm32f10x_it.c **** * Function Name  : CAN_SCE_IRQHandler
 476:src/stm32f10x_it.c **** * Description    : This function handles CAN SCE interrupt request.
 477:src/stm32f10x_it.c **** * Input          : None
 478:src/stm32f10x_it.c **** * Output         : None
 479:src/stm32f10x_it.c **** * Return         : None
 480:src/stm32f10x_it.c **** *******************************************************************************/
 481:src/stm32f10x_it.c **** void CAN1_SCE_IRQHandler(void)
 482:src/stm32f10x_it.c **** {
 777              		.loc 1 482 0
 778              		.cfi_startproc
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 22


 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              		@ link register save eliminated.
 782 0000 7047     		bx	lr
 783              		.cfi_endproc
 784              	.LFE59:
 786 0002 00BF     		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 787              		.align	2
 788              		.global	EXTI9_5_IRQHandler
 789              		.thumb
 790              		.thumb_func
 792              	EXTI9_5_IRQHandler:
 793              	.LFB60:
 483:src/stm32f10x_it.c **** }
 484:src/stm32f10x_it.c **** 
 485:src/stm32f10x_it.c **** /*******************************************************************************
 486:src/stm32f10x_it.c **** * Function Name  : EXTI9_5_IRQHandler
 487:src/stm32f10x_it.c **** * Description    : This function handles External lines 9 to 5 interrupt request.
 488:src/stm32f10x_it.c **** * Input          : None
 489:src/stm32f10x_it.c **** * Output         : None
 490:src/stm32f10x_it.c **** * Return         : None
 491:src/stm32f10x_it.c **** *******************************************************************************/
 492:src/stm32f10x_it.c **** void EXTI9_5_IRQHandler(void)
 493:src/stm32f10x_it.c **** {
 794              		.loc 1 493 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799 0000 7047     		bx	lr
 800              		.cfi_endproc
 801              	.LFE60:
 803 0002 00BF     		.section	.text.TIM1_BRK_IRQHandler,"ax",%progbits
 804              		.align	2
 805              		.global	TIM1_BRK_IRQHandler
 806              		.thumb
 807              		.thumb_func
 809              	TIM1_BRK_IRQHandler:
 810              	.LFB61:
 494:src/stm32f10x_it.c **** #ifdef  BOARD_DEF_MANGO_Z1
 495:src/stm32f10x_it.c ****     if(EXTI_GetITStatus(GPIO_EXTI_Line_RF_GPIO0) != RESET)
 496:src/stm32f10x_it.c ****     {
 497:src/stm32f10x_it.c ****         basicRfRxFrmDoneIsr();
 498:src/stm32f10x_it.c ****         EXTI_ClearITPendingBit(GPIO_EXTI_Line_RF_GPIO0);
 499:src/stm32f10x_it.c ****     }
 500:src/stm32f10x_it.c **** #endif
 501:src/stm32f10x_it.c **** }
 502:src/stm32f10x_it.c **** 
 503:src/stm32f10x_it.c **** /*******************************************************************************
 504:src/stm32f10x_it.c **** * Function Name  : TIM1_BRK_IRQHandler
 505:src/stm32f10x_it.c **** * Description    : This function handles TIM1 Break interrupt request.
 506:src/stm32f10x_it.c **** * Input          : None
 507:src/stm32f10x_it.c **** * Output         : None
 508:src/stm32f10x_it.c **** * Return         : None
 509:src/stm32f10x_it.c **** *******************************************************************************/
 510:src/stm32f10x_it.c **** void TIM1_BRK_IRQHandler(void)
 511:src/stm32f10x_it.c **** {
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 23


 811              		.loc 1 511 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 816 0000 7047     		bx	lr
 817              		.cfi_endproc
 818              	.LFE61:
 820 0002 00BF     		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 821              		.align	2
 822              		.global	TIM1_UP_IRQHandler
 823              		.thumb
 824              		.thumb_func
 826              	TIM1_UP_IRQHandler:
 827              	.LFB62:
 512:src/stm32f10x_it.c **** }
 513:src/stm32f10x_it.c **** 
 514:src/stm32f10x_it.c **** /*******************************************************************************
 515:src/stm32f10x_it.c **** * Function Name  : TIM1_UP_IRQHandler
 516:src/stm32f10x_it.c **** * Description    : This function handles TIM1 overflow and update interrupt 
 517:src/stm32f10x_it.c **** *                  request.
 518:src/stm32f10x_it.c **** * Input          : None
 519:src/stm32f10x_it.c **** * Output         : None
 520:src/stm32f10x_it.c **** * Return         : None
 521:src/stm32f10x_it.c **** *******************************************************************************/
 522:src/stm32f10x_it.c **** void TIM1_UP_IRQHandler(void)
 523:src/stm32f10x_it.c **** {
 828              		.loc 1 523 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 833 0000 7047     		bx	lr
 834              		.cfi_endproc
 835              	.LFE62:
 837 0002 00BF     		.section	.text.TIM1_TRG_COM_IRQHandler,"ax",%progbits
 838              		.align	2
 839              		.global	TIM1_TRG_COM_IRQHandler
 840              		.thumb
 841              		.thumb_func
 843              	TIM1_TRG_COM_IRQHandler:
 844              	.LFB63:
 524:src/stm32f10x_it.c **** }
 525:src/stm32f10x_it.c **** 
 526:src/stm32f10x_it.c **** /*******************************************************************************
 527:src/stm32f10x_it.c **** * Function Name  : TIM1_TRG_COM_IRQHandler
 528:src/stm32f10x_it.c **** * Description    : This function handles TIM1 Trigger and commutation interrupts 
 529:src/stm32f10x_it.c **** *                  requests.
 530:src/stm32f10x_it.c **** * Input          : None
 531:src/stm32f10x_it.c **** * Output         : None
 532:src/stm32f10x_it.c **** * Return         : None
 533:src/stm32f10x_it.c **** *******************************************************************************/
 534:src/stm32f10x_it.c **** void TIM1_TRG_COM_IRQHandler(void)
 535:src/stm32f10x_it.c **** {
 845              		.loc 1 535 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 24


 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 850 0000 7047     		bx	lr
 851              		.cfi_endproc
 852              	.LFE63:
 854 0002 00BF     		.section	.text.TIM1_CC_IRQHandler,"ax",%progbits
 855              		.align	2
 856              		.global	TIM1_CC_IRQHandler
 857              		.thumb
 858              		.thumb_func
 860              	TIM1_CC_IRQHandler:
 861              	.LFB64:
 536:src/stm32f10x_it.c **** }
 537:src/stm32f10x_it.c **** 
 538:src/stm32f10x_it.c **** /*******************************************************************************
 539:src/stm32f10x_it.c **** * Function Name  : TIM1_CC_IRQHandler
 540:src/stm32f10x_it.c **** * Description    : This function handles TIM1 capture compare interrupt request.
 541:src/stm32f10x_it.c **** * Input          : None
 542:src/stm32f10x_it.c **** * Output         : None
 543:src/stm32f10x_it.c **** * Return         : None
 544:src/stm32f10x_it.c **** *******************************************************************************/
 545:src/stm32f10x_it.c **** void TIM1_CC_IRQHandler(void)
 546:src/stm32f10x_it.c **** {
 862              		.loc 1 546 0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866              		@ link register save eliminated.
 867 0000 7047     		bx	lr
 868              		.cfi_endproc
 869              	.LFE64:
 871 0002 00BF     		.section	.text.TIM2_IRQHandler,"ax",%progbits
 872              		.align	2
 873              		.global	TIM2_IRQHandler
 874              		.thumb
 875              		.thumb_func
 877              	TIM2_IRQHandler:
 878              	.LFB65:
 547:src/stm32f10x_it.c **** }
 548:src/stm32f10x_it.c **** 
 549:src/stm32f10x_it.c **** /*******************************************************************************
 550:src/stm32f10x_it.c **** * Function Name  : TIM2_IRQHandler
 551:src/stm32f10x_it.c **** * Description    : This function handles TIM2 global interrupt request.
 552:src/stm32f10x_it.c **** * Input          : None
 553:src/stm32f10x_it.c **** * Output         : None
 554:src/stm32f10x_it.c **** * Return         : None
 555:src/stm32f10x_it.c **** *******************************************************************************/
 556:src/stm32f10x_it.c **** void TIM2_IRQHandler(void)
 557:src/stm32f10x_it.c **** {
 879              		.loc 1 557 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 883              		@ link register save eliminated.
 884 0000 7047     		bx	lr
 885              		.cfi_endproc
 886              	.LFE65:
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 25


 888 0002 00BF     		.section	.text.TIM3_IRQHandler,"ax",%progbits
 889              		.align	2
 890              		.global	TIM3_IRQHandler
 891              		.thumb
 892              		.thumb_func
 894              	TIM3_IRQHandler:
 895              	.LFB66:
 558:src/stm32f10x_it.c **** }
 559:src/stm32f10x_it.c **** 
 560:src/stm32f10x_it.c **** /*******************************************************************************
 561:src/stm32f10x_it.c **** * Function Name  : TIM3_IRQHandler
 562:src/stm32f10x_it.c **** * Description    : This function handles TIM3 global interrupt request.
 563:src/stm32f10x_it.c **** * Input          : None
 564:src/stm32f10x_it.c **** * Output         : None
 565:src/stm32f10x_it.c **** * Return         : None
 566:src/stm32f10x_it.c **** *******************************************************************************/
 567:src/stm32f10x_it.c **** void TIM3_IRQHandler(void)
 568:src/stm32f10x_it.c **** {
 896              		.loc 1 568 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901 0000 7047     		bx	lr
 902              		.cfi_endproc
 903              	.LFE66:
 905 0002 00BF     		.section	.text.TIM4_IRQHandler,"ax",%progbits
 906              		.align	2
 907              		.global	TIM4_IRQHandler
 908              		.thumb
 909              		.thumb_func
 911              	TIM4_IRQHandler:
 912              	.LFB67:
 569:src/stm32f10x_it.c **** }
 570:src/stm32f10x_it.c **** 
 571:src/stm32f10x_it.c **** /*******************************************************************************
 572:src/stm32f10x_it.c **** * Function Name  : TIM4_IRQHandler
 573:src/stm32f10x_it.c **** * Description    : This function handles TIM4 global interrupt request.
 574:src/stm32f10x_it.c **** * Input          : None
 575:src/stm32f10x_it.c **** * Output         : None
 576:src/stm32f10x_it.c **** * Return         : None
 577:src/stm32f10x_it.c **** *******************************************************************************/
 578:src/stm32f10x_it.c **** void TIM4_IRQHandler(void)
 579:src/stm32f10x_it.c **** {
 913              		.loc 1 579 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 0
 916              		@ frame_needed = 0, uses_anonymous_args = 0
 917              		@ link register save eliminated.
 918 0000 7047     		bx	lr
 919              		.cfi_endproc
 920              	.LFE67:
 922 0002 00BF     		.section	.text.I2C1_EV_IRQHandler,"ax",%progbits
 923              		.align	2
 924              		.global	I2C1_EV_IRQHandler
 925              		.thumb
 926              		.thumb_func
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 26


 928              	I2C1_EV_IRQHandler:
 929              	.LFB68:
 580:src/stm32f10x_it.c **** }
 581:src/stm32f10x_it.c **** 
 582:src/stm32f10x_it.c **** /*******************************************************************************
 583:src/stm32f10x_it.c **** * Function Name  : I2C1_EV_IRQHandler
 584:src/stm32f10x_it.c **** * Description    : This function handles I2C1 Event interrupt request.
 585:src/stm32f10x_it.c **** * Input          : None
 586:src/stm32f10x_it.c **** * Output         : None
 587:src/stm32f10x_it.c **** * Return         : None
 588:src/stm32f10x_it.c **** *******************************************************************************/
 589:src/stm32f10x_it.c **** void I2C1_EV_IRQHandler(void)
 590:src/stm32f10x_it.c **** {
 930              		.loc 1 590 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 935 0000 7047     		bx	lr
 936              		.cfi_endproc
 937              	.LFE68:
 939 0002 00BF     		.section	.text.I2C1_ER_IRQHandler,"ax",%progbits
 940              		.align	2
 941              		.global	I2C1_ER_IRQHandler
 942              		.thumb
 943              		.thumb_func
 945              	I2C1_ER_IRQHandler:
 946              	.LFB69:
 591:src/stm32f10x_it.c **** }
 592:src/stm32f10x_it.c **** 
 593:src/stm32f10x_it.c **** /*******************************************************************************
 594:src/stm32f10x_it.c **** * Function Name  : I2C1_ER_IRQHandler
 595:src/stm32f10x_it.c **** * Description    : This function handles I2C1 Error interrupt request.
 596:src/stm32f10x_it.c **** * Input          : None
 597:src/stm32f10x_it.c **** * Output         : None
 598:src/stm32f10x_it.c **** * Return         : None
 599:src/stm32f10x_it.c **** *******************************************************************************/
 600:src/stm32f10x_it.c **** void I2C1_ER_IRQHandler(void)
 601:src/stm32f10x_it.c **** {
 947              		.loc 1 601 0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 0
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 951              		@ link register save eliminated.
 952 0000 7047     		bx	lr
 953              		.cfi_endproc
 954              	.LFE69:
 956 0002 00BF     		.section	.text.I2C2_EV_IRQHandler,"ax",%progbits
 957              		.align	2
 958              		.global	I2C2_EV_IRQHandler
 959              		.thumb
 960              		.thumb_func
 962              	I2C2_EV_IRQHandler:
 963              	.LFB70:
 602:src/stm32f10x_it.c **** }
 603:src/stm32f10x_it.c **** 
 604:src/stm32f10x_it.c **** /*******************************************************************************
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 27


 605:src/stm32f10x_it.c **** * Function Name  : I2C2_EV_IRQHandler
 606:src/stm32f10x_it.c **** * Description    : This function handles I2C2 Event interrupt request.
 607:src/stm32f10x_it.c **** * Input          : None
 608:src/stm32f10x_it.c **** * Output         : None
 609:src/stm32f10x_it.c **** * Return         : None
 610:src/stm32f10x_it.c **** *******************************************************************************/
 611:src/stm32f10x_it.c **** void I2C2_EV_IRQHandler(void)
 612:src/stm32f10x_it.c **** {
 964              		.loc 1 612 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 0
 967              		@ frame_needed = 0, uses_anonymous_args = 0
 968              		@ link register save eliminated.
 969 0000 7047     		bx	lr
 970              		.cfi_endproc
 971              	.LFE70:
 973 0002 00BF     		.section	.text.I2C2_ER_IRQHandler,"ax",%progbits
 974              		.align	2
 975              		.global	I2C2_ER_IRQHandler
 976              		.thumb
 977              		.thumb_func
 979              	I2C2_ER_IRQHandler:
 980              	.LFB71:
 613:src/stm32f10x_it.c **** }
 614:src/stm32f10x_it.c **** 
 615:src/stm32f10x_it.c **** /*******************************************************************************
 616:src/stm32f10x_it.c **** * Function Name  : I2C2_ER_IRQHandler
 617:src/stm32f10x_it.c **** * Description    : This function handles I2C2 Error interrupt request.
 618:src/stm32f10x_it.c **** * Input          : None
 619:src/stm32f10x_it.c **** * Output         : None
 620:src/stm32f10x_it.c **** * Return         : None
 621:src/stm32f10x_it.c **** *******************************************************************************/
 622:src/stm32f10x_it.c **** void I2C2_ER_IRQHandler(void)
 623:src/stm32f10x_it.c **** {
 981              		.loc 1 623 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985              		@ link register save eliminated.
 986 0000 7047     		bx	lr
 987              		.cfi_endproc
 988              	.LFE71:
 990 0002 00BF     		.section	.text.SPI1_IRQHandler,"ax",%progbits
 991              		.align	2
 992              		.global	SPI1_IRQHandler
 993              		.thumb
 994              		.thumb_func
 996              	SPI1_IRQHandler:
 997              	.LFB72:
 624:src/stm32f10x_it.c **** }
 625:src/stm32f10x_it.c **** 
 626:src/stm32f10x_it.c **** /*******************************************************************************
 627:src/stm32f10x_it.c **** * Function Name  : SPI1_IRQHandler
 628:src/stm32f10x_it.c **** * Description    : This function handles SPI1 global interrupt request.
 629:src/stm32f10x_it.c **** * Input          : None
 630:src/stm32f10x_it.c **** * Output         : None
 631:src/stm32f10x_it.c **** * Return         : None
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 28


 632:src/stm32f10x_it.c **** *******************************************************************************/
 633:src/stm32f10x_it.c **** void SPI1_IRQHandler(void)
 634:src/stm32f10x_it.c **** {
 998              		.loc 1 634 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002              		@ link register save eliminated.
 1003 0000 7047     		bx	lr
 1004              		.cfi_endproc
 1005              	.LFE72:
 1007 0002 00BF     		.section	.text.SPI2_IRQHandler,"ax",%progbits
 1008              		.align	2
 1009              		.global	SPI2_IRQHandler
 1010              		.thumb
 1011              		.thumb_func
 1013              	SPI2_IRQHandler:
 1014              	.LFB73:
 635:src/stm32f10x_it.c **** }
 636:src/stm32f10x_it.c **** 
 637:src/stm32f10x_it.c **** /*******************************************************************************
 638:src/stm32f10x_it.c **** * Function Name  : SPI2_IRQHandler
 639:src/stm32f10x_it.c **** * Description    : This function handles SPI2 global interrupt request.
 640:src/stm32f10x_it.c **** * Input          : None
 641:src/stm32f10x_it.c **** * Output         : None
 642:src/stm32f10x_it.c **** * Return         : None
 643:src/stm32f10x_it.c **** *******************************************************************************/
 644:src/stm32f10x_it.c **** void SPI2_IRQHandler(void)
 645:src/stm32f10x_it.c **** {
 1015              		.loc 1 645 0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 1019              		@ link register save eliminated.
 1020 0000 7047     		bx	lr
 1021              		.cfi_endproc
 1022              	.LFE73:
 1024 0002 00BF     		.section	.text.USART1_IRQHandler,"ax",%progbits
 1025              		.align	2
 1026              		.global	USART1_IRQHandler
 1027              		.thumb
 1028              		.thumb_func
 1030              	USART1_IRQHandler:
 1031              	.LFB74:
 646:src/stm32f10x_it.c **** }
 647:src/stm32f10x_it.c **** 
 648:src/stm32f10x_it.c **** /*******************************************************************************
 649:src/stm32f10x_it.c **** * Function Name  : USART1_IRQHandler
 650:src/stm32f10x_it.c **** * Description    : This function handles USART1 global interrupt request.
 651:src/stm32f10x_it.c **** * Input          : None
 652:src/stm32f10x_it.c **** * Output         : None
 653:src/stm32f10x_it.c **** * Return         : None
 654:src/stm32f10x_it.c **** *******************************************************************************/
 655:src/stm32f10x_it.c **** void USART1_IRQHandler(void)
 656:src/stm32f10x_it.c **** {
 1032              		.loc 1 656 0
 1033              		.cfi_startproc
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 29


 1034              		@ args = 0, pretend = 0, frame = 0
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
 1036              		@ link register save eliminated.
 1037 0000 7047     		bx	lr
 1038              		.cfi_endproc
 1039              	.LFE74:
 1041 0002 00BF     		.section	.text.USART2_IRQHandler,"ax",%progbits
 1042              		.align	2
 1043              		.global	USART2_IRQHandler
 1044              		.thumb
 1045              		.thumb_func
 1047              	USART2_IRQHandler:
 1048              	.LFB75:
 657:src/stm32f10x_it.c **** }
 658:src/stm32f10x_it.c **** 
 659:src/stm32f10x_it.c **** /*******************************************************************************
 660:src/stm32f10x_it.c **** * Function Name  : USART2_IRQHandler
 661:src/stm32f10x_it.c **** * Description    : This function handles USART2 global interrupt request.
 662:src/stm32f10x_it.c **** * Input          : None
 663:src/stm32f10x_it.c **** * Output         : None
 664:src/stm32f10x_it.c **** * Return         : None
 665:src/stm32f10x_it.c **** *******************************************************************************/
 666:src/stm32f10x_it.c **** void USART2_IRQHandler(void)
 667:src/stm32f10x_it.c **** {
 1049              		.loc 1 667 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053              		@ link register save eliminated.
 1054 0000 7047     		bx	lr
 1055              		.cfi_endproc
 1056              	.LFE75:
 1058 0002 00BF     		.section	.text.USART3_IRQHandler,"ax",%progbits
 1059              		.align	2
 1060              		.global	USART3_IRQHandler
 1061              		.thumb
 1062              		.thumb_func
 1064              	USART3_IRQHandler:
 1065              	.LFB76:
 668:src/stm32f10x_it.c **** }
 669:src/stm32f10x_it.c **** 
 670:src/stm32f10x_it.c **** /*******************************************************************************
 671:src/stm32f10x_it.c **** * Function Name  : USART3_IRQHandler
 672:src/stm32f10x_it.c **** * Description    : This function handles USART3 global interrupt request.
 673:src/stm32f10x_it.c **** * Input          : None
 674:src/stm32f10x_it.c **** * Output         : None
 675:src/stm32f10x_it.c **** * Return         : None
 676:src/stm32f10x_it.c **** *******************************************************************************/
 677:src/stm32f10x_it.c **** void USART3_IRQHandler(void)
 678:src/stm32f10x_it.c **** {
 1066              		.loc 1 678 0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 0
 1069              		@ frame_needed = 0, uses_anonymous_args = 0
 1070              		@ link register save eliminated.
 1071 0000 7047     		bx	lr
 1072              		.cfi_endproc
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 30


 1073              	.LFE76:
 1075 0002 00BF     		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 1076              		.align	2
 1077              		.global	EXTI15_10_IRQHandler
 1078              		.thumb
 1079              		.thumb_func
 1081              	EXTI15_10_IRQHandler:
 1082              	.LFB77:
 679:src/stm32f10x_it.c **** }
 680:src/stm32f10x_it.c **** 
 681:src/stm32f10x_it.c **** /*******************************************************************************
 682:src/stm32f10x_it.c **** * Function Name  : EXTI15_10_IRQHandler
 683:src/stm32f10x_it.c **** * Description    : This function handles External lines 15 to 10 interrupt request.
 684:src/stm32f10x_it.c **** * Input          : None
 685:src/stm32f10x_it.c **** * Output         : None
 686:src/stm32f10x_it.c **** * Return         : None
 687:src/stm32f10x_it.c **** *******************************************************************************/
 688:src/stm32f10x_it.c **** void EXTI15_10_IRQHandler(void)
 689:src/stm32f10x_it.c **** {
 1083              		.loc 1 689 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              		@ link register save eliminated.
 1088 0000 7047     		bx	lr
 1089              		.cfi_endproc
 1090              	.LFE77:
 1092 0002 00BF     		.section	.text.RTCAlarm_IRQHandler,"ax",%progbits
 1093              		.align	2
 1094              		.global	RTCAlarm_IRQHandler
 1095              		.thumb
 1096              		.thumb_func
 1098              	RTCAlarm_IRQHandler:
 1099              	.LFB78:
 690:src/stm32f10x_it.c **** }
 691:src/stm32f10x_it.c **** 
 692:src/stm32f10x_it.c **** /*******************************************************************************
 693:src/stm32f10x_it.c **** * Function Name  : RTCAlarm_IRQHandler
 694:src/stm32f10x_it.c **** * Description    : This function handles RTC Alarm interrupt request.
 695:src/stm32f10x_it.c **** * Input          : None
 696:src/stm32f10x_it.c **** * Output         : None
 697:src/stm32f10x_it.c **** * Return         : None
 698:src/stm32f10x_it.c **** *******************************************************************************/
 699:src/stm32f10x_it.c **** void RTCAlarm_IRQHandler(void)
 700:src/stm32f10x_it.c **** {
 1100              		.loc 1 700 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              		@ link register save eliminated.
 1105 0000 7047     		bx	lr
 1106              		.cfi_endproc
 1107              	.LFE78:
 1109 0002 00BF     		.section	.text.USBWakeUp_IRQHandler,"ax",%progbits
 1110              		.align	2
 1111              		.global	USBWakeUp_IRQHandler
 1112              		.thumb
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 31


 1113              		.thumb_func
 1115              	USBWakeUp_IRQHandler:
 1116              	.LFB79:
 701:src/stm32f10x_it.c **** }
 702:src/stm32f10x_it.c **** 
 703:src/stm32f10x_it.c **** /*******************************************************************************
 704:src/stm32f10x_it.c **** * Function Name  : USBWakeUp_IRQHandler
 705:src/stm32f10x_it.c **** * Description    : This function handles USB WakeUp interrupt request.
 706:src/stm32f10x_it.c **** * Input          : None
 707:src/stm32f10x_it.c **** * Output         : None
 708:src/stm32f10x_it.c **** * Return         : None
 709:src/stm32f10x_it.c **** *******************************************************************************/
 710:src/stm32f10x_it.c **** void USBWakeUp_IRQHandler(void)
 711:src/stm32f10x_it.c **** {
 1117              		.loc 1 711 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 1121              		.loc 1 711 0
 1122 0000 08B5     		push	{r3, lr}
 1123              	.LCFI5:
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 3, -8
 1126              		.cfi_offset 14, -4
 712:src/stm32f10x_it.c **** #if 1
 713:src/stm32f10x_it.c ****     EXTI_ClearITPendingBit(EXTI_Line18);
 1127              		.loc 1 713 0
 1128 0002 4FF48020 		mov	r0, #262144
 1129 0006 FFF7FEFF 		bl	EXTI_ClearITPendingBit
 1130              	.LVL18:
 1131 000a 08BD     		pop	{r3, pc}
 1132              		.cfi_endproc
 1133              	.LFE79:
 1135              		.comm	Send_Buffer,2,4
 1136              		.section	.rodata.str1.4,"aMS",%progbits,1
 1137              		.align	2
 1138              	.LC0:
 1139 0000 4C656674 		.ascii	"Left-WKUP Button Press\015\000"
 1139      2D574B55 
 1139      50204275 
 1139      74746F6E 
 1139      20507265 
 1140              	.LC1:
 1141 0018 52696768 		.ascii	"Right-USER Button Press\015\000"
 1141      742D5553 
 1141      45522042 
 1141      7574746F 
 1141      6E205072 
 1142              		.section	.bss.toggle_data_key1,"aw",%nobits
 1143              		.set	.LANCHOR0,. + 0
 1146              	toggle_data_key1:
 1147 0000 00       		.space	1
 1148              		.section	.bss.toggle_data_key2,"aw",%nobits
 1149              		.set	.LANCHOR1,. + 0
 1152              	toggle_data_key2:
 1153 0000 00       		.space	1
 1154              		.text
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 32


 1155              	.Letext0:
 1156              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20160926/arm-none-eabi/include/machine/_default_types
 1157              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20160926/arm-none-eabi/include/sys/_stdint.h"
 1158              		.file 4 "CMSIS/Core/CM3/stm32f10x.h"
 1159              		.file 5 "Inc/hw_config.h"
 1160              		.file 6 "STM32F10x_StdPeriph_Driver/inc/stm32f10x_exti.h"
 1161              		.file 7 "STM32_USB-FS-Device_Driver/inc/usb_mem.h"
 1162              		.file 8 "STM32_USB-FS-Device_Driver/inc/usb_regs.h"
 1163              		.file 9 "STM32F10x_StdPeriph_Driver/inc/stm32f10x_dma.h"
 1164              		.file 10 "Inc/usb/usb_istr.h"
 1165              		.file 11 "<built-in>"
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_it.c
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:20     .text.NMI_Handler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:38     .text.HardFault_Handler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:43     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:57     .text.MemManage_Handler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:62     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:76     .text.BusFault_Handler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:81     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:95     .text.UsageFault_Handler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:100    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:114    .text.SVC_Handler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:119    .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:131    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:136    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:148    .text.PendSV_Handler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:153    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:165    .text.SysTick_Handler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:170    .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:190    .text.WWDG_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:195    .text.WWDG_IRQHandler:0000000000000000 WWDG_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:207    .text.PVD_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:212    .text.PVD_IRQHandler:0000000000000000 PVD_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:224    .text.TAMPER_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:229    .text.TAMPER_IRQHandler:0000000000000000 TAMPER_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:241    .text.RTC_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:246    .text.RTC_IRQHandler:0000000000000000 RTC_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:258    .text.FLASH_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:263    .text.FLASH_IRQHandler:0000000000000000 FLASH_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:275    .text.RCC_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:280    .text.RCC_IRQHandler:0000000000000000 RCC_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:292    .text.EXTI0_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:297    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:375    .text.EXTI0_IRQHandler:0000000000000060 $d
                            *COM*:0000000000000002 Send_Buffer
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:383    .text.EXTI1_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:388    .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:465    .text.EXTI1_IRQHandler:0000000000000060 $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:473    .text.EXTI2_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:478    .text.EXTI2_IRQHandler:0000000000000000 EXTI2_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:490    .text.EXTI3_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:495    .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:507    .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:512    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:524    .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:529    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:585    .text.DMA1_Channel1_IRQHandler:0000000000000048 $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:592    .text.DMA1_Channel2_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:597    .text.DMA1_Channel2_IRQHandler:0000000000000000 DMA1_Channel2_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:609    .text.DMA1_Channel3_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:614    .text.DMA1_Channel3_IRQHandler:0000000000000000 DMA1_Channel3_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:626    .text.DMA1_Channel4_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:631    .text.DMA1_Channel4_IRQHandler:0000000000000000 DMA1_Channel4_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:643    .text.DMA1_Channel5_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:648    .text.DMA1_Channel5_IRQHandler:0000000000000000 DMA1_Channel5_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:660    .text.DMA1_Channel6_IRQHandler:0000000000000000 $t
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 34


/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:665    .text.DMA1_Channel6_IRQHandler:0000000000000000 DMA1_Channel6_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:677    .text.DMA1_Channel7_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:682    .text.DMA1_Channel7_IRQHandler:0000000000000000 DMA1_Channel7_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:694    .text.ADC1_2_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:699    .text.ADC1_2_IRQHandler:0000000000000000 ADC1_2_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:711    .text.USB_HP_CAN1_TX_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:716    .text.USB_HP_CAN1_TX_IRQHandler:0000000000000000 USB_HP_CAN1_TX_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:728    .text.USB_LP_CAN1_RX0_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:733    .text.USB_LP_CAN1_RX0_IRQHandler:0000000000000000 USB_LP_CAN1_RX0_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:753    .text.CAN1_RX1_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:758    .text.CAN1_RX1_IRQHandler:0000000000000000 CAN1_RX1_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:770    .text.CAN1_SCE_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:775    .text.CAN1_SCE_IRQHandler:0000000000000000 CAN1_SCE_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:787    .text.EXTI9_5_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:792    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:804    .text.TIM1_BRK_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:809    .text.TIM1_BRK_IRQHandler:0000000000000000 TIM1_BRK_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:821    .text.TIM1_UP_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:826    .text.TIM1_UP_IRQHandler:0000000000000000 TIM1_UP_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:838    .text.TIM1_TRG_COM_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:843    .text.TIM1_TRG_COM_IRQHandler:0000000000000000 TIM1_TRG_COM_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:855    .text.TIM1_CC_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:860    .text.TIM1_CC_IRQHandler:0000000000000000 TIM1_CC_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:872    .text.TIM2_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:877    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:889    .text.TIM3_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:894    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:906    .text.TIM4_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:911    .text.TIM4_IRQHandler:0000000000000000 TIM4_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:923    .text.I2C1_EV_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:928    .text.I2C1_EV_IRQHandler:0000000000000000 I2C1_EV_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:940    .text.I2C1_ER_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:945    .text.I2C1_ER_IRQHandler:0000000000000000 I2C1_ER_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:957    .text.I2C2_EV_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:962    .text.I2C2_EV_IRQHandler:0000000000000000 I2C2_EV_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:974    .text.I2C2_ER_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:979    .text.I2C2_ER_IRQHandler:0000000000000000 I2C2_ER_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:991    .text.SPI1_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:996    .text.SPI1_IRQHandler:0000000000000000 SPI1_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1008   .text.SPI2_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1013   .text.SPI2_IRQHandler:0000000000000000 SPI2_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1025   .text.USART1_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1030   .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1042   .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1047   .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1059   .text.USART3_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1064   .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1076   .text.EXTI15_10_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1081   .text.EXTI15_10_IRQHandler:0000000000000000 EXTI15_10_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1093   .text.RTCAlarm_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1098   .text.RTCAlarm_IRQHandler:0000000000000000 RTCAlarm_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1110   .text.USBWakeUp_IRQHandler:0000000000000000 $t
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1115   .text.USBWakeUp_IRQHandler:0000000000000000 USBWakeUp_IRQHandler
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1137   .rodata.str1.4:0000000000000000 $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1146   .bss.toggle_data_key1:0000000000000000 toggle_data_key1
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1147   .bss.toggle_data_key1:0000000000000000 $d
/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1152   .bss.toggle_data_key2:0000000000000000 toggle_data_key2
ARM GAS  /var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s 			page 35


/var/folders/g9/bbpj86ld7fx45vd1b3pqxmp00000gn/T//ccdwQJXj.s:1153   .bss.toggle_data_key2:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
TimingDelay_Decrement
EXTI_GetITStatus
puts
UserToPMABufferCopy
SetEPTxCount
SetEPTxValid
EXTI_ClearITPendingBit
g_TestProcessState
DMA_ClearFlag
ADC_ConvertedValueX
ADC_ConvertedValueX_1
USB_Istr
